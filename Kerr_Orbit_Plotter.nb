(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    431190,       8590]
NotebookOptionsPosition[    426455,       8472]
NotebookOutlinePosition[    426799,       8487]
CellTagsIndexPosition[    426756,       8484]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Plotting solutions to the Kerr Metric ", "Title",
 CellChangeTimes->{{3.7538177424672866`*^9, 
  3.753817748794074*^9}},ExpressionUUID->"9dfd0bdc-7ed8-45ca-bd9b-\
7e8ecb217741"],

Cell[CellGroupData[{

Cell["Introduction", "Subsection",
 CellChangeTimes->{{3.753818000929167*^9, 
  3.753818002843703*^9}},ExpressionUUID->"6b6d3bb5-1642-4d92-9c3f-\
292fd1c0ebcd"],

Cell["\<\
This notebook closely follows a previously developed Mathematica notebook on \
Kerr solutions, developed by Erik Tollerud and found on his personal website \
here: https://www.physics.uci.edu/~etolleru/KerrOrbitProject.pdf

The authors of this notebook have followed the above resource and reproduced \
the results to build some more intuition for what happens to orbits near \
rotating black holes.\
\>", "Text",
 CellChangeTimes->{{3.753817888261001*^9, 3.753817965707859*^9}, {
  3.7538186898647003`*^9, 
  3.7538187004140573`*^9}},ExpressionUUID->"3ed31abf-5847-4982-b7f2-\
022e7e536156"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Creating the Schwarzschild metric", "Subsection",
 CellChangeTimes->{{3.7538179931263976`*^9, 
  3.7538180308484325`*^9}},ExpressionUUID->"b6bdaded-54cd-4a40-b515-\
39729b9b6c31"],

Cell["\<\
Following the derivations in our PRL article, we can construct the kerr \
metric as follows and show the matrix representation of the metric\
\>", "Text",
 CellChangeTimes->{
  3.7538180389824934`*^9, {3.753818148103261*^9, 
   3.75381817279784*^9}},ExpressionUUID->"8b95f269-5f32-4f6f-8328-\
1d17a4c34748"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{"coords", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", "r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}]}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", 
   RowBox[{"Length", "[", "coords", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tt", "=", 
   RowBox[{
    RowBox[{"2", " ", "M", " ", 
     RowBox[{"r", "/", "\[Rho]"}]}], "-", "1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rr", "=", 
   RowBox[{"\[Rho]", "/", "\[CapitalDelta]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]\[Theta]", "=", "\[Rho]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]\[Phi]", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\[CapitalDelta]", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", " ", "M", " ", "r", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"r", "^", "2"}], "+", 
           RowBox[{"a", "^", "2"}]}], ")"}]}], ")"}], "/", "\[Rho]"}]}], 
     ")"}], 
    RowBox[{
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t\[Phi]", "=", 
   RowBox[{
    RowBox[{"-", "4"}], " ", "a", " ", "M", " ", "r", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], "^", "2"}], "/", "\[Rho]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tt", ",", "0", ",", "0", ",", "t\[Phi]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "rr", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\[Theta]\[Theta]", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t\[Phi]", ",", "0", ",", "0", ",", "\[Phi]\[Phi]"}], "}"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"metric", "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inversemetric", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Inverse", "[", "metric", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"inversemetric", " ", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{
  3.753817721853547*^9},ExpressionUUID->"75ce8816-2956-4084-8e1b-\
bd54cc949cef"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", ",", "r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}]], "Output",
 CellChangeTimes->{3.7538155898726144`*^9, 
  3.7538185459048634`*^9},ExpressionUUID->"727082d5-8c71-428b-b5bb-\
6d6f1f275452"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       FractionBox[
        RowBox[{"2", " ", "M", " ", "r"}], "\[Rho]"]}], "0", "0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", "a", " ", "M", " ", "r", " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "\[Rho]"]}]},
     {"0", 
      FractionBox["\[Rho]", "\[CapitalDelta]"], "0", "0"},
     {"0", "0", "\[Rho]", "0"},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", "a", " ", "M", " ", "r", " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "\[Rho]"]}], "0", 
      "0", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[CapitalDelta]", "+", 
         FractionBox[
          RowBox[{"2", " ", "M", " ", "r", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["a", "2"], "+", 
             SuperscriptBox["r", "2"]}], ")"}]}], "\[Rho]"]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7538155898726144`*^9, 
  3.753818545913352*^9},ExpressionUUID->"da47dc9c-b3b5-4282-bf8e-\
cc9030a585a8"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[Rho]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            SuperscriptBox["a", "2"], " ", "M", " ", "r"}], "+", 
           RowBox[{"2", " ", "M", " ", 
            SuperscriptBox["r", "3"]}], "+", 
           RowBox[{"\[CapitalDelta]", " ", "\[Rho]"}]}], ")"}]}], 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "M", " ", "r"}], "+", "\[Rho]"}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "M", " ", "r"}], "-", "\[Rho]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "M", " ", 
             SuperscriptBox["r", "3"]}], "+", 
            RowBox[{"\[CapitalDelta]", " ", "\[Rho]"}]}], ")"}]}], "-", 
         RowBox[{"8", " ", 
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox["M", "2"], " ", 
          SuperscriptBox["r", "2"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}]]}], "0", "0", 
      FractionBox[
       RowBox[{"4", " ", "a", " ", "M", " ", "r", " ", "\[Rho]"}], 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "M", " ", "r"}], "+", "\[Rho]"}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "M", " ", "r"}], "-", "\[Rho]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "M", " ", 
            SuperscriptBox["r", "3"]}], "+", 
           RowBox[{"\[CapitalDelta]", " ", "\[Rho]"}]}], ")"}]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox["M", "2"], " ", 
         SuperscriptBox["r", "2"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}]]},
     {"0", 
      FractionBox["\[CapitalDelta]", "\[Rho]"], "0", "0"},
     {"0", "0", 
      FractionBox["1", "\[Rho]"], "0"},
     {
      FractionBox[
       RowBox[{"4", " ", "a", " ", "M", " ", "r", " ", "\[Rho]"}], 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "M", " ", "r"}], "+", "\[Rho]"}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "M", " ", "r"}], "-", "\[Rho]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "M", " ", 
            SuperscriptBox["r", "3"]}], "+", 
           RowBox[{"\[CapitalDelta]", " ", "\[Rho]"}]}], ")"}]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox["M", "2"], " ", 
         SuperscriptBox["r", "2"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}]], "0", "0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[Rho]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "M", " ", "r"}], "+", "\[Rho]"}], ")"}], 
         " ", 
         SuperscriptBox[
          RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "M", " ", "r"}], "+", "\[Rho]"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "M", " ", "r"}], "-", "\[Rho]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "M", " ", 
             SuperscriptBox["r", "3"]}], "+", 
            RowBox[{"\[CapitalDelta]", " ", "\[Rho]"}]}], ")"}]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox["M", "2"], " ", 
          SuperscriptBox["r", "2"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7538155898726144`*^9, 
  3.7538185460585775`*^9},ExpressionUUID->"b12d9235-0960-489e-91fb-\
824178ccc21d"]
}, Open  ]],

Cell["\<\
By setting a=0, i.e. no angular momentum (recall that a=J/M), we recover the \
metric of a more normal Schwarzschild black hole, with all diagonal terms. \
\>", "Text",
 CellChangeTimes->{{3.7538181999462433`*^9, 
  3.75381822580752*^9}},ExpressionUUID->"07413a54-78db-4b31-9008-\
e5330a93dd19"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]", "=", 
   RowBox[{
    RowBox[{"r", "^", "2"}], "+", 
    RowBox[{
     RowBox[{"a", "^", "2"}], " ", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalDelta]", "=", 
   RowBox[{
    RowBox[{"r", "^", "2"}], " ", "-", " ", 
    RowBox[{"2", " ", "M", " ", "r"}], "+", " ", 
    RowBox[{"a", "^", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"metric", "//", "MatrixForm"}]}], "Input",ExpressionUUID->"d1818b57-\
87cc-4aa5-b7ef-a3751e7fb0af"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       FractionBox[
        RowBox[{"2", " ", "M"}], "r"]}], "0", "0", "0"},
     {"0", 
      FractionBox[
       SuperscriptBox["r", "2"], 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "M", " ", "r"}], "+", 
        SuperscriptBox["r", "2"]}]], "0", "0"},
     {"0", "0", 
      SuperscriptBox["r", "2"], "0"},
     {"0", "0", "0", 
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.753815590312791*^9, 
  3.753818546262827*^9},ExpressionUUID->"a4ee0c0d-23a1-49b9-9179-\
3f2f621fa495"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculating Christoffel symbols in the Schwarzschild Metric", \
"Subsection",
 CellChangeTimes->{{3.753818240458355*^9, 3.753818250856289*^9}, {
  3.75381860246554*^9, 
  3.75381860280226*^9}},ExpressionUUID->"395b0287-e799-48a1-a9d3-\
5ab7bf78cbda"],

Cell["\<\
Mathematica is great at doing all the heavy lifting for us in calculating \
christoffel symbols. This calculation borrowed heavily from the following \
resource: http://web.physics.ucsb.edu/~gravitybook/math/christoffel.pdf, and \
Erik Tollerud\[CloseCurlyQuote]s work.\
\>", "Text",
 CellChangeTimes->{{3.7538182536732144`*^9, 3.753818262906723*^9}, {
  3.753818332444628*^9, 3.7538183537909756`*^9}, {3.7538186078387403`*^9, 
  3.7538186095270157`*^9}, {3.75381873172572*^9, 
  3.753818736906122*^9}},ExpressionUUID->"f710b2e7-aceb-49ab-941d-\
ca521c8bdc2a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"christoffel", ":=", 
  RowBox[{"christoffel", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "2"}], ")"}], "*", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"inversemetric", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "s"}], "]"}], "]"}], ")"}], "*", 
          "\[IndentingNewLine]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"metric", "[", 
               RowBox[{"[", 
                RowBox[{"s", ",", "j"}], "]"}], "]"}], ",", 
              RowBox[{"coords", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], " ", "]"}], "+", 
            "\[IndentingNewLine]", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"metric", "[", 
               RowBox[{"[", 
                RowBox[{"s", ",", "k"}], "]"}], "]"}], ",", 
              RowBox[{"coords", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], " ", "]"}], "-", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"metric", "[", 
               RowBox[{"[", 
                RowBox[{"j", ",", "k"}], "]"}], "]"}], ",", 
              RowBox[{"coords", "[", 
               RowBox[{"[", "s", "]"}], "]"}]}], " ", "]"}]}], ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"s", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "n"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "n"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "n"}], "}"}]}], "]"}], " ", 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"listchristoffel", ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"UnsameQ", "[", 
       RowBox[{
        RowBox[{"christoffel", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}], ",", "0"}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ToString", "[", 
         RowBox[{"\[CapitalGamma]", "[", 
          RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}], ",", 
        RowBox[{"christoffel", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}]}], "}"}]}], "]"}], 
    " ", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "n"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "n"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "j"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"DeleteCases", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", "listchristoffel", "]"}], ",", "Null"}], "]"}],
      ",", "2"}], "]"}], ",", 
   RowBox[{"TableSpacing", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.753815538671025*^9, {3.7538182315463576`*^9, 3.7538182316768303`*^9}, {
   3.7538184134583178`*^9, 3.7538184181158357`*^9}, {3.753818614399902*^9, 
   3.7538186148945093`*^9}},ExpressionUUID->"c0d37d05-a2a4-4cd6-9695-\
2b440d56441c"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\[CapitalGamma][1, 2, 1]\"\>", 
     RowBox[{"-", 
      FractionBox["M", 
       RowBox[{
        RowBox[{"2", " ", "M", " ", "r"}], "-", 
        SuperscriptBox["r", "2"]}]]}]},
    {"\<\"\[CapitalGamma][2, 1, 1]\"\>", 
     FractionBox[
      RowBox[{"M", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}], 
      SuperscriptBox["r", "3"]]},
    {"\<\"\[CapitalGamma][2, 2, 2]\"\>", 
     FractionBox["M", 
      RowBox[{
       RowBox[{"2", " ", "M", " ", "r"}], "-", 
       SuperscriptBox["r", "2"]}]]},
    {"\<\"\[CapitalGamma][2, 3, 3]\"\>", 
     RowBox[{
      RowBox[{"2", " ", "M"}], "-", "r"}]},
    {"\<\"\[CapitalGamma][2, 4, 4]\"\>", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "M"}], "-", "r"}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]},
    {"\<\"\[CapitalGamma][3, 3, 2]\"\>", 
     FractionBox["1", "r"]},
    {"\<\"\[CapitalGamma][3, 4, 4]\"\>", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
    {"\<\"\[CapitalGamma][4, 4, 2]\"\>", 
     FractionBox["1", "r"]},
    {"\<\"\[CapitalGamma][4, 4, 3]\"\>", 
     RowBox[{"Cot", "[", "\[Theta]", "]"}]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[1.4]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.8]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$, TableSpacing -> {2, 2}]]]], "Output",
 CellChangeTimes->{3.753818420718774*^9, 
  3.7538185463257275`*^9},ExpressionUUID->"2bd916ec-6de1-43fc-95f1-\
43c013e86a49"]
}, Open  ]],

Cell["\<\
We can also calculate the geodesic differential equations as we\
\[CloseCurlyQuote]ve done in the course of lecture multiple times. Solutions \
to these differential equations correspond to geodesics in the metric. \
\>", "Text",
 CellChangeTimes->{
  3.753815538671025*^9, {3.7538182315463576`*^9, 3.7538182316768303`*^9}, {
   3.7538184134583178`*^9, 3.7538184343990383`*^9}, {3.7538184806769986`*^9, 
   3.7538184933885937`*^9}, {3.7538185515200396`*^9, 
   3.753818564544746*^9}},ExpressionUUID->"8195d6cf-fbc3-4d5c-ac2f-\
acc19b511966"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"geodesic", ":=", 
  RowBox[{"geodesic", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"christoffel", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}], 
          RowBox[{
           RowBox[{"coords", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "'"}], " ", 
          RowBox[{
           RowBox[{"coords", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "'"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "n"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"listgeodesic", ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<d/d\[Tau]\>\"", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"coords", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "'"}], "]"}]}], ",", "\"\<=\>\"", 
      ",", 
      RowBox[{"geodesic", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{"listgeodesic", ",", 
   RowBox[{"TableSpacing", "\[Rule]", 
    RowBox[{"{", "2", "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.753815538671025*^9, {3.7538182315463576`*^9, 3.7538182316768303`*^9}, {
   3.7538184134583178`*^9, 
   3.7538184343990383`*^9}},ExpressionUUID->"1b449e24-70fa-4108-9e34-\
2bd00e903a93"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"\<\"d/d\[Tau]\"\>", " ", "\<\"t'\"\>"}], "\<\"=\"\>", 
     FractionBox[
      RowBox[{"2", " ", "M", " ", 
       SuperscriptBox["r", "\[Prime]",
        MultilineFunction->None], " ", 
       SuperscriptBox["t", "\[Prime]",
        MultilineFunction->None]}], 
      RowBox[{
       RowBox[{"2", " ", "M", " ", "r"}], "-", 
       SuperscriptBox["r", "2"]}]]},
    {
     RowBox[{"\<\"d/d\[Tau]\"\>", " ", "\<\"r'\"\>"}], "\<\"=\"\>", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "M"}], " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          SuperscriptBox["r", "\[Prime]",
           MultilineFunction->None], ")"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"M", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             SuperscriptBox["t", "\[Prime]",
              MultilineFunction->None], ")"}], "2"]}], "-", 
          RowBox[{
           SuperscriptBox["r", "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               SuperscriptBox["\[Theta]", "\[Prime]",
                MultilineFunction->None], ")"}], "2"], "+", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                SuperscriptBox["\[Phi]", "\[Prime]",
                 MultilineFunction->None], ")"}], "2"]}]}], ")"}]}]}], 
         ")"}]}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "M"}], "-", "r"}], ")"}], " ", 
       SuperscriptBox["r", "3"]}]]},
    {
     RowBox[{"\<\"d/d\[Tau]\"\>", " ", "\<\"\[Theta]'\"\>"}], "\<\"=\"\>", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox["r", "\[Prime]",
          MultilineFunction->None], " ", 
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None]}], "r"]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], ")"}], "2"]}]}]},
    {
     RowBox[{"\<\"d/d\[Tau]\"\>", " ", "\<\"\[Phi]'\"\>"}], "\<\"=\"\>", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["r", "\[Prime]",
           MultilineFunction->None], "+", 
          RowBox[{"r", " ", 
           RowBox[{"Cot", "[", "\[Theta]", "]"}], " ", 
           SuperscriptBox["\[Theta]", "\[Prime]",
            MultilineFunction->None]}]}], ")"}], " ", 
        SuperscriptBox["\[Phi]", "\[Prime]",
         MultilineFunction->None]}], "r"]}]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.8]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$, TableSpacing -> {2}]]]], "Output",
 CellChangeTimes->{3.753818512335415*^9, 
  3.753818546474449*^9},ExpressionUUID->"59ad0fc5-3c8a-47b2-ac23-\
25f5022e5e62"]
}, Open  ]],

Cell["\<\
Now we can use Mathematica\[CloseCurlyQuote]s NDSolve to solve this system of \
differential equations for the trajectories of the orbits. This solver and \
conversion to euclidean coordinates were not written by the authors but are \
credited to Erik Tollerud. \
\>", "Text",
 CellChangeTimes->{{3.7538186204915414`*^9, 3.753818662694878*^9}, {
  3.753818723633068*^9, 
  3.7538187269259715`*^9}},ExpressionUUID->"7826e5a9-a8aa-4c92-a7ed-\
8502f55a81e8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"computeSoln", "[", 
   RowBox[{"max\[Tau]i_", ",", "ivsi_", ",", "icsi_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "ivs", ",", "ics", ",", "i", ",", "\[Chi]", ",", "tmp", ",", "soln"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ics", "=", "icsi"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ivs", "=", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", "\[Chi]", "}"}], ",", "ivsi"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"tmp", "=", "metric"}], ";", "\[IndentingNewLine]", 
     RowBox[{"tmp", "=", 
      RowBox[{"tmp", "/.", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"coords", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", 
          RowBox[{"ics", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"tmp", "=", 
      RowBox[{"ivs", ".", 
       RowBox[{"(", 
        RowBox[{"tmp", ".", "ivs"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Chi]slv", "=", 
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{"tmp", "\[Equal]", "uinvar"}], ",", "\[Chi]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ivs", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "=", 
      RowBox[{"Last", "[", 
       RowBox[{"\[Chi]", "/.", "\[Chi]slv"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"deq", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"coords", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "''"}], "[", "\[Tau]", "]"}], 
         "\[Equal]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"geodesic", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "/.", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"coords", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "'"}], "\[Rule]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"coords", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "'"}], "[", "\[Tau]", 
                 "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"coords", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", 
                RowBox[{
                 RowBox[{"coords", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "[", "\[Tau]", "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}]}], 
          ")"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"deq", "=", 
      RowBox[{"Join", "[", 
       RowBox[{"deq", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"coords", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "'"}], "[", "0", "]"}], 
           "\[Equal]", 
           RowBox[{"ivs", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"coords", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", "0", "]"}], "\[Equal]", 
           RowBox[{"ics", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"soln", "=", 
      RowBox[{"NDSolve", "[", 
       RowBox[{"deq", ",", "coords", ",", 
        RowBox[{"{", 
         RowBox[{"\[Tau]", ",", "0", ",", "max\[Tau]i"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", "soln"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"uinvar", "=", 
   RowBox[{"-", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sphslnToCartsln", "[", "soln_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xs", ",", "ys", ",", "zs"}], "}"}], ",", 
    RowBox[{
     RowBox[{"xs", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"r", "[", "\[Tau]", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "\[Tau]", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Phi]", "[", "\[Tau]", "]"}], "]"}]}], "/.", "soln"}]}], 
     " ", ";", 
     RowBox[{"ys", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"r", "[", "\[Tau]", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "\[Tau]", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Phi]", "[", "\[Tau]", "]"}], "]"}]}], "/.", "soln"}]}], 
     ";", 
     RowBox[{"zs", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"r", "[", "\[Tau]", "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "\[Tau]", "]"}], "]"}]}], "/.", "soln"}]}], 
     ";", 
     RowBox[{"{", 
      RowBox[{"xs", ",", "ys", ",", "zs"}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"udotu", "[", 
   RowBox[{"solni_", ",", "\[Tau]val_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x\[Alpha]", ",", "u\[Alpha]"}], "}"}], ",", 
    RowBox[{
     RowBox[{"x\[Alpha]", "=", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"coords", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", "\[Tau]", "]"}], "/.", 
          "solni"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], "//", 
       "Flatten"}]}], ";", " ", 
     RowBox[{"u\[Alpha]", "=", 
      RowBox[{"D", "[", 
       RowBox[{"x\[Alpha]", ",", "\[Tau]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"x\[Alpha]", "=", 
      RowBox[{"x\[Alpha]", "/.", 
       RowBox[{"\[Tau]", "\[Rule]", "\[Tau]val"}]}]}], ";", 
     RowBox[{"u\[Alpha]", "=", 
      RowBox[{"u\[Alpha]", "/.", 
       RowBox[{"\[Tau]", "\[Rule]", "\[Tau]val"}]}]}], ";", 
     RowBox[{"u\[Alpha]", ".", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"metric", "/.", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"coords", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", 
             RowBox[{"x\[Alpha]", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ")"}], ".", 
        "u\[Alpha]"}], ")"}]}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"coordlist", "[", "\[Tau]in_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ToString", "[", 
      RowBox[{"coords", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "]"}], "<>", "\"\< = \>\"", "<>", 
     RowBox[{"{", 
      RowBox[{"ToString", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"coords", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", "\[Tau]in", "]"}], "/.", 
         "soln"}], "//", "First"}], "]"}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}]}], "Input",Expression\
UUID->"aa1408d3-2415-40a9-9b73-cf35bc4a5d4a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Schwarszchild Orbits", "Subsection",
 CellChangeTimes->{{3.7538187921338267`*^9, 
  3.753818796019576*^9}},ExpressionUUID->"418fcaa5-d155-48fa-a5a9-\
e64fae071a0f"],

Cell["\<\
Here we use the solver and S-metric to find orbits for the non-rotating black \
hole, with orbit in blue and event horizon in red. \
\>", "Text",
 CellChangeTimes->{{3.753818799430642*^9, 3.7538188155350065`*^9}, {
  3.7538188555438757`*^9, 
  3.753818871766054*^9}},ExpressionUUID->"99321619-53c7-4b5c-b926-\
583e03285bca"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"max\[Tau]", "=", "750"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ivs", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", ".088"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ics", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "6.5", ",", 
     RowBox[{"\[Pi]", "/", "2"}], ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"soln", "=", 
   RowBox[{"computeSoln", "[", 
    RowBox[{"max\[Tau]", ",", "ivs", ",", "ics"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"coords", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", "\[Tau]", "]"}], "/.", 
        "soln"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Tau]", ",", "0", ",", "max\[Tau]"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Hue", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"i", "-", "1"}], ")"}], "/", "n"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "coords"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Tau]\>\"", ",", "\"\<Coordinate\>\""}], "}"}]}]}], "]"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xyzsoln", "=", 
   RowBox[{"sphslnToCartsln", "[", "soln", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"horizpl", "=", 
   RowBox[{"PolarPlot", "[", 
    RowBox[{"2", ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", 
       RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Hue", "[", "0", "]"}]}], ",", 
     RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"xyzsoln", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"xyzsoln", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "//", "Flatten"}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"\[Tau]", ",", "0", ",", "max\[Tau]"}], "}"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
    RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"%", ",", "horizpl", ",", 
   RowBox[{"DisplayFunction", "\[Rule]", "$DisplayFunction"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7538188167500715`*^9, 
  3.753818851337534*^9}},ExpressionUUID->"551d55b8-dec4-43e3-b740-\
ab85f107007a"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
Xg==
       "]]},
     Annotation[#, "Charting`Private`Tag$3080#1"]& ]}, {{{}, {}}, {}, {{}, {}, 
     TagBox[
      {Hue[0, 1, 1], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
1SoKY7otBlxJNmJRqKutI9Ht7tbIWpIvvxI81jkQjnLpT/VXk17jTDlX4TEY
jN9vGG9TJhlZvJ/lhgKwZLp1yJ7kIoJS2D7kgzNcZUnRJEe4b9CZr3mPXgd3
Piknuc4zJ3NvnSuWMkfP9ZHcl9B88ednO3xNX736P49TOrDlyQGle+if5d/7
n8ed3vBuQM5QAzwKbDL+8zg1S44gGe1H0BiZ8PY/j+MSNj04stsFEvpPG4yR
LHP82/uMXe9gu+DBE80kL/NpTckV8gaxZDeRHySfZe1t2SjkD1cuKi14kdy/
4nyOzZqPALddWgxJNg8LulG6Ogxkn574uY/k2kjVzjdvPsGl9S8jJ8n9iIgx
Nt3z5jPo5pu8iyV50adGp8ztCwjMMB/fINkht2yHnls04G7tO8tI9i320ph5
HQuuw6+vRpP7zyUeVMXxOhF2jdafaSDP7+ex/drP7b6BKxtfxG2S3Z8OXnx8
NAXmNoyp9ZPnf8lWM7BNKg3cvLjjm0lvWxkbouG6Kx0kot9oypNsdDfTet/2
DMjeL6UeR9bTPhOkPlifCe6az+Rvk/Un4XV7kFPoB6wxsjyeRNZn2h6ZSwF8
WSBQv8d1nqxfxZwhpziOHDhJCRU2I+vbdMvQ9pfjv2Aqo0iaIL1NvtJZengo
D9buEa4QJNl9i07N+V6Ed4cLszaS/SQ9lTg5P5oP9dvXfRQh+w8rlDXvdReC
waznne9kf/6Mshp4qlsESdXuKW9Jjzs3MFPr2lYEp49NaGqT/Rw2NnfKu7EY
+jJXfm4l+59O6ZZ6UFYKiYnSd16Q80FaMV1RS6EMOKJqbdb/JVB9caD2SEEZ
nKjW6Yoh50nHN4eoiZxysDN7gcnk/Mmrfie++lslJIbdqDRqJPA4t+qlyj1V
sJpHMf1XPVn/NytG7WOqYFP5uiWBOgK9fh3cVfOpGu5/Gg4Nqyaw5a4EbPat
gfoD+zVulRB4xJ+xEC5QC5lFefueF5HzvuDS8Q0etaTTfDTxLCDwlFXvY7tz
dcDDycUZ9YtAxw1rOnafqIer1zbXmX8n17e0+l7u3kbojvh74mMU6ZWrloXQ
zBvBY3p3IXckgRaxXFdk0xphYV3ndYtwAovFtJm+R5tg3cp7+Vs/kt6bOHZY
8HwzTPTIO4l+IP9+u4sh/bot4MaBj41syfk7/W9zQUQL/HkkYKlgQ+CmB9Hz
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
KDLT/g==
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$3057#1"]& ]}, {}, {{{}, {}, {}, {}}, {}}}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-15.94322183786964, 
   15.977979637736146`}, {-15.960418270397057`, 15.771229356464719`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.753818822042547*^9, 
  3.7538188517775445`*^9}},ExpressionUUID->"4a8234cd-25a1-4fce-bd78-\
5cbfe08b70ec"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rotating black hole - Kerr metric", "Subsection",
 CellChangeTimes->{
  3.753815723851976*^9, {3.753818887343861*^9, 
   3.7538189122400384`*^9}},ExpressionUUID->"6c117247-3936-44b6-a891-\
45899b345af0"],

Cell["\<\
Now we go for the fully general Kerr Solution for when the orbits do not \
strictly lie in a plane. The Christoffel symbols become quite a mess but \
Mathematica takes care of it for us nicely. \
\>", "Text",
 CellChangeTimes->{{3.753818914047413*^9, 3.7538189153181753`*^9}, {
  3.753819022299715*^9, 
  3.7538190603296127`*^9}},ExpressionUUID->"58e1d90a-a190-47d2-b8a1-\
51978d0b417c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=."}], ";", 
  RowBox[{"M", "=."}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Rho]", "=", 
   RowBox[{
    RowBox[{"r", "^", "2"}], "+", 
    RowBox[{
     RowBox[{"a", "^", "2"}], " ", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[CapitalDelta]", "=", 
   RowBox[{
    RowBox[{"r", "^", "2"}], " ", "-", " ", 
    RowBox[{"2", " ", "M", " ", "r"}], "+", " ", 
    RowBox[{"a", "^", "2"}]}]}], ";"}], "\n", 
 RowBox[{"christoffel", ":=", 
  RowBox[{"christoffel", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "2"}], ")"}], "*", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"inversemetric", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "s"}], "]"}], "]"}], ")"}], "*", 
          "\[IndentingNewLine]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"metric", "[", 
               RowBox[{"[", 
                RowBox[{"s", ",", "j"}], "]"}], "]"}], ",", 
              RowBox[{"coords", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], " ", "]"}], "+", 
            "\[IndentingNewLine]", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"metric", "[", 
               RowBox[{"[", 
                RowBox[{"s", ",", "k"}], "]"}], "]"}], ",", 
              RowBox[{"coords", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], " ", "]"}], "-", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"metric", "[", 
               RowBox[{"[", 
                RowBox[{"j", ",", "k"}], "]"}], "]"}], ",", 
              RowBox[{"coords", "[", 
               RowBox[{"[", "s", "]"}], "]"}]}], " ", "]"}]}], ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"s", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "n"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "n"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "n"}], "}"}]}], "]"}], " ", 
    "]"}]}]}], "\n", 
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"DeleteCases", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", "listchristoffel", "]"}], ",", "Null"}], "]"}],
      ",", "2"}], "]"}], ",", 
   RowBox[{"TableSpacing", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}]}], "]"}], "\n", 
 RowBox[{"geodesic", ":=", 
  RowBox[{"geodesic", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"christoffel", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}], 
          RowBox[{
           RowBox[{"coords", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "'"}], " ", 
          RowBox[{
           RowBox[{"coords", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "'"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "n"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], "]"}]}]}], "\n", 
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"DeleteCases", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", "listgeodesic", "]"}], ",", "Null"}], "]"}], 
     ",", "2"}], "]"}], ",", 
   RowBox[{"TableSpacing", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.753815723851976*^9, {3.753818887343861*^9, 
   3.753818891338764*^9}},ExpressionUUID->"a53f9687-b495-4c3e-a51f-\
775582a5c464"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\[CapitalGamma][1, 2, 1]\"\>", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"M", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["r", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "4"], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["r", "4"]}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox["a", "2"], " ", "r", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["a", "2"], "+", 
             RowBox[{"r", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"6", " ", "M"}], "+", "r"}], ")"}]}]}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], 
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["r", "2"], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox["r", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["a", "2"], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["M", "2"]}], "-", 
             RowBox[{"2", " ", "M", " ", "r"}], "+", 
             SuperscriptBox["r", "2"]}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
          RowBox[{
           SuperscriptBox["a", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["a", "2"], "+", 
             RowBox[{"r", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}]}], ")"}],
            " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"]}], "+", 
          RowBox[{
           SuperscriptBox["r", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["r", "3"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}], "+", 
             RowBox[{
              SuperscriptBox["a", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"4", " ", 
                 SuperscriptBox["M", "2"]}], "+", 
                SuperscriptBox["r", "2"]}], ")"}]}], "-", 
             RowBox[{"8", " ", 
              SuperscriptBox["a", "2"], " ", 
              SuperscriptBox["M", "2"], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
         ")"}]}]]}]},
    {"\<\"\[CapitalGamma][1, 3, 1]\"\>", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "4"], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["r", "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "8"}], " ", "M"}], "+", "r"}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", "r", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "14"}], " ", "M"}], "+", 
             RowBox[{"3", " ", "r"}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["a", "2"], "+", 
             RowBox[{"r", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}]}], ")"}],
            " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["r", "2"], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox["r", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["a", "2"], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["M", "2"]}], "-", 
             RowBox[{"2", " ", "M", " ", "r"}], "+", 
             SuperscriptBox["r", "2"]}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
          RowBox[{
           SuperscriptBox["a", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["a", "2"], "+", 
             RowBox[{"r", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}]}], ")"}],
            " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"]}], "+", 
          RowBox[{
           SuperscriptBox["r", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["r", "3"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}], "+", 
             RowBox[{
              SuperscriptBox["a", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"4", " ", 
                 SuperscriptBox["M", "2"]}], "+", 
                SuperscriptBox["r", "2"]}], ")"}]}], "-", 
             RowBox[{"8", " ", 
              SuperscriptBox["a", "2"], " ", 
              SuperscriptBox["M", "2"], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
         ")"}]}]]}]},
    {"\<\"\[CapitalGamma][1, 4, 2]\"\>", 
     FractionBox[
      RowBox[{"2", " ", "a", " ", "M", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["r", "2"]}], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["a", "2"], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["r", "2"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["a", "2"], "-", 
            SuperscriptBox["r", "2"]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["r", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["M", "2"]}], "-", 
          RowBox[{"2", " ", "M", " ", "r"}], "+", 
          SuperscriptBox["r", "2"]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["a", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{"r", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}]}], ")"}], 
        " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"]}], "+", 
       RowBox[{
        SuperscriptBox["r", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["r", "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              SuperscriptBox["M", "2"]}], "+", 
             SuperscriptBox["r", "2"]}], ")"}]}], "-", 
          RowBox[{"8", " ", 
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox["M", "2"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}]]},
    {"\<\"\[CapitalGamma][1, 4, 3]\"\>", 
     FractionBox[
      RowBox[{"4", " ", 
       SuperscriptBox["a", "3"], " ", "M", " ", "r", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         RowBox[{"r", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "3"]}], 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["r", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["M", "2"]}], "-", 
          RowBox[{"2", " ", "M", " ", "r"}], "+", 
          SuperscriptBox["r", "2"]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["a", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{"r", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}]}], ")"}], 
        " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"]}], "+", 
       RowBox[{
        SuperscriptBox["r", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["r", "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              SuperscriptBox["M", "2"]}], "+", 
             SuperscriptBox["r", "2"]}], ")"}]}], "-", 
          RowBox[{"8", " ", 
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox["M", "2"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}]]},
    {"\<\"\[CapitalGamma][2, 1, 1]\"\>", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"M", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{"r", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["r", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["r", "2"], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]]}]},
    {"\<\"\[CapitalGamma][2, 2, 2]\"\>", 
     FractionBox[
      RowBox[{
       RowBox[{"r", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "-", 
          RowBox[{"M", " ", "r"}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"M", "-", "r"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         RowBox[{"r", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["r", "2"], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]]},
    {"\<\"\[CapitalGamma][2, 3, 2]\"\>", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       RowBox[{
        SuperscriptBox["r", "2"], "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}]},
    {"\<\"\[CapitalGamma][2, 3, 3]\"\>", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"r", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{"r", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}]}], ")"}]}], 
       RowBox[{
        SuperscriptBox["r", "2"], "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}]},
    {"\<\"\[CapitalGamma][2, 4, 1]\"\>", 
     FractionBox[
      RowBox[{"2", " ", "a", " ", "M", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         RowBox[{"r", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["r", "2"]}], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["r", "2"], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]]},
    {"\<\"\[CapitalGamma][2, 4, 4]\"\>", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         RowBox[{"r", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["a", "2"], " ", "M", " ", 
          SuperscriptBox["r", "2"]}], "-", 
         SuperscriptBox["r", "5"], "-", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["a", "2"], " ", "M"}], "+", 
            RowBox[{
             SuperscriptBox["r", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"M", "+", 
               RowBox[{"2", " ", "r"}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
         RowBox[{
          SuperscriptBox["a", "4"], " ", 
          RowBox[{"(", 
           RowBox[{"M", "-", "r"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"]}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["r", "2"], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]]},
    {"\<\"\[CapitalGamma][3, 1, 1]\"\>", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["r", "2"], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]]}]},
    {"\<\"\[CapitalGamma][3, 2, 2]\"\>", 
     FractionBox[
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         RowBox[{"r", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["r", "2"], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]]},
    {"\<\"\[CapitalGamma][3, 3, 2]\"\>", 
     FractionBox["r", 
      RowBox[{
       SuperscriptBox["r", "2"], "+", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]},
    {"\<\"\[CapitalGamma][3, 3, 3]\"\>", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       RowBox[{
        SuperscriptBox["r", "2"], "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}]},
    {"\<\"\[CapitalGamma][3, 4, 1]\"\>", 
     FractionBox[
      RowBox[{"2", " ", "a", " ", "M", " ", "r", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         SuperscriptBox["r", "2"]}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["r", "2"], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]]},
    {"\<\"\[CapitalGamma][3, 4, 4]\"\>", 
     FractionBox[
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["r", "2"], "+", 
              RowBox[{
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
            "2"]}], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["a", "2"], "-", 
            RowBox[{"2", " ", "M", " ", "r"}], "+", 
            SuperscriptBox["r", "2"], "+", 
            FractionBox[
             RowBox[{"2", " ", "M", " ", "r", " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["a", "2"], "+", 
                SuperscriptBox["r", "2"]}], ")"}]}], 
             RowBox[{
              SuperscriptBox["r", "2"], "+", 
              RowBox[{
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], ")"}]}], 
         "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["a", "2"], "+", 
            SuperscriptBox["r", "2"]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["r", "2"], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]]},
    {"\<\"\[CapitalGamma][4, 2, 1]\"\>", 
     FractionBox[
      RowBox[{"2", " ", "a", " ", "M", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["r", "2"], "-", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["r", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["M", "2"]}], "-", 
          RowBox[{"2", " ", "M", " ", "r"}], "+", 
          SuperscriptBox["r", "2"]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["a", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{"r", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}]}], ")"}], 
        " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"]}], "+", 
       RowBox[{
        SuperscriptBox["r", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["r", "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              SuperscriptBox["M", "2"]}], "+", 
             SuperscriptBox["r", "2"]}], ")"}]}], "-", 
          RowBox[{"8", " ", 
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox["M", "2"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}]]},
    {"\<\"\[CapitalGamma][4, 3, 1]\"\>", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"4", " ", "a", " ", "M", " ", "r", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{"r", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}]}], ")"}], 
        " ", 
        RowBox[{"Cot", "[", "\[Theta]", "]"}]}], 
       RowBox[{
        RowBox[{"2", " ", 
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox["r", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["a", "2"], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["M", "2"]}], "-", 
           RowBox[{"2", " ", "M", " ", "r"}], "+", 
           SuperscriptBox["r", "2"]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
        RowBox[{
         SuperscriptBox["a", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["a", "2"], "+", 
           RowBox[{"r", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}]}], ")"}], 
         " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"]}], "+", 
        RowBox[{
         SuperscriptBox["r", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["r", "3"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", " ", 
               SuperscriptBox["M", "2"]}], "+", 
              SuperscriptBox["r", "2"]}], ")"}]}], "-", 
           RowBox[{"8", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["M", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}]]}]},
    {"\<\"\[CapitalGamma][4, 4, 2]\"\>", 
     FractionBox[
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["M", "2"], " ", 
        SuperscriptBox["r", "3"]}], "-", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", "M", " ", 
        SuperscriptBox["r", "4"]}], "-", 
       RowBox[{"2", " ", "M", " ", 
        SuperscriptBox["r", "6"]}], "+", 
       SuperscriptBox["r", "7"], "-", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", "r", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox["M", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["r", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              SuperscriptBox["M", "2"]}], "+", 
             RowBox[{"3", " ", "M", " ", "r"}], "-", 
             RowBox[{"3", " ", 
              SuperscriptBox["r", "2"]}]}], ")"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["a", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["a", "2"], " ", "M"}], "+", 
          RowBox[{"r", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              SuperscriptBox["M", "2"]}], "-", 
             RowBox[{"2", " ", "M", " ", "r"}], "+", 
             RowBox[{"3", " ", 
              SuperscriptBox["r", "2"]}]}], ")"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"]}], "-", 
       RowBox[{
        SuperscriptBox["a", "6"], " ", 
        RowBox[{"(", 
         RowBox[{"M", "-", "r"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["M", "2"], " ", 
        SuperscriptBox["r", "3"], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["M", "2"], " ", "r", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"]}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["r", "2"], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox["r", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["a", "2"], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["M", "2"]}], "-", 
            RowBox[{"2", " ", "M", " ", "r"}], "+", 
            SuperscriptBox["r", "2"]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
         RowBox[{
          SuperscriptBox["a", "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["a", "2"], "+", 
            RowBox[{"r", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}]}], ")"}], 
          " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"]}], "+", 
         RowBox[{
          SuperscriptBox["r", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["r", "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["a", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"4", " ", 
                SuperscriptBox["M", "2"]}], "+", 
               SuperscriptBox["r", "2"]}], ")"}]}], "-", 
            RowBox[{"8", " ", 
             SuperscriptBox["a", "2"], " ", 
             SuperscriptBox["M", "2"], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], ")"}]}]]},
    {"\<\"\[CapitalGamma][4, 4, 3]\"\>", 
     FractionBox[
      RowBox[{
       RowBox[{"Cot", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["a", "4"], " ", 
          SuperscriptBox["r", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"3", " ", 
             SuperscriptBox["a", "2"]}], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["M", "2"]}], "-", 
            RowBox[{"6", " ", "M", " ", "r"}], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["r", "2"]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"]}], "+", 
         RowBox[{
          SuperscriptBox["a", "6"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["a", "2"], "+", 
            RowBox[{"r", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}]}], ")"}], 
          " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "+", 
         RowBox[{
          SuperscriptBox["r", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["r", "5"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["a", "4"], " ", "M", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"6", " ", "M"}], "+", "r"}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["a", "2"], " ", 
             SuperscriptBox["r", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox["M", "2"]}], "+", 
               RowBox[{"M", " ", "r"}], "+", 
               SuperscriptBox["r", "2"]}], ")"}]}], "-", 
            RowBox[{
             SuperscriptBox["a", "2"], " ", "M", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"6", " ", "M"}], "+", "r"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["a", "2"], "+", 
               SuperscriptBox["r", "2"]}], ")"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", "r", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["r", "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"4", " ", 
                SuperscriptBox["M", "2"]}], "-", 
               RowBox[{"6", " ", "M", " ", "r"}], "+", 
               RowBox[{"3", " ", 
                SuperscriptBox["r", "2"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["a", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "4"}], " ", 
                SuperscriptBox["M", "2"], " ", "r"}], "+", 
               RowBox[{"3", " ", 
                SuperscriptBox["r", "3"]}]}], ")"}]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["a", "2"], " ", "M", " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["a", "2"], "+", 
               SuperscriptBox["r", "2"]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]}], 
        ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["r", "2"], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox["r", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["a", "2"], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["M", "2"]}], "-", 
            RowBox[{"2", " ", "M", " ", "r"}], "+", 
            SuperscriptBox["r", "2"]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
         RowBox[{
          SuperscriptBox["a", "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["a", "2"], "+", 
            RowBox[{"r", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}]}], ")"}], 
          " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"]}], "+", 
         RowBox[{
          SuperscriptBox["r", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["r", "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["a", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"4", " ", 
                SuperscriptBox["M", "2"]}], "+", 
               SuperscriptBox["r", "2"]}], ")"}]}], "-", 
            RowBox[{"8", " ", 
             SuperscriptBox["a", "2"], " ", 
             SuperscriptBox["M", "2"], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], ")"}]}]]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[1.4]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.8]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$, TableSpacing -> {2, 2}]]]], "Output",
 CellChangeTimes->{3.753815726530523*^9, 3.7538185485630617`*^9, 
  3.753819064175239*^9},ExpressionUUID->"9156d426-d7f4-494d-9b70-\
271e18458878"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"\<\"d/d\[Tau]\"\>", " ", "\<\"t'\"\>"}], "\<\"=\"\>"},
    {
     FractionBox[
      RowBox[{"M", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["a", "2"], " ", "r", " ", 
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["a", "4"], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["r", "3"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "8"}], " ", "M"}], "+", "r"}], ")"}]}], "+", 
               RowBox[{
                SuperscriptBox["a", "2"], " ", "r", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "14"}], " ", "M"}], "+", 
                  RowBox[{"3", " ", "r"}]}], ")"}]}], "+", 
               RowBox[{
                SuperscriptBox["a", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["a", "2"], "+", 
                  RowBox[{"r", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}]}], 
                 ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
             SuperscriptBox["t", "\[Prime]",
              MultilineFunction->None]}], "-", 
            RowBox[{"8", " ", "a", " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["a", "2"], "+", 
               RowBox[{"r", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}]}], 
              ")"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["a", "2"], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["r", "2"]}], "+", 
               RowBox[{
                SuperscriptBox["a", "2"], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "3"], " ", 
             SuperscriptBox["\[Phi]", "\[Prime]",
              MultilineFunction->None]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["r", "\[Prime]",
           MultilineFunction->None], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["a", "2"], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["r", "2"]}], "+", 
               RowBox[{
                SuperscriptBox["a", "2"], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["a", "4"], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["r", "4"]}], "+", 
               RowBox[{"3", " ", 
                SuperscriptBox["a", "2"], " ", "r", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}], "+", 
               RowBox[{
                SuperscriptBox["a", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["a", "2"], "+", 
                  RowBox[{"r", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"6", " ", "M"}], "+", "r"}], ")"}]}]}], ")"}], 
                " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
             SuperscriptBox["t", "\[Prime]",
              MultilineFunction->None]}], "+", 
            RowBox[{"8", " ", "a", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SuperscriptBox["r", "4"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["a", "2"], "+", 
                    RowBox[{"3", " ", 
                    SuperscriptBox["r", "2"]}]}], ")"}]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["a", "6"]}], "+", 
                    RowBox[{
                    SuperscriptBox["a", "4"], " ", 
                    SuperscriptBox["r", "2"]}]}], ")"}], " ", 
                   SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"]}]}], ")"}], 
                " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
               RowBox[{
                SuperscriptBox["a", "2"], " ", 
                SuperscriptBox["r", "4"], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", 
                  RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"]}]}], ")"}], " ", 
             SuperscriptBox["\[Phi]", "\[Prime]",
              MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["r", "2"], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox["r", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["a", "2"], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["M", "2"]}], "-", 
            RowBox[{"2", " ", "M", " ", "r"}], "+", 
            SuperscriptBox["r", "2"]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
         RowBox[{
          SuperscriptBox["a", "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["a", "2"], "+", 
            RowBox[{"r", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}]}], ")"}], 
          " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"]}], "+", 
         RowBox[{
          SuperscriptBox["r", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["r", "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["a", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"4", " ", 
                SuperscriptBox["M", "2"]}], "+", 
               SuperscriptBox["r", "2"]}], ")"}]}], "-", 
            RowBox[{"8", " ", 
             SuperscriptBox["a", "2"], " ", 
             SuperscriptBox["M", "2"], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], ")"}]}]], 
     RowBox[{"\<\"d/d\[Tau]\"\>", " ", "\<\"r'\"\>"}]},
    {"\<\"=\"\>", 
     FractionBox[
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["r", "2"], "+", 
             RowBox[{
              SuperscriptBox["a", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "2"], 
          " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"r", " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["a", "2"], "-", 
               RowBox[{"M", " ", "r"}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["a", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"M", "-", "r"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            SuperscriptBox["r", "\[Prime]",
             MultilineFunction->None], ")"}], "2"]}], 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{"r", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}]}]]}], "+", 
       RowBox[{"M", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{"r", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["r", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          SuperscriptBox["t", "\[Prime]",
           MultilineFunction->None], ")"}], "2"]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["a", "2"], " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["r", "2"], "+", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "2"], 
        " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        SuperscriptBox["r", "\[Prime]",
         MultilineFunction->None], " ", 
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None]}], "+", 
       RowBox[{"r", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{"r", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}]}], ")"}], 
        " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["r", "2"], "+", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "2"], 
        " ", 
        SuperscriptBox[
         RowBox[{"(", 
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], ")"}], "2"]}], "-", 
       RowBox[{"4", " ", "a", " ", "M", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{"r", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["r", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
        SuperscriptBox["t", "\[Prime]",
         MultilineFunction->None], " ", 
        SuperscriptBox["\[Phi]", "\[Prime]",
         MultilineFunction->None]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{"r", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["a", "2"], " ", "M", " ", 
           SuperscriptBox["r", "2"]}], "-", 
          SuperscriptBox["r", "5"], "-", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["a", "2"], " ", "M"}], "+", 
             RowBox[{
              SuperscriptBox["r", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"M", "+", 
                RowBox[{"2", " ", "r"}]}], ")"}]}]}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
          RowBox[{
           SuperscriptBox["a", "4"], " ", 
           RowBox[{"(", 
            RowBox[{"M", "-", "r"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], ")"}], "2"]}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["r", "2"], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]]},
    {
     RowBox[{"\<\"d/d\[Tau]\"\>", " ", "\<\"\[Theta]'\"\>"}], "\<\"=\"\>"},
    {
     FractionBox[
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["r", "2"], "+", 
             RowBox[{
              SuperscriptBox["a", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "2"], 
          " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            SuperscriptBox["r", "\[Prime]",
             MultilineFunction->None], ")"}], "2"]}], 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{"r", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}]}]]}], "+", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          SuperscriptBox["t", "\[Prime]",
           MultilineFunction->None], ")"}], "2"]}], "-", 
       RowBox[{"2", " ", "r", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["r", "2"], "+", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "2"], 
        " ", 
        SuperscriptBox["r", "\[Prime]",
         MultilineFunction->None], " ", 
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None]}], "+", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["r", "2"], "+", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "2"], 
        " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], ")"}], "2"]}], "-", 
       RowBox[{"4", " ", "a", " ", "M", " ", "r", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          SuperscriptBox["r", "2"]}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
        SuperscriptBox["t", "\[Prime]",
         MultilineFunction->None], " ", 
        SuperscriptBox["\[Phi]", "\[Prime]",
         MultilineFunction->None]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["r", "2"], "+", 
               RowBox[{
                SuperscriptBox["a", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
             "2"]}], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["a", "2"], "-", 
             RowBox[{"2", " ", "M", " ", "r"}], "+", 
             SuperscriptBox["r", "2"], "+", 
             FractionBox[
              RowBox[{"2", " ", "M", " ", "r", " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["a", "2"], "+", 
                 SuperscriptBox["r", "2"]}], ")"}]}], 
              RowBox[{
               SuperscriptBox["r", "2"], "+", 
               RowBox[{
                SuperscriptBox["a", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], ")"}]}], 
          "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["a", "2"], "+", 
             SuperscriptBox["r", "2"]}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], ")"}], "2"]}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["r", "2"], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]], 
     RowBox[{"\<\"d/d\[Tau]\"\>", " ", "\<\"\[Phi]'\"\>"}]},
    {"\<\"=\"\>", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Theta]", "\[Prime]",
            MultilineFunction->None], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "a", " ", "M", " ", "r", " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["a", "2"], "+", 
                RowBox[{"r", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}]}], 
               ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["a", "2"], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["r", "2"]}], "+", 
                RowBox[{
                 SuperscriptBox["a", "2"], " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
              RowBox[{"Cot", "[", "\[Theta]", "]"}], " ", 
              SuperscriptBox["t", "\[Prime]",
               MultilineFunction->None]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["a", "2"], " ", 
                    SuperscriptBox["r", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["a", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", 
                    SuperscriptBox["M", "2"]}], "+", 
                    RowBox[{"3", " ", 
                    SuperscriptBox["r", "2"]}]}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox["r", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["M", "2"]}], "-", 
                    RowBox[{"6", " ", "M", " ", "r"}], "+", 
                    RowBox[{"3", " ", 
                    SuperscriptBox["r", "2"]}]}], ")"}]}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
                   RowBox[{
                    SuperscriptBox["a", "4"], " ", 
                    SuperscriptBox["r", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"3", " ", 
                    SuperscriptBox["a", "2"]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["M", "2"]}], "-", 
                    RowBox[{"6", " ", "M", " ", "r"}], "+", 
                    RowBox[{"3", " ", 
                    SuperscriptBox["r", "2"]}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"]}], "+", 
                   RowBox[{
                    SuperscriptBox["a", "6"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["a", "2"], "+", 
                    RowBox[{"r", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}]}], 
                    ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "+", 
                   RowBox[{
                    SuperscriptBox["r", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["r", "5"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox["a", "4"], " ", "M", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"6", " ", "M"}], "+", "r"}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox["a", "2"], " ", 
                    SuperscriptBox["r", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    SuperscriptBox["M", "2"]}], "+", 
                    RowBox[{"M", " ", "r"}], "+", 
                    SuperscriptBox["r", "2"]}], ")"}]}], "-", 
                    RowBox[{
                    SuperscriptBox["a", "2"], " ", "M", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"6", " ", "M"}], "+", "r"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["a", "2"], "+", 
                    SuperscriptBox["r", "2"]}], ")"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
                  ")"}], " ", 
                 RowBox[{"Cot", "[", "\[Theta]", "]"}]}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["a", "4"], " ", "M", " ", "r", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["a", "2"], "+", 
                   SuperscriptBox["r", "2"]}], ")"}], " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}], " ", 
              SuperscriptBox["\[Phi]", "\[Prime]",
               MultilineFunction->None]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["r", "\[Prime]",
            MultilineFunction->None], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "a", " ", "M", " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["r", "4"], "-", 
                RowBox[{
                 SuperscriptBox["a", "4"], " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"]}]}], ")"}], " ", 
              SuperscriptBox["t", "\[Prime]",
               MultilineFunction->None]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", 
                 SuperscriptBox["a", "2"], " ", 
                 SuperscriptBox["M", "2"], " ", 
                 SuperscriptBox["r", "3"]}], "-", 
                RowBox[{
                 SuperscriptBox["a", "2"], " ", "M", " ", 
                 SuperscriptBox["r", "4"]}], "-", 
                RowBox[{"2", " ", "M", " ", 
                 SuperscriptBox["r", "6"]}], "+", 
                SuperscriptBox["r", "7"], "-", 
                RowBox[{
                 SuperscriptBox["a", "2"], " ", "r", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", 
                    SuperscriptBox["a", "2"], " ", 
                    SuperscriptBox["M", "2"]}], "+", 
                   RowBox[{"2", " ", 
                    SuperscriptBox["M", "2"], " ", 
                    SuperscriptBox["r", "2"]}], "+", 
                   RowBox[{"3", " ", "M", " ", 
                    SuperscriptBox["r", "3"]}], "-", 
                   RowBox[{"3", " ", 
                    SuperscriptBox["r", "4"]}]}], ")"}], " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
                RowBox[{
                 SuperscriptBox["a", "4"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["a", "2"], " ", "M"}], "+", 
                   RowBox[{"2", " ", 
                    SuperscriptBox["M", "2"], " ", "r"}], "-", 
                   RowBox[{"2", " ", "M", " ", 
                    SuperscriptBox["r", "2"]}], "+", 
                   RowBox[{"3", " ", 
                    SuperscriptBox["r", "3"]}]}], ")"}], " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"]}], "-", 
                RowBox[{
                 SuperscriptBox["a", "6"], " ", 
                 RowBox[{"(", 
                  RowBox[{"M", "-", "r"}], ")"}], " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
                RowBox[{"8", " ", 
                 SuperscriptBox["a", "2"], " ", 
                 SuperscriptBox["M", "2"], " ", 
                 SuperscriptBox["r", "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["a", "4"], " ", 
                 SuperscriptBox["M", "2"], " ", "r", " ", 
                 SuperscriptBox[
                  RowBox[{"Sin", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"]}]}], ")"}], 
              " ", 
              SuperscriptBox["\[Phi]", "\[Prime]",
               MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["r", "2"], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox["r", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["a", "2"], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["M", "2"]}], "-", 
             RowBox[{"2", " ", "M", " ", "r"}], "+", 
             SuperscriptBox["r", "2"]}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
          RowBox[{
           SuperscriptBox["a", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["a", "2"], "+", 
             RowBox[{"r", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}]}], ")"}],
            " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"]}], "+", 
          RowBox[{
           SuperscriptBox["r", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["r", "3"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}], "+", 
             RowBox[{
              SuperscriptBox["a", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"4", " ", 
                 SuperscriptBox["M", "2"]}], "+", 
                SuperscriptBox["r", "2"]}], ")"}]}], "-", 
             RowBox[{"8", " ", 
              SuperscriptBox["a", "2"], " ", 
              SuperscriptBox["M", "2"], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
         ")"}]}]]}]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[1.4]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.8]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$, TableSpacing -> {2, 2}]]]], "Output",
 CellChangeTimes->{3.753815726530523*^9, 3.7538185485630617`*^9, 
  3.7538190731375523`*^9},ExpressionUUID->"fc5ac082-1890-4787-95e7-\
7e1ac037601c"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.7538155766900125`*^9, 3.7538157603878913`*^9, 3.7538159496518197`*^9, {
   3.7538160081053624`*^9, 3.753816067347146*^9}, {3.7538161512437367`*^9, 
   3.7538162104447703`*^9}, {3.7538162439819393`*^9, 3.753816326183809*^9}, {
   3.753819076299786*^9, 3.7538190813306255`*^9}, {3.7538201708326373`*^9, 
   3.7538201718463545`*^9}},ExpressionUUID->"8584a317-cd79-4bc6-9d57-\
eef1a1e94d84"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting Geodesics of the Kerr metric", "Subsection",
 CellChangeTimes->{{3.7538202931048183`*^9, 
  3.7538203039852376`*^9}},ExpressionUUID->"d4fc8c9f-8047-48e1-aacd-\
250d48eb26ce"],

Cell["\<\
Now we are ready to do a full simulation of a Kerr orbit. We can choose some \
orbital parameters but the only interesting case handled well by the solver \
is when a is very close to M, i.e. critical rotation. \
\>", "Text",
 CellChangeTimes->{{3.7538201757542896`*^9, 3.75382020153302*^9}, {
  3.7538203098636303`*^9, 
  3.7538203299835415`*^9}},ExpressionUUID->"d7f6dec1-16be-465f-b835-\
89c1e97fe542"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"max\[Tau]", "=", "800"}], ";", 
    RowBox[{"M", "=", "1"}], ";", 
    RowBox[{"a", "=", "1"}], ";", 
    RowBox[{"rplus", "=", 
     RowBox[{"M", "+", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"M", "^", "2"}], "-", 
        RowBox[{"a", "^", "2"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"soln", "=", 
     RowBox[{"computeSoln", "[", 
      RowBox[{"max\[Tau]", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.01"}], ",", "0.01", ",", "0.017"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "10", ",", 
         RowBox[{"\[Pi]", "/", "3"}], ",", 
         RowBox[{"Pi", "/", "4"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xyzsoln", "=", 
     RowBox[{"sphslnToCartsln", "[", "soln", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"coords", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", "\[Tau]", "]"}], "/.", 
          "soln"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Tau]", ",", "0", ",", "max\[Tau]"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Hue", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "/", "n"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "coords"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<\[Tau]\>\"", ",", "\"\<Coordinate\>\""}], "}"}]}]}], 
     "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SphericalPlot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rplus", ",", 
        RowBox[{"EdgeForm", "[", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Phi]", ",", "0", ",", " ", 
        RowBox[{"2", "Pi"}]}], "}"}], ",", 
      RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot3D", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"Re", "[", "xyzsoln", "]"}], "//", "Flatten"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0", ",", "max\[Tau]"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], ",", 
     RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", "500"}]}], "]"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"horizpl", "=", 
     RowBox[{"PolarPlot", "[", 
      RowBox[{"rplus", ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0", ",", 
         RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Hue", "[", "0", "]"}]}], ",", 
       RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"Re", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xyzsoln", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"xyzsoln", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}], "//", "Flatten"}],
        "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Tau]", ",", "0", ",", "max\[Tau]"}], "}"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}]}], ",", 
      RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"%", ",", "horizpl", ",", 
     RowBox[{"DisplayFunction", "\[Rule]", "$DisplayFunction"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"Re", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xyzsoln", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{"xyzsoln", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "]"}], "//", "Flatten"}],
        "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Tau]", ",", "0", ",", "max\[Tau]"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"y", ",", "z"}], "}"}]}], ",", 
      RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"%", ",", "horizpl", ",", 
     RowBox[{"DisplayFunction", "\[Rule]", "$DisplayFunction"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"Re", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xyzsoln", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"xyzsoln", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "]"}], "//", "Flatten"}],
        "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Tau]", ",", "0", ",", "max\[Tau]"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"x", ",", "z"}], "}"}]}], ",", 
      RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{"%", ",", "horizpl", ",", 
      RowBox[{"DisplayFunction", "\[Rule]", "$DisplayFunction"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "\"\<Final Coordinates:\>\"", "}"}], ",", 
      RowBox[{"coordlist", "[", "max\[Tau]", "]"}]}], "]"}], "//", 
    "TableForm"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\>\"", ",", "\"\<\>\"", ",", "\"\<\>\"", ",", 
         "\"\<u\[CenterDot]u values\>\""}], "}"}], "}"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<\[Tau]=\>\"", ",", 
          RowBox[{"ToString", "[", "i", "]"}], ",", "\"\<\[Rule]\>\"", ",", 
          RowBox[{"udotu", "[", 
           RowBox[{"soln", ",", "i"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "max\[Tau]", ",", 
          RowBox[{"max\[Tau]", "/", "5"}]}], "}"}]}], "]"}]}], "]"}], "//", 
    "TableForm"}]}]}]], "Input",
 CellChangeTimes->{
  3.7538155766900125`*^9, 3.7538157603878913`*^9, 3.7538159496518197`*^9, {
   3.7538160081053624`*^9, 3.753816067347146*^9}, {3.7538161512437367`*^9, 
   3.7538162104447703`*^9}, {3.7538162439819393`*^9, 3.753816326183809*^9}, {
   3.753819076299786*^9, 3.7538190813306255`*^9}, {3.753820216042506*^9, 
   3.7538202573086586`*^9}, 
   3.753820334208776*^9},ExpressionUUID->"26dc7d66-9fd7-449b-9644-\
6dd77f7496fd"],

Cell[BoxData[
 Graphics3DBox[{{}, {}, 
   TagBox[
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
     Line3DBox[CompressedData["
1:eJwU2nk0lc8bAHDce+3LtV3XruxRQqGSmexfS4hUlLIVSUolLcgaKWslsiRK
JRWV0mLGVoSSNfu+k3295Pf+/rrnfM6ceZ95Zp7nfeecu8nF54A7CxMTkycf
ExOJ+G3bvR6XH0iH3c2uOf//fcQkv7ixIQjPFyGlP9fpMHzcxJoRTIe8LXe5
v64LwoJmpnfrV+nwwN81NsNwOtx4pOx1hSEItUkrT4wu0+Fi3mJmfTTxy5HG
PL0oCOMPRy5V+tBhadfuwIEHdKgh8uxu46QgBB+S96SdoEOdn3ti2wroUFXv
qu61dkGoo3R/V8A+Orz6J4JOHaLD/5rUZkChIAwU9agRZ6LDclH0Oek/UXjx
SuDh556C8MFtMxmqmwhc/iiV2iEoBtf5h/I3igSglO6b/lJMg/9tthb2RmJw
V4mpqC2nAPwjhwS3UWlw8ss/sbf24rCo0WfC1ZYfDpzw5tmsJwwVzVTuLw6J
w30MN57twVR4aZXlwWMPIRjrvu82j4MEDKa3itq68UGOmzKaHGcFYW9+AdkM
S8CQtH93HW/zQBano7xmbgKQk8tfPppbEo7/zd7b+YQLLi5/kTQ6IQB3+P0I
9OeRhC3cDVsepnNBMytLOjgqAJ0jTl9y45WEosE+XYeSuGDhj5c/1ewEYPgp
zV06VEl4h26SXBvJBY8FSeuRDQWg6idz/l+CkjBzd9bxF15csHTaSfiKrACc
OkQtLBKThHTzF1BZnQvuyUjnS+jlh4H+80duKEpCUnZRv+5nThiwfdr6ugM/
9Pd49bBYVxJ+U9inj6s54OMt87jxID88FGlTcHSvJKSVPuO/U8YBZxIqB1Rs
+GGopS73CuGfFP39Dn/mgDXvnU2aTfihK8vQTVUgCf3mPzGNv+CA3z/WXBTf
yQ+/PHSOC9wnCY/srBPbiOKAGz10u1N8/FBgU8iFn0aSsHgoPqDfhAMeDx7S
JZdRoWKzd4eopSRkdWEuTytlh4lzhsMaxVSo0TXtGER468Zbv72f2GGIudG+
E0VUeJ7G4OknfGfqodL2fHa4vyqV9OE1FTonXWZ7sl8Sol/9ckKZ7HA68+1X
u1QqTGEthYLWkrCGS0XsYhA7/HdGbdj6EhXy1e60eXBAEq7F8XdN72GHpzny
Wc0VqHBMdGUV2ktCES+Q2PWWDX4Cy1uyN1HhT6XJvx6Em9YpiPbnssGwL8wK
axJUGBk9C2MJ/5Br4TmUxQaDMzoznglSodoBg/VmwgMUijxGE9lgPtLPmGMi
4lc6XXXgkCR0r+4c6rnABp2wxUTEMh+k6h9+5E24IUdwSbsXG/zOk2okN8UH
8+Yu/I4gnP5526kmVzb44UbdyqEOPlj8Uhe+I/yZDFWowpYNHvPydc4q5IMU
B6DPIPw/y0+L9zTZ4AvjY27b8/hgq0xlB/thSehhc0P1pgobPPOinPo5iw92
6UbWChHebiO17bIsG9RrcT9pkMIHbbM3BKUJT17LY7iLs8GBT+tuVXF8MIDt
1WtFwqdXTe/ZCrLBH5Om3JY3+SDLb4FH2wi/OM3OAFxsMPAN6ejPAD7oqpA3
oEn4+ytsW1VIbFB7dNTW8iIfNB1hXNcmXE3FSUWYwQqNNn2YqzrNB+cKAjx2
ES4Wp7C4PssKn4co7DF05oMJXW+e/t9NlK/eGRxjhYFNs8pfDvHB1CBBbR3C
2c74zlT3scIbAc1IfT8fVDolK7qT8GWstDm/jRU+uxy9lm3IBy1lnSy2Ez4R
Uih9r54VJhyq7hbewwfdNmCdMuFd6zvGLv9ghRQjK88wdT54kvxf9ibCP3h/
DT5SSsSjSjnrIMUHLyd/3s1NOCXYmi5awAqbnJ+OlAjxwTuW0mv/iPyPdN0W
WXrOCrdKeLErchH7K5rCNU34qpL2QEMmK7y3sFdrbIkX1uJSgVrCyax7hqLi
WeGlcQUDu9+8sPuc6Vtfwo0n62OHz7FCkC3fXxjKC6susnz3Is6Vi2xonKca
K2yJ3hezfIUXquo2bDEgfNBo2neHIis8vYulTfscL3Ry3ddIJ9yE1V/unxQr
1HK1OfD6KC/UsK1aKD4oCW+KmC7c4WWFLO90i4N38sL3tD1ui3bE+G8Um4xJ
Csy9dMbg3RAPnL/HdYHfVhI6u0pxRuVSoLG4+ivmTh54Ilna4idRRwLK77NO
Z1Fg0HpHjUUDDwyLjb4QRbjOL2Yx84cUqDheK9eBeKDv5f9yV20koSe/Shp7
NAVai+3R7n7AAx1HnV5XEnV617yUye80BQ7r2jz1M+OB6V5M8QJEXW/aLHdQ
TJkCV5g9HozkckP7U5L9R0wkYb6E0mzUEzI01nd8/P0UF6zcdbbs/g5JeECY
w47rIQlaPxJoyjjKBTX8ZtwbNCVhIElO7m88Cb6Ld9W9ZMMFfWhOXTyEn7xO
e/orkgQtDcRyRPZwwauMr5bX1Yn8XFXEMX4kuKPtWc9uXi7Yl8RKBdsk4dXW
azbrNiR48suXG6tvOWHQhtMZR6Lf9gkL8qSyk+Ddf4r2juscMOo2/eWoCLEv
sffovRdZ4Ef5Lc+ibhL96fMZC5VZCajDKVWU+B8zXPnVT0t5RYHerrM72uIl
4JGopQPG4v8AIz3ydooHC3ytssL+Z0McHuhcKIuRXAG2hcocnP/WgbGsw4Xt
+8Qhl/i++UDBefBe6KVhLlwCA0F/dpkcF4PhV5P0VG/+BTUdA42HKFNgDyXO
5sZWUfjEqXtndG8/KN1NvUM92w24e18lLNSIQIdRYXOjpAYQYmHxaRHkoQs9
RtWai8LQIew7z9GQLFT7YiPw82o/anMfIxV9EIQBPHeV5zj+IHHLlZC3JbNI
dXDdSV6KH6r0bJ67ujqIzq/6mnnKryHe3yOWz2W4oBqOVpI3n0ZDJq6iK8Zr
KFqBOy+NhQvm3m5orXeaRvk5dS8ueayh0/rhXy8NcMIk707zG77T6FLAMxPN
3DWk2PkxvC6HE3Ld1MtqS55GYPqO61u1dZQQdLxk61ZO+NCyJSxmZBq9serv
OLzjH7ovrfDHR4MD2lh2qm+Ez6BrWWK1akJMWJfNTdxdgQ2q7LTvvkTELR2S
PbJPlgmnPRMOSCezwYOFdzh3Nc0ikSIri30aTHjk2K7Ej0R/sZNaFPw3MotS
kUIQqzUTprFw3Y1JZ4X6zDvEY6hzqNaxzvbRLSbM4BBmw0KssEsnJrTy+Bzy
P//kwWcGE/4oKBCjwiDDBKoV6cu/OZTCrvki5QczbuxhP9bzmgXmP4ihHgEL
6Mdp9RXrZmbMyiZp03KLBcZqmPHJ2S6g9OQvM8O9zFilX9XktTsLnBo+LD1/
cgH93Xlt8P0yM6bXuh9iEWeBQ8mKE1kxC2j0aMiHMjkW7F3wUUwrjBmGGPHc
NupaQLxf/F6r+7FgK4Wgih5rJljtOd2XG7iI3jAxx74LYsFq+GTPpDITpJdT
jzUnLKIXR8WT+KJYcN9zT9ZOFiZ4J3NrK1vOIjK9ottg/pAFD4el1JZ5bIDd
B5IP3vi1iNQV1+NrvrJguXG7JQHVf2BYW679h8wSCn+TXH1qlQWbQ2Tbn8MA
kstVv3vLl5CXX8c1eWYSllI2XDxhzwBbrz7Wi25dQjmvnt7JZyPhodnxjhwy
A8CF2Ky9f5fQ7zTGbg0hYrzlV9PEE6vgr+u9n19FltGBCrpJ2RYS3lSgb/hX
eAX0P/Hv2+a1jGR6j9zrVSPh0JyZ+2Wly2BO56aF7I1ldCimc75yBwk/r+3X
P+mzDCrSgpM23VtGCrBPdXovCRfFdbHTKpdA3BMVPV20jO6Jvdhxx5KEk5tj
edQvL4L7ZYmFE4IryFc2+HuPNQm/MbD8EbJ5EfBy/BHQVF5BBqVqPUu2hJ+m
KuTULgBfw3TpML0V1KEf+9P7CAln8YqXnJZdAJOvOJ4be66gwyweOtWOJOzv
qh3P9XMedBvq234MXEGDIeHWo8dIuDySa3OI/zzwSttg33l3BdXvZXvl5kzC
IVZiA3M1c8D4MWPUCq2guCz7UOxCwgWr9IZpvzlw7qPw3r+NK6h83zeFNlcS
luVL+/dNZg40m50cTxoj4jcS737jRsJr/Rl2l3/MgghxaTZLplV0ejueNXAn
4dGFbVUsF2dBhdnTTB7aKsqyb85JIPyV8Xn705KzwFU3srpVZRWlGZsYphJ+
Jv3l2qtvM8Aw1/Nu/r5V1DDcxHOCcDFoXvrbZwboJa5y3ju0igqOypl1Es91
a1h/20CfAZu8Gbph3sQ8oivV/4g4Z4ZUJa0/TYM1+0s6x8JX0QHdxGvVxLqi
K7bEPXOcBuelpTYZpq0i85jkFy7HSbhwU+K3oT1TgLrfa3pP7Sq6rBZtqULk
rZbMHf474C/gLf/012JwFd1ninJ/6EDCj+ue2N5Ak+CfvCfHmfVV9Hm7HThr
R8KX+grGtfQnwChULmjcykDbehMUfxH7e2VN3dwodBxEKwWZSxkz0Pr9378b
LEg4PbV5WK58DAilfRDxc2KgcyZJqNyAhFXeive5G42Cfu+nltaxDJTyOP+a
ylYSXlSPv3XQeAg4nd3099UMAwUVyY/HKZCw6krxsm3EINBKrRjx5FxDVeZ3
uhKkSdiO7UD1vm8D4PGvoWkN2TV0SYK32oNK7JdJgv6aUT9w9GGe+2u3hgQb
9182nGTBz1sD892NeoCJTmcNd9EaqmQdsmFKZMHHPK5Y7IprBE7Dp3ZUha6j
TJbPHyvDiTpNn2BzE2gAGtZ5OxzS1tHZ7aMPZPxZMMvZudes936D2ycsvJYK
11HTYurkNUcWzK1l64O1a8HfRx1vD46to947emO1Eix49W+rvJlLCYhTuP36
oc0/1Kqy7mIfxYxvdQTnBLbnoL+XFouFNm+gg8B5uoOVCY/ylQtE2rYiiwaL
IzvdmLDUxPPh1T8baDSH83pnQhvaq/DE8d45JlxTEijqmrWBHP1dt1nXtaPn
asrVC9eZ8OV6pqLnOzeQ+7LG7yNGXag475DIh3tMOJC/SZNu/Q+VM01EmEb3
Ivs9sdo7vzNhclZl++TRNfRjhnt1XW4IyRmGaI4rM2N3zfhyj84lZGYns+mW
+V/EWEqSPTfBjH9vt7Cixi4hNr1Bl534L4p2Se53Jfpse0OKGQkuocSyh6vi
mlNIyUzynRWZBUdb1Sc0Ziyi5JueQiUc0+i4Ko8tL5EXqbjKXacOLSDPbOlj
pO5pZLzXhU/anAU//vYmI+XZLIrCii6nHGaR9rdCXrMcFlwHik9usZ5F8GnN
Y43wWdQ08dM+pYAFp7Pd1lFfmkEBIVzfJ1/NItt9MTWdRJ/1bqFy5hvMoHip
xX7ljVlU1/CJbW8jC27mM5h/nTeFvquspl1OmEO/Ur/utmMi+t169FD571HU
e87INyZkHrnluwc/PkjCLU6HQzlIo6hCju3zwbR55N1RZ9F9guhfFxQz7mmO
oLwfE6c+FM6jnS6vzrGdIeGRQF+pvIQhJDNLrtMfnEc9VSft6SEk7L3d9Q/j
v340KaHz1VJ9AZHrHEc18kg4nOP9tnS/PhSgoOD1GS6gwtfexfgD0b9i2t+2
P+5F99T11z/sX0DTNiwa2qUknD9m/uLpfDcikRrlHIj3XNtn+7yOZhK2NEqR
MTbvQj1Rymr/fBbQguJhIa5eEta+lebrm9mBxDimSdv8F5CsrWKrzDgJl5jQ
RystWpHcsqGqWtgCKoiKMGfeIOFbh+a/ST1uQVP/ZNs2bi4gDwu6WzU7GdPP
towdXmpCMUZeFMdbC0j64Z831wTI+LJd6u47Fo1ov6trFoxeQJvP6IzzS5Cx
f0J46u/MelQQ1/D9DTF++vlk7R15Mu7KGprds1SH2q+kZuVGLqDLt0yFp7aR
8ZrMmW3lyT/RN3mdUPXwBfTYMiZopw4ZJ0oMvXlrVI3ocQfr9G8sIPfhlJoT
+8i4yGyRcX72O1K5GS7Qc2UB3c569/WcGRkLndx8fcujchRgNTjJ4buAuuZ6
hd1tyTh5NMqT3aoEGaQyNpV4LKArm+RS9h4l4/4BVZcS5/foTUj+5nabBcTv
saaf4k24phA5oyAR1EwERncILKBIbu69azHEutp5LETGnwLRJNOTsRvzqKbS
kZ87iYxPfLbOu7GSDz426Ya1js2jWxU3/f+lk/HJ2y+VD80Ug5t/567v/jqP
Rs9GHrz1iowPhPDcWTavAbHnH8W528wjyeN9PLtryNj69ty0e0Yb6NghY3Ri
1xwq/mNV3slMwaXc50RL5DqAqtYC5RbxXSVrWlPCyk7B1U23at7mdIIuw4DI
80Oz6OyT/8KovBR8ozSqm9e2B3AsyNlExMyirpF/Ct9EKTi8S5Cava8fbARp
bt1cN4O67f2GP6pR8LXShUeCrSOgQm3dQU1iGj1R+WLw6SAFq1PVeZuDR4Hr
Lh3vqrIplBefydR2hIJj5MyyWJTHwPkQPYMdllMoPC44u/0YBe9poKqH+44D
ybVFdSWHv+jMV42WMHcKvn/kZ8CTmUnwDTcHHzs2gb5F5Lw+d4GCv81O5my9
8xdED/tsSmsdR/ymas6ZfhR88+ggbVVhClTNDW2I2o2j13cfRr67QsFc/BxL
OVumgUbNxV9jBmPobG7mg5AgCs6+uWnQcP8M2KjSO1bBN4I6nzA/xFFEfv5V
pw3dnQFw6z6H6sBhJLYzqY7tNgXnBep+TW2bARo05xLLiSHUauB7WCOGgs2/
bzRD11nAbPQwerh0EHFr7OhVT6Dgs6rtJiaec6DY6ZSM5fF+9Jy7LaXrAZE3
Ptsbp5/NAcEzGy5CZX3obuIlacMUCubcc9w9eWgOKPwdOZwk34cKNpkKxDyk
YKuWK0YiJ+aBPtr/eGqoBwkljnf/SqPgJ/zvUkNMFkDXE4+7ER86kFOZUiJf
JgVH//pFng1cAFST0yGhZ9qRqk3TairhhWb3mT3fL4Dz4ilHL0i3oZ+0W5LU
xxSs06npNDy2AIpTErXc6/6gMXBN0ZPwvRuS82ekF8FucTMBj6AWNLb7tdEz
wpvznfJWDiyCN9mxzbdUm5H22wdPagnXHPQKvxO+CPaM6lh0tDSicFLLxVbC
E8yzIpQ+LALV4ZZNXsENiJ8pvrea8Du6Q5U/hhcB99ZjE0bK9Wi70jOxJ4Q7
dlMvXhRZArtlfm669qsOxRzcZuVOuGv2JyRvvAQYAQUaGiM/UdQh+1fchM9T
E448erQEHu7Ll4k7X4WSXy/n8hPrJXfcdzhdswRsmrngWP43pOhAyfV5RMFB
66sue5eWgAUOkY2YKkOCRu733mdQ8C6msBAms2UgGtFK6634glKeck2vEHl+
IChfOHN+GYi3JIqMqX9ALK8/li6nUrBD7JEtfx8sg9vCyYn7k/NRcbCJUQ+x
X33i7AlcA8sg80roob9eyai3akLmdDIFlzta0/+eXQH+2rq2QdZvQOufnuyz
iRQ8dvfk6/2xK8T98lsvg1QIdjiaen6Mp+AdKZ5yJa9WANv+VumoT59BZ37a
mYlYCg4zTfrQPbYCqq6N/eZ6UAbSXicvCxLnM3CYsrzp8CrgCLlkvSr+C2iU
Sj48GUrBihzkozd9VkGwdKhB01AdGGbcNlAPpmCnOAcH+YhVEPVI7jYHrAci
aYP2Y4EUfJJxzpAvfxUc41+EbnONoOG/ZielqxT8hTOr9+P6KrjlvTth6Wgb
EHPNM/vjQ8EvnKKXmPgY4KGm11zFh3ZwZ8Q/W8ybgj/FqnrdkmaA0oma6lcC
naDOJfeJxWkKvpXcKXdSjwHk7lnb5Fd2g449W3bdcCP6gLj/O5cLDKAVL/jo
YEofeGjk80f5MFEX/M6XWgIZYHpbRHexCfGdNmqZOWlH9KXctRNJUQwQFK7p
Q1/oB4ZmfvqPbSh47pNv23oqA5w9UawRazUIaNOtmV1mFDyY8Zcp5wkDnCvI
7n2yNgjK6v2fnzQh6vfYfyGP8hhA+MyXtoznQ8Dt926JHgMKNmQq6Iz6zAAX
djYeVCeNABO9Iw05uhR8NCvY+XoJA/gtbflV+noEhAUKHl/UoeCtb6ISy78x
gG9uwQ2Vo6NgfMfLAa2dRD1GCZx2/MUAPFGvRC+/GwPh7yQ9Y7YS9TUYWfGy
ngFiNqf42J0YB11z9LwnyhR8bGvh3iNNDGB3XqV5nWsCwATVS6/liTr90aLu
0sIAuey+T859mADyTFv6czdR8O2rW1mq/jDAZPGSwQuXSdDVc5/+UJKCLfan
8sW2MsAZuTrFZzx/wWrqS60Aop+nl3d/fk/41dvSTac+/gXM5bZOB4QpmO/V
HU89wu/4l3cMuUyB65WKb8T4iX3hbL62hZj/+6DH2XjWaZBp4m/RzE3k/4yX
/bVmIv9UB3ybuEc8GzGyDSfeL4rcXsc0Ghng09fn0O3NNBjnBwOKZAo29rwc
+qeWAQ7l3XfKOjIDEv4UbzJlkHGF68UzP6oY4EqoehP7qxmgGs/M/W2ReN9x
BwopVTCAWezhrcYss6Cab56hPUvGm3Pm1FU/MUAWS0WA4YtZUK7J4b48QsY7
LkqnBqYxwIP4zM87ludAw0JO/N8mMj52pOnswl0GqBr03qVnPg/4r//o5ftN
xpEvTST6oxngpMxmJXr6PHCTh9IKxPv0WAI9WsmfuCfzdPLsNlgAafdrfqmX
knEVW65UiBkDZPuLbJeJXgR9UYILlXlkTHGo/JbRsgpCk9oH/lBXwHONh2+4
Q8m4gytLqbhiFexvMukyO7UCHJcdnPgDyPgC93qR3dtVsMP3nKb/1xVw1Zmj
l/MyGS8KXeOcub0KuK5/cGLxXAVXs2ktHafJmKuhQUdo9ypYCLrCVv6FAc4X
cN3esCHj09FO0l4BK0BTRuhllP0/MG8cu2gvRcaP22cgo2AJ7EjR0TJ5xgyr
9bTLpl+T8M8nvPKv5ebAk+yaajcVVvhF58FC0yfi+/nC+7hV+17AiGION2Dl
gdtvURNPvGTCFvXudxViylARZ3z7IBc/NPXf7Pugcg1tL1gOK/wwgTSyXehX
6ILwj1b69vvOS6gkrKgjemIZVUqqZNNChGCBvEdxMvsssph4d+jqT2Y8O6+c
G5YuDCskQwyPs42gJrXlryterPjkjx17rh2iwf2JMtQioVak9bBbsimZEz/9
Lhe48JMGTe71YiH0GNG+f/+4O5cTq2Ys6YXV0aCMibGBoE0GMmwzUkj5wokf
qLXp8tXTYJQi9deybDJ6kbsz0LibE99udV0VbaJB9Q2dPZcSo9BKUZzxQTku
XPipv4KlnQbHjtudymi6CTJkLjpZ5HHhT+Bqj+wQDY6KU2ILnr8C6jvuNz//
xI2jnSg571doMCH85K9HpHIQcMBov0U1N4573j1ft0qDT0gedzdXlYMEmaLS
kXZufN9b5tcIgwYvu3R9yoypAOJFljl869zYpZlLg/cfDa45W/5MEv0OmiZf
hQkDHuxAiphRYxGBKisyoSfUfgDGidjPLKU8OG3d3uo3hwhcfqrJprS1Dszv
3XnuTBkvPpHw9lcKTQQaWrU3hts3A/FTrhP76nmxkgVJD4qIwAK6o+algmYw
7MtkI9DLi9+XDQ/1EX584MBuF94W8GxHV0vWP178XyPzlLSoCCx8zy+z81sL
+LjpwmrULj5cqazKekVcBJrs3Of8dWcrWNM0D3N9xYenWXmKnkmLwB+1byKs
hTrAosgQ+8gXPlxiVJewWUYEquZZ3aad6wA6KUo3T1Xz4UeKlTiZcLtjXh9a
qzuAaNnExUMjfLg5LUr6xiYRaLXFzelQaCc4v6sweZ1KxQqCnoJbZUXg3nd0
QbXZLsDFon5f2YyK84+YKXEoiEDfg/452cM9YOg285CBDTG+23TtMOHylTEs
PsK94FjGzs+Oh6lYrzNd9ynhOx0KCrQNesG49fBS6EkqvnJmC/suRRHIKaVG
Kk/vBekcelWFIVSsLU18rCmJQC0/sfXvB/sAR8LKga9RVHzqVtOBa4Sv2KQ/
CAvtAymnbU6WxFGx8J8tW94R/lY00wvk94FssSmV0nQqfvoRGkspi8DqnynP
X3P3gyLmW/uefqLijKinjo2En091lLla1g9OlNQpJJdQMWf/VCaDcO+0LwJK
M/2A/U5fclQlFW9XcfGS2SICW7x6pRulBkBC1nUV12YqTt/63x0XwrWlD19X
uDoAHLz5zC06qVggKHAkiHDmvVnlNTkD4LlRyKrGABX3jR+rSSFcLD1b9HzT
AIARElwrM1Q8tXRHs4pw9xe97W+3D4Igzv3ef5apuKfkblEH4Tp31PUPOA0C
rrYLzu83qDhgNb92knAtxRM5f6MHwdSSwEgsKz9OP7P3/BrhoTQm9qiiQeB9
5A2zBw8/Ds2484RdRQR+PpBzYtPwIGh9XvdqrxA/nhNc9hIg3PH737wPQkPA
4b/lKao4Pxbe/btClPAjar4T5vpDYMout6J3Ez+u9zjzTopwGdE6epfPEJB5
5r39jRI/3tQlvmsT4TuGn6udTRsCbOeTnvFs58cP2TL3/N/bt4hVVf8cApa/
VMw9tPlxP2+R1//nOWFYN6zANAzSHvymYz1+rM/BW00n/MbHOzeD1IcB7YCa
gLAxP34SZepIJfz2okh2k8sw+Koxrn3Kkh+3PuKTohC+84jOLuW7w2CnQu6t
Qjt+fK6TXXiJyMO04hf9qxXDgBRdW2Thyo/z/GSe1hMu2aD1WEhpBLT6Xk1K
PM2PXd1DDL4QPv63ferYkRGAjuPslvP82C8tTTyLcLACM7NvjQDVa8+tD93g
x9M+fiEehO/rrZfaMjkCbjT2b+xI48fbA1IO1RPnR0ElT0C4YBSUfLM8457N
j7fKfVp6QniGfi3Xf/2jwLDShycxlx9b5R/u9iPcfLu86VWhMbC2xWN6sIgf
H3E4HE0l/DMj7Gqj3xiILV42O93Mj5W754NliXPeVCh76NSecVCb6dczySuA
Y3qd9lXJi8CpK6/CSeUTwN7Ed2BGWAA390QJ+BJ+3cuznWNhArQq6CnOSQjg
62ezDOiES1ToaPEoTIJ5nlKvyS0CuMsqtvqonAgcYWab4IycBDeKfzCXGAtg
/97rD79tFoE/L5ZO9Zr/BYW9EeMDAQLYWXT1hhTRf/p6+aQY9VPggr3+kuyY
ABYqkDUdFRaBCyqbg074EPc06bMD+dNEnHq18waEd5HDOMHNGWBWHKO7d0kA
9/UxDFOFiHOecGBKPGMGhP0YVrMgC2Jf2t9GI0Gi71l1FNf9nAFFjGsa5lKC
+OMVgebrVBEo/C/gP4Vts0CK+cbmnzaCuOq6wflrnCKQz/Dcm6CJWcBINg4Y
LxTEwZuOXyhbo8HdD14p956aB82r94oyrwjhON3h6uI2GpTzfkDmPbIE+H26
ptp+COPXwg/53cNp0IDfufEwXgPsBhJNOYIi2ID2wyGViwa/sjwR2KrLDL91
z45clqdj7jfWN02DhWG8dQLPbCMJGsSHcrIIieI5dfH9fwaEYLyKXkyZJStc
OB+hFLAoiiM2qO5L8kLwwP4Ul+pBdmjctNnw9Esx/PimZfV3Z0GYbLKrUWAP
FwwIyC32OSCOFyMz5TWvCcBJtyPDXc944GFJrdQnzeK4L0vtnUkkP8zM17up
M80HpzY8fTi1JbBEtoXHrgdUuH5Ztj6KQYXVlNqMTyESWJXrzrNWbj6oJXno
7wNWATg76jCSGiqBs5MXYC6ZD+rIZ0o7cwrAOWPnuwFhEth847DftTVe+CBJ
84oSrwAsmJcT2R0hgc+f5v0kMsELq14VZL8TFoBCNx5XZURJYN1Mqbegmhd+
1stoLZUTgPoHOeYk4yRwjPCjNssoXtiHnDMK9QWgxL2RlsGHElikz/XsSTIv
TD+49nk1QAA6vEt6ezdVAl9QC07hXuOBC0ofP+YEC0DLKfLCvjQJzLLL+EL+
HA+sHC1ptQ0XgNaUY8+T0iVwqcB71aU+Hji1A0Q+vy0AowyaW9UyJfAVlYwa
3xIeKNd4PNHsoQA8GbTXQ/CpBH61LKmqEsgDL/yVMHb9KAAztGSf57wi1lU1
g7MWuaFMnfKevzMC8Idme9rW1xJYbq+L0+lJbphhuw1VLxDxH9r1Np9wfQPn
ILUBbvg7JFj32YoAzM7ZDt+9IeJP99n//jc3PMfsvdmJWRCqH2QefFwggUe1
I9Rfv+SGko++3/9KFYR9Vdc9FQolcN3abNxRF2740nFpzUxNEA5rPa3/9lkC
/zEVa82s4YIR0heT070E4buDWuvULxL4nuU73t1lXHBuTnzRwUcQSr69ZnaE
8MSsira6Ii548EGdMe2CIOyuP2E5QPj8cpbO6lMu6N3wvizqqiC84qy82P9V
Aj/ozRTXDeaCdeRyBbcoQXi2hLknCkngs8fGmAJ2ckGPIrczQ08F4X9SMbqF
hHvGNfT/U+GC+s/KF+JfCEJ46NWXHsJzdW+cDNrMBScvBJ/TfSUIO3q7FLdj
Yl16Fyyv83FBUzPXXTHvBeGqlmfuR8JDrw7mu49yQhdTkpB8uSAM3fJPvplw
6wJqVkc3J/xyOVy28rsg9O69XT5D+L7whzoHmjnhzjw22dPVgvCIaaW3bIkE
1jghYburjBP6JRybeVEvCDk0Kb7nCNf61XFwKZUTXjeP/CbdKwgPz4/VBhJe
2GAqFpdIPLfq2K3nA4Iw6onV8WjCv2mx3VW8xQk/cxUYa4wIwuDZvQr3Cd8a
/7js6w1O6JrpyCgaF4SaZ/DmDMK/n3ry/MBlThgqqP4MTgnCx5G9dk8JT1ZN
MR7y5oRbB9ktv80KQrms3C+5hM/v5Xro78YJlRKLRs0WBaHJmpLDa8I/DYfk
cDhywvhE0cCfK4JQ65Pr1nzCg12izyTbcMKQgxscNv//39qIu9b/3bzx1Zii
KSfsgPvu1DMJQe0ruy79fx4n68ub3+txwqH379lsyUJQ3GBk9P/PLW05K7Rv
JydkcGteqWcTgkWk63f/H+emI9Il1Sqc0Px+bK81lxAMdfp38f/r6nojoHxw
Mye8kZwJf/IKQcNO/+j/58Hgeb1FJ50T+hwE980EhKD75DWHIMJbLbqrRimc
cKncTw6KCsE0ARHB84Tz7QByZ9c4oMv3L0eLJITgp9BfzM6Em+xI0J2Z5YD3
pIdvqcsIQcmjX4L3EB6qo/18rpsDHtiAlVKKQlBq+Tp3O7HvAtnBwaNFHFDq
8LnSiR1CUNiA5WA5cd4CjpOfJntzwHaV2lh7ayEYGHnlQjLht5i6pTndiPEf
7gkgWyGo6ZhYeYbwA8q6J644cMDE+rRIhUNCcPZLDY2XcNYfGVp2JhzQ6lmJ
5ewxIdjMKme4p1gCc0gsmDJkOKBfz1PtAC8hWCIaOQKIOrqrP32Vr5EdZu1V
djsRIQQXi5+FzRL161C9p8p2Fzt82TXx1+GzENz9ZqfJPcIfk/+rM9zODpd2
m9h6FgtBZeqh61qEO2pvb9qhyA4Nvq9W+pUIQd0r7noX30tgzkj9Nn5hdni6
v3M45rsQLGXn39z5lugbm891omk2+OnXk6m3DUJQXtTltBvRZ3Tu5ylO5LDB
wE35bL/HiXiih6j/PSPOlV5OZaQwG9RYT3a0FxeGdccVObwSJXCZvyrP2CQF
rjGaAsMvC8PTLT57UhKI/v/idlxTPwX+LMDfEq8KQ1HttZTv8cR+mRCX5FYK
1BreO/4oQBiub2/vlSD6+ecmLRxfQYG/b6lUfQgVhu8Ew2PybxP99rX0faU0
Cjzw+kJDS6wwDH+KnUPDJXDatrgdchYUyJQZt9iTIwzNDjW0V16SwL1zn0iH
npNh6ASrOK1FGP5eYlVus5bAscX2qlUnSLCyUPYbkwYNXptJajdfFscn0jJK
w2aYYJO8SC6DuI9ul7/KmRQpjk0efwFmbOvANT3ut9RhEbiZnL7bck4Mv/Pp
uNWVtwTOf/msb9QqAumsX3YbWYrhsVOVHn2PZgFLnnhGiB4dbkSOHSy+Joq/
bU0/Ja0zBpTH4RHJ+3RYb/eMMyiWjjNcL4lHvyDuP8X3L4U10qFFp4pHQzQd
Pzl9Z1X3SBfwCiftB010OH+Ag6YQScceRYbf/7J1AbYO79plwrUVlF2+3aBj
aZ6yvQfcO0EtjR2faqHDe8m2H2bP07FYW+xWUZkOwF064rWzjQ6nEy+prdrS
8ezAu7Tce61g3K48JbabDkXY70iX0ej45kvmX2zBjQCXftHYO0qHnzr+0+wV
oOOkfhhaotYIuPms7WoI3xrwI36dl447s7l/XetqADe/Cgs6jNGhd7TjNnU2
Onb0O2Iwu6cBWJYunDw/TodNQvd7QpdEcGnXg13Di78B2Xbr8dhJOtxXObTR
3CKCl0WLfCZaf4JyzGEWOUPEv2jbqpEkgmMnwtgz3paD5V8pZV7LdBjrYrS/
JEEEF95fln1I3M+Nwgtlmwk/KjhVZBkjgp+mjZml2JaByYD9zXordOg3eeri
iXARrDC0sJg5VwKOaO9V51qlQza/qrPeF0RwW8PZ1jenisHhY4IFsQw6LB+y
BPJWIni72wOzLs+34KcKc5DJPzoUimlnSjQTwfF/ppSMOQvAnfqdDfcJfyux
/O6fkQi+/kKKvfDFG0DJX/UdIPy4ZM3cL10RXMF/4M7RllygOumbeHWDDmu/
Hy4/skUEj0kO+rB3PALbnmHzBCZReHUBXuSkiOD5Fw1Ks0fD0OEePi0fFlGY
0G2ud4hJBHN41E7vORiL7m3e4MkiXE83ejGTQcNsSst9KQr30CHzQ1uaCFfK
iN6uPkvDZ7O43Xj4HiEzrbPbdpBE4btrP0q1ummYtk3+SAIlF50zPXSok3AJ
u/xF3zYaPq421rRemodcKt8YkciicHR7Ai2viYZdKsKeKcM3iN+g9KIi4X6v
N4uK19Aw84cnGcfWC1Aox7bE04QbSWdu6vpIw//2xMzuufwRXcpaKmsn3P+i
fx7HOxqumyuSvN9UhG6JDL6YI9yOzCar+ZqGteY5DAY0PyOloPKfHBRRKBmy
+UfQExqWUcpcdJz+irYfuVC9nfBfU2KMx49oOGeidF/4foRC71pl7SM8+mGm
UPlDGo5iO8FkY48Ru412oTXhJzdvZWJKoGG3nzLPHd6VoN32+6I9Cb8zl/Jb
7A4Ni3er1R10LUXOwMfiAuFusx63NCNp2MHi+xkzgTKUOISMrxFu12m2xSyU
ho/uyvDWKSlDgq8/Xgkm3H/L/BunQOK5ik4l0ufK0URN10A44ZYcdKnzV2h4
t3OyPZN0BZrT/3AzknAnN8/zwRdpmBHUJN5WW4Eqer45RxE+1JfyItaHhl+3
R2y8vP4NtcIE3/+PPz/mVPXwNA1zMAlM+6t8R0Hf0or+P39Mq9p/q+40/CG6
hfro53fE7ng+/v/x8EYazNk70/D3L9aUkvOVSMkmqvX/8UdK7qjgPEzD0j+v
qk1/qEKt5TMfvQi34I+fcLalYaFKadN/Dj/QxWuXrZwJl+/ZvvfDfhru03Ve
pfz7gfhIL+0OEp5rrX3kqBEN+67tmGE2rEHUqqjnOoTPv5SQewlp+EWXN31x
qAblZ51cViTcz1FfZHUPDWdzxqf3R9Ui2fAj74QJt71sdilOg4YzzoXdfvHr
J9qvOnR+gjgPu2SVOHKkaZjv3KLihbw65P7BajmCcIfUcd4RMRr+aloy/Ptf
HUpbScj2JLzJoX+3Io2G39jHiG+1/o2M8l9/MiNcTekU+RE3Df801yr5M/sb
zZ+r38xO+KO5APtrK8L4CvmwBlmnAW27pdPiQ5z/T2HXv/ypF8Zq1P38T0qa
0OW2cxdmmUXhzQwz1rVaYdz+YWvUd4FmtPV8cvRnwv+LkfKVrBLGewK3rw26
NqPrjyZZQwn3ivv+ygEJ43Ng5h2NtQU1zbrK8xD+be3+u+JcYXyn2ifJ2OwP
4gy+v8BD1DurDXyvGiaMx9U1drf+bkOy1aMhJet0eP7n3wfpmsLYtKDcN76z
G3Fm7DWaXKLDWzbP92dsE8bX1EkMY1oPenZWiSeM8KuP/LanKwtjLlrc79K9
PejMr4HdooQv+W+/fF9aGDNa3La+vd2DrjRJftNbpMP3xac4znMJY5U6ZTW/
Lb0o0+durN88HWanxrH87BPC7mVWNcHufeiKeM+dB9N06Nmxab98nBCOiBII
SGgdQIeefpPNGqZD2dsbFTqDgvhJibbg04+j6FqA5KmiOjrsr77wd/yQAC41
vNGawzWLsgxlfAVuEn1SwfC7XRkVe0QhPt6Pi0if6wmtZTMdrvUaXYms5sHk
B/EU5VsM9OybT3tdnAiE5WFlc8yceGuEprXb5w301LZDTLSPBluvz9h8Wafg
Ztvyqc2fmPHTY2vJBnw0WMcqtehnxIw16X0M3osknBj4g5G8IgQja+0HRTSZ
cQy14njNFRIO2aLxWn5BCFoM3VR5K8OMH9IcVkKDSDiiz+i/V9NC8IdFWeEf
BhNeTMx503uLhLXPcqsWDgtByq/T6d35TJhT8bWLfSYJ33SXjXjUJASffw84
2S7BhL9ynDCUqiXhjIXNDl1vhGBEgJ8Lc+c6Sst+SZ6RJmMZ8a3l825CkN6N
xd2ZVtC2d2tD+A0Z89qwt+0pE4QKzzVcTzcto++0dJZN78lY84w7X/hXQfib
eyzG+cUy8jxo8+lyERlbxqxr/vggCMHrkQh5u2XE3S77nb2UjN/eX9I3fSkI
Ty+mPSHlLCFF1U+/P9STsaPmNSh4TxDOSODNNLNFxJ4MNPfOknGbDstyn7sg
lLh0WTEkfA7ZVR2YuKZMwd3UcCFHMnG/2CSLiw/PoWPJovREVQre+TnZWOqf
ADyQoPN3QmUO0etHF9PVKPjhcoRC55IAPGWnTpaqn0VLTxoj7+6k4OzD/sOW
4wKQ35lnsl5yFv1qmhNagBQcm+SrwfgtAEWdL4ZGFEyjQqBEv36QgmuS3vCH
pgvApE5fLqnH46jxlmqjxCUKlqm8u6qzQwDGW5I1co3HkeG/knMZfhTMNOUd
eGerACy+EuEhMT6GmLXNm4T8KXiv3vK9TgUB+PZzAXeu5hhKcrqQ1XKVgtXF
ey6fExWAt5OA75WyEaQdPM72OYiCtQTlak/844feFv/sFU+NoBNOpOTfNyhY
3vjdu/glftj5TPxEEecIYs47ZdoWTMFBD32ki6f5IWls92SUzTCivNr+oiSU
gl85Kvtx9PNDKeF8x87OQWSKpTiGIij4Pq/8lOd3fph3t6T65Y1BtMWeLhl9
k4J/pAcW+mF++IDaf+OE7CBy6t7ycFMkBXObJU4HFvHDipqPdRc9BtDM3W3+
m6Mo+HLKm3fBufywJuTa5SbOAdRZuphzm/DJ1eTd17P5ofQ2t2tief0o+2h4
/zDhb6yYVHzT+KHXbf1Cm5k+xCueLXn+FgVfqWc1sI7lh1avvjIMEvuQk/W9
8XTCreuiTupE8kNfc5fPYjv7kKE+r9tXwm3LrCbEg/nh2F2x9abmXpQabHK2
hvBIYFG/eoUfnnTnqbrk34twpelMNeHHeC/SmnyJ53alKK6K9iKNSyMNnwl/
6fS18IUXP3SVOLLJ9XMP+rD8Y+0h4Xnz0vnX3Pih4ikqenO0BxnscTlwhvAI
53sk02P88NW5aMFvjG60s2Hikyrh+4bpL/ns+WHg0rDw/N5upDV6SaKTWG9h
xZNn9fv5oc9WneTxoC7Uotx0NIBwgzKtpTgTfmjaiC9rkzqR/OPz1DtEnv/b
ZxWyocMPbWlxEkZsbchFVMFuKJyCqd0/RbLF+WH3RYecEpNWNJX9o1iA8PSM
ea99Qvxw8FD+RfbIP6jlZrLatjAKDgVMLG3c/JBRYm+ywNaCIgwPvVUPoWCJ
5V/ja+tUGAODKVaURqT111jOI4CCq5hXAjl6qHC5xuGPjGEDuury9jHHdQo+
c2r8xY0/VFjucLjna0g9Svz1DiYT5zb4PQ/HXB0VPjj2Tsxhow6lTDS6hlym
4OFSRbuqEios7NB/qDdRjc6gpTn/cxQskFMytSeLCkWeGReQPRBaf8zT2e5E
wWhTcoK2OxXKH1Y8rRD9BVnNTmwOOErBny6pNw4fo8K8vSUFyXlF6MEjZVke
BwrWW75Sm2hPhc9qEjIvT79Fdk0lA8t2FGwl7dDbZUKF+gf33P6v4xGay3c7
vvYfBavpGpzct4UK7W27UsTO5IGfpjOSKdspWOGtrp13Bx/M1KxJl/j8E3De
g6VHp8j4Udij7vxBXmhE/xfwS7QOSJS4CaaOkfHcl3MijCZe6P5K9PaO5jpQ
VaVi/G2QjG+MCXnv+cYLtSytpjys6gFLDs+3tnYyPhOLPDOf8kIPLgWh8wZN
oEJnxJ7pOxl//I18WU7xwvRL66kv1NsB6m5SlEom+vDW8ztFhnigjEakS1t8
Pwi7lqCWokLGj+Xz7gV3csNTuY0Joyv9oOLhJW4TWaIPb1FggGpuOMBH1qK4
DIDwnf1uTWJkbHRGC8195Ib7Bz/tO6ExCBz3cr28x0HGVhtbXPbc5YZjjs4z
yQ1DIJyp+HL6IAl3RooLmJtxQ5atrkUfRcaA1kBkd3oSCbfv13Y9844LSjFL
sN20mQaOfEGm73tZ8CibvBS+wQnd29kCG38tguvzxQFNG0x4a1K+QNgqG9TN
jzz+eGMRrIzL+slNMeEt1+M+8g+zQa1JvbITakvgqPPMKbMuJsyVrLElqYEN
ynDdY8qLWQIXFVcNxb4wYcMA75Sol2wwS9TN86LFMmDN4YJll5hwFuVfD48T
G1RhKT4Ey1fA8Y9XznOWbiCbDYeYdMQK85yOdR17tAY23QUxVirraGvTjeOG
AcS9/0WEAn/tGohz1Okr+7eGfvzh2THoQYFD/5IYGStr4Frx68CW32vos+qR
90F2FLgnUoTJ8sA6qPg0Odbmt4bm56P4H6tQIF98T3UN8z9ADyvZZ/KFgeLd
7kSnt5Lh4IDNRurhDXBgc5TEiR2rSOfc6dxbO8hwKrGD88gUE3zwgjvVtGUR
bdn4qjk8xAJTS0u3y7EwwxthcRxiGYuoPj1a+VA9C+yLCIn6KcQMJWot94Wf
XEROhkz7y7+yQJ3tl5OLdxHjxZiTlOYXUOGrE0/u32WB0pudD68FM8ONyfn9
jzgXUGVapra0PgvMSSoI9+JigbekP6yYy82haQW3pK5UZpjN5j9evc4CnWbu
qXjQ/qJo+032mw4wwdmDlwLsuEgw06E78tHtSfQz2lI9cC8TNJT1DnxGJ0Hl
mwGbhFkmkepHGq1TiQneW+1WfKNBgnxdoLJwbBzxvFA4YbCxAVo7am+ruJEg
77HY0eWCUaQWomxw32EDtM3dvKj3hQTv9d+VjZIZRKtOMQdjBf6BthiUue0b
CX65v/qML3oADQjfvP5+dB24cu593/2LBIGTuuTwfD+qdHwWM4jXwVLn17Xg
PsInQ0tiv/WhJurkopvPOnhkPrjvPZkM/7Bk+zOce9Dx4p4r4zVrwNshT8xC
lwxZSDoebIvNyHMq9M6ZWwzwddb4pL8+GQaDfomRh02o0ErCesWJAaJ4eMb2
m5LhTe69SddhI6r/ODr1QJMBtBvaKpcOkKGx5PnVtvDfSJpT861A5yqQvirS
IO9GhuX9lPhD5ErU4luRvb59FSQ9GP8Sd4oMbxTR2n7pViArPYW8bayrICCz
+86j02ToLhjUJXWhFO3apXPUr30F+HytCHjpQ4aR0RrLqwVFqPhbWYR5xAqY
ior3zTlPhu81fD4cEnyHWPdqTLQ6rgC9x8dXDS+QYeOpwKmi7pdounCg+ob6
CrBV4L0VdpGI08iDejA+E4n7jyZBthXQ2J+V4n6JDHfI5IpTpiKRwxIsEe1c
BgH/eT4fJlyEm38XU2gYMFRh+cj9dhms0ph1OP3I8Jz8m3cToY+A2CPtcdGo
ZSAEg2pqiPEKOZ9zgidzwXTrx8p9x5fBr8DrM9sIb2pVvpf26i3Y2EX+GrZz
GeyJUdDaTsSjmeZ45rRnEcjwFNXs51oGIbZW2+p8yVCyZ6mdrIiA4NNjd4/1
LYHxl1sfjZ0lQztJnktcBytASTejMCd2Ceiw3TridoYMrwwHTGVpV4KsbQqG
/ieXgARLk9E1TzJM7ey5e1S8GtwdHrA9uXcJjG5X9Q5yIUPus1b0Od868DKR
Lzh1fBGcHQjhabUiQwulL6V5+s1A4k2m/bX/FoHW0bMHdpiRYc8HfOXahxaw
MRHyn/6mReAVNvl5iyEZ6vVxVMaqtgL7KxEPlVcWwOV82SMjWmQY/vXS85Mi
HSCXJJfj8HwBKJ3e4pMlQoYnMvPrXZZ6gPU+x+n9XAvAUZFZk0qcc61b7T+Z
fw4BpTZyzdemOTChofdC+BMJiuFHNacih4HuH6v5l6/ngKPcv82FeSSoM/+y
6on+CDhAr8rBUXPA5urw98pEEqxeJhskFY4CJY+rp+315kDp4wy825EELznU
CNY9nADp00bT4Pks8Kh8rBvXwgIbL96N+KMyA3aGX7ihGDEDTsJ43fRvLNAd
/tn28sYM2PDbRKp3mwEV0yIRh9+zwNAZ1h6rphnw9K7EeJrBDLjlIufTEM8C
n1Z5lTIFzoKr2x6RU5hngLQ7W8ykMQs8tapu3V4zB9p0Sa9kg6bB8ScpqYKP
meGugfusYscXwaVfTKZzTFOA7H1/6ok0Eyy94XOE04IBnAoG3gZoj4PxV8b+
dgXLwGzJ01SblQXWNtDCGIcHQGAsv5W15zJwXr/tdE6JBfr77F9X2DQARi2L
fndLL4Op0rGCU2YsEH8usro12g/YTy6O4Wji/WJzUifuDgvMuiD4ceFqP4iN
U5n54rQIPK/P7C+jkuCakfGg+aM+cDXfaZPy3BwAtwX54zjJMF1vh/3B+R7w
TPW6mEv5JNjPOFr2XzUF9qiyv755pR24svwX1NhXB2QHn859DGeHgrQfTrfS
fwKfC8mvpaR+AX3tnJgtSezQ39i2xW2gFuy/d0Qo2K8GxCRkvXd5xg7V2yuU
fLfUAtuUbp0dit8BiJb9p/iDHbKlBE9LfqgGJc9cw2oFisAi+itC5eKAx0cr
+CPrK4GG0NWMXMt81NADqp6GcMANl4Vj6tQyYL9z4fVnq1Z0hHffWrI5J7z7
XSjmyoVX4EbiJ9vtqW3I+eFW7rv2nFDrY3aM24NcQHv6u2nrSDtK9U7qPuHM
Cf21K0zOfH0Gfol6znwI7EK3clfOXfTjhK/1E3XL2bIAPi8w0Vnfi85sxKfG
pHNC5kL/srmLMeBjz9W25xNDiONJedDoECeUP4cvwLPpKHvlzIac7zT6Pu1e
znDgglwb291+XCpGW1rPU7d9nkZVBl/dck9wwfgzr/RANUJ+pvd+85FnUP7e
+ot6J7mgaWWQuXMcRs7/2OOP3ptBD6odOKnnuWBCxtme1cESpFbx4bNw4SzK
9ty34BHOBc/+Wm6Lii9HXsyDOv1T8+gW4/0xtedc8MWBIjb5sSrUIKkz4aK1
gLat/DHTzuOCXWfnXxy99wO9T7ww8/H6Aoo6e3FDIZ8LDvJ226fCapQcNJcy
zL6IDnZN4uKPXFDSMva5ZlINSg1LO20pvYR2vuOPaf7GBSdevF/Ehr9Q/1O3
WjXDFbTRuvyxo4sL2tXSFLKs65GSXcNznsgVJD3vRQvs5YJA6HX8taf1qABY
bimpXkGvGuLXOQe4oEU+14lDa/Xo5EC26PMDqyjjx5rhyAgXlO736qc/a0Dp
pbfJAU4M9JZ3R0rhDBc86HY/pWSjEenvvt60++w66omaSPm1wQWzpE7WP3jd
grjQmOul1+vo3lTWFn1mbthesPtFOuUPchdyFYqYXkd5/6PgvuOxeqMAgL+v
vb3L3mkY7UiIeymRFYpQQoWMBsksShRRaYispFBZiTTQc4RoWSE7e++9/e7v
3+/nfp577vOe5zzn/PM+4/d4wUT0i4ZrKaknGpGz3AsRBY81ZJ6z9G83Kw8+
kkzPKGRvQotxUncDLq+j9GWXjXc4eXA5KSmLNdtm9PhxxJpr7joazo+z9+bi
wT3qzXNp+c1on8KE5M7pdRSy/uzTMW5iferuy3I8LehB+iNbSVUSfJEZs+/g
4cGn+Hnyj39sQeLtoWNKH0igLLHOh/Pz4OcMFK99pbShbt1Zia1NJOCsqn1R
QPg7j4h3my60IUEWd1fuZRLksDawbabw4JeHgh6H/WxDU/ef9NWKk+FD/vdz
gYRXNt4ij8m1o7wQo2dBmmT4ue3HYjnhqnOTf81utaOW8LIUUTsyjLWYDa4T
TrvJNPehux2Z6bpzxd0gQ6O2tuMWKg8uId6uKqH1D1GPkNuZX5AhdKUtUZPw
y66PbwQl/kNqira7zEvJ8KmhAXQILymWSe8n5sDpjnSB+71kCLY7vLif8E+g
qp+6tQOdWj8Yn8PGBNm5Hzw3Em7WlX/X8kQHMjjytaFwCxNItXHZrhDxFFyf
u8d1pwOJzE42vNVjghLWJ92lhA+f7dlf+LEDzXysy7rrzAQ2oSLbAghfMnG9
db6/A2mZxV46eocJ3gh/c5Aj3PaUl7WkYCc662C//PQnE2iZJOubEPuZWF5p
E3C5E91mixgUHWGCp8M39Cr5ePCEC+su25I7kandIHcIDzNobBhu1CC8/dPV
Ly3VnUj+4U5VASNmcD3faDxF/I7vqGdmlLd3od/beE23/GaG7T4OkEfkSfUz
0tf2gS70WqPkuex3Fhi++OAVIvHgfqdAfdqmB4VnRUzjAyzAZUNRP0fk7SNr
g9/3InpQRlhDnh47K7g27k9gWePGa1pKY+UKelDm/rYGIR1WGBIXNhFZJs5R
htxrC+FeFOsmVpuPWEHhV+mf9zPceJvkTH1sbS8KIykGcOawgZ9S6Yb6Xm58
dfPnn+8P9SOtkqGa+8EcMMvV6nAOuHEb33OClVuHEB/XgN7+ZxwgMV7SOVbE
jSeG3Xy2fnwIzRSyb2n8xAGpyi5Pzxdw412Ltuzbbw4h9TuKlu1jHHBU5jTp
WD43Lv7Y5vCNpiE0dPmA3mZLTtAJDL/+LZ0bd1E+cIV0axjFmG/nereFCxqF
3x0wieLG2Ruj3li2j6B/M1YXZQu4wYFz/IrNGeJ54/Ky7RHjSLrIc+fdfD6Y
UNCxFBzjwqfNJ3rNzk+hkW910oOrVDDbqeWtXceJ//r57qtR0DwayL/3IfUa
A0iDg7Fsrhy4+tX2z1PVK8hOOjts4Y4g2CePeiXNsuFKGz75uZSTIJ2U15EQ
JAyFSTLWGw+y4nUPVWzPqzPD05/NQoayolBRaSesGceM6w6l2Zc4s0Kc8gXk
dl8MzN5dkT89QsYHP//aqHqZHXzubin8PSoO/B6hjU08JHzl4WGZCxGcwP1G
nP6RTxLmPRM3O4atYHmrhc7ZTtyw68ybpgIZKcBNnL+zPFvAmKLHavqNeUHP
NkadmU0ajqYfTdtXNIM9N8z8mUflh79exmynz0rDSfrGrCzhSWzXj5k53iMU
8G4pu+dYIA0cth4baw4OYcVDdpx8IlTo1OqUWluThnuHl9Nm27qwx9K1y9nf
qWCnPbubR1kGivsK8Neaf7FDdXuw76408PI/N/zotAzkrZvHOR/9gllYl7A6
8tOhoYz59M4bMvDbkL27rqoAsVT4mL+Mp8NmX16neMIvXDEnU34Wog23LW9O
JNKBH5Lj2INk4EHxrPmBb0VIuXStS/05Ha6+a3rUQvjFQ843HxYixHItXaU6
hQ5v0i1LfINl4IrVJh7numK04Wbb3vEsOoRJWCnfvy0DSXLLRf2oDKGFQ/fZ
iukgLvlISOquDESP2HGVP/qN3hl6FMT20MHs86GtjVEysPdvPl0iugHJPWf1
s5JnwMwb5xr+JzKgfZppcX9dA3o9PXHqnCIDfIL9cw8R3qEyFGZN/YvucsVe
89rGgCPH0fZ3hEtnRaXdC/+LTtbLnYvcxQDWIW6W69EyUBb87HlzYCP6bmg8
9VmVAQ/QG/X5GBl4vHWMi3SuGSme02kZOsyAV98DXI/FyYDPl6xQz73t6PuA
BVO+MwPkRCvqLxPuvVXp5qHL7UjOcUAqw5UBVWsBgQ8Jd1z6Oinwth31xOHe
z88zgP/mjQe/Cb+XQd2YKf8PVY8e+BPmzoCrukM5avEyMN5+2+IUXwfadyUc
N/VlwJbDyTMThM8lcjjtIHeiq14Z459DGfCG+f4plgQZOENiSrgp1Yk2rbq/
fnmHAdtqaJxChPdoKAc2aHSiTqvZ+LsRDBiiy0mrEf4qtPmgj18nWlHfvcsm
kgEyijcsvQm39JAuSp/uRFnurnzT0QxIVgkkVxI+LMOWXNPbhfwH5mMXUxkQ
rrqJqZ5wJg/7GDambvT17cnf+a8YML73oE0L4Z7rVifUJLvRy61aRy+/YcC8
6CbZPsJ5p08eTLToRpJlwVZDmQw42s10b+j/dVxZnCs9uhH3o86ml9kMeOHy
4OgY4U4Hbh5fvdeNNL0/ZZ7KYUAXx8LYNOEOmNb94+XdaHNM/ZHqPAakZQ+X
zhJOuyrxN6ibcGMhydB8BvApl8/OEV6pz92Xsd6NlHirMOwjEb9uzI15wr/v
tyqoF+tB964v581+YoBluNu5//1yj7nFqkoPSjSMu5ZewICoWNM3/6+z2HAk
X/ZYD2rly3xqV8SAXazmuv+/Ny4zqlnvUg/qs9nBKYAYsGYSjP0fZzTZ66sb
Ufedvkv/qgAGZC+OPJwg/L4Hdv7+qx5k3BzY5f+VAX8vxWuNEl7/HG9+W9qD
4mkGhttLiTyXSDIYJHxZqYKjpqMHhY5e5+woY0BESJP7P8Ltd6Wk8Yr0In6L
zQFa3xlwQDeUo5RwToXdTd5hxP3BpGiyUsWAYnejRwWE32Rlwu6n9CKjSEnz
1zUM6H9R7fuO8AfClXYpxb2oPPVipvkfBsQf1rFOJLxc5Un978VelG0va5nR
QOxnlJnLBcINJG9f4nfpQz90EqNM2xigqnG5zo5wYeOmZPFbfagswEB5sZ0B
tZqfYs0Il2E8C5dL7kMr/rpySR0MOKU2oK5E+M+04mv7m/sQf48sx0g3A76e
VKodJ/Jc+itXzTH9fvSzTznbf4gBO9W8rfQIF+HheXpIYQAZXeuN8ZtnwG5h
JbnAWBkwzuxtkR8cRM8PWf+YowiA1p4WXWvCbbOXDp5jH0KR7q8q3tAE4Df1
3islwtu/naGkbBpC24J8l20YAuDZarqt/6kMbLLO/CFyegiZMj9ZKxYSgDey
QzoHCD+72y9vvHkIse8087suKQB+eXPoL1E3uj+XRhv+GkYH2EMO/lUUAFe/
l6oej2VAUuysR2nmKNISNmUf0REA2TdvFS6Fy8C5uvy7Re8nkFJB34EcbwHg
XHCKlSFcWZBxIa1kAmUU+CYL+wrA+nqCY+0doq5qZd6IrJlAlmWFxoF+AlBd
k87YTXheh4yW3egEaojFIvWvCcCtkKMVg6EysF6yIDi3cRKJ4Nn5jUECoHah
LUrtFpFvBy/8Xno0iSiz9RF/7goAajbmOH1dBvxkh1sd3KfQWwZSPfBCAKbP
vpD+4SEDs0orO7LkZ1Clg5Q15y8BsHhWgN4aEnlFuhx+8u88WouamioSFYTt
cUMC/8Rk4FTDV4Hf9stoy85bbzlOCMLpMwVCu3ukQSlLqutpwhoqEX0zgIcL
wvnMdf/qeGkImyFNtLKQYc+HFqVr7wRBuqZ329s4aeDXz41T4CaDC/u93FnC
4w3qsfux0vD49tkEbyoZHJm3uJ/PFYQT699vGsRIQ4jH3+f8kmRo2v37lXWe
IOzMbg0vfCQNZ9ODX6moEH1usjzH1nxBcLojGXf9jjToXRnwcXImQ3bTks+b
T4LwZEHkVaS3NCjI7rpx8DcZ9vIlZwuAIGRqHpyoOiINPDSXX30PmcD09Kfc
5z8EgRJWzHbPmFjfQMpoMIYJprEA8gDhVSc6ggyMpKHldbbYcCITqN8KfbDt
pyDEPZxJL9WXBpY09+cjb5iAsnOLTz7hVzF6cbaONJx70qvX/5UJ5Cuf2aBf
gpBEmpg+py4NlnNRtZ+nmMB627RvZqUglI0hO6fN0qDS5ruxyZQZSKZvfJdq
BMHbkXcjbZM0DBc+GCo9zgzl3PajcrWCMCxyzbBQVhqkX/6dy7ZhBgUb4ecW
hD/ZnfOLT0Ya7jZNdtx0ZgZfB42KbMLxYyNhGWLS4KHsO7PhBjPsFztCt/oj
CN9CHk//oEjDiJN5p8ZbZngw0RZ+u04QzL0Mv26elQLxazXUXl4WeBdUFXC0
QRBE7NS0hKekoITNJ12FwQLTpK+vXAnv6VI04xiXgv5dc3ZhoizgrNgxGkR4
W1OHfM+AFARuUpBU2MICpTv3fc8i/MjB9aw7rVLAJY012uEsgKtdL14m/LaF
d+GlJilw3uChm3GIBbzKFot5/gpCbm3ACfMGKfiq3lI1Z8gCjz5WtooT3iZB
MhatliL6lxWFMCsWoNySsVcjXF5KlvlRiRT8Yuwmv/BggWtst567EB506ELc
eZCCi6U/d/b7sABr8Jy7J+Fv3StLDxVJQUfDlJdCIAu8lRw7cY1w7Zp7P2by
paDM9qFOVjgLzBixX40g3M6wKvV7rhRIcNj+HnvAArt5pnMeEh5s2UtPeCsF
1j72LttjWOC92hIphnCRj6ZJ2BspOKCV1fXmJQs8ixgbfEb4y/jbiC9NCvb7
GhT1vyHmDKuUm8mEmymZXWx9IQVXVErTZXNY4OAw196XhNvyPc9+lSQFlUHF
mac+sMDJUWZyCuEjyWeuX06Qglf7Rr7GFBH7vOLZ8//z7EfDOvfHSoEfz+hQ
TQkL/EzR7njxf5znyH9YoqXge6jbJq4fLHD9rOnMc8JbBQqO/XwkBZ18dA+t
ahbIfhki/X+cKl4pjpGRUtDVEFrt3cACX4pLzsYRfuxuNsexu1KwOH4Fz2xl
gY9sE/Dk//h1K9QE70hBAx5U3NnFAlpZY0oPCK9o7zB+clMK7CyjZ3XHWYBR
NH3mJuGcLBVKIV5SYKvEJM7JwQp5Z3hbThJeidmba1yWgmsr+7hV+FiB7XPR
lAnhfHLXWGcuSoFVcAXHWQYrRE7byhwkvFN1lm7jLAXMz8O3FUizwq5HHCVb
CI/IGeqXOEnEyVdJP6XKCqpOvxg9RL7l6yUG/bAk8nZ43jUYYwXDHWMd1YQf
CtXOuGIuBaTNb6peE3PbBjmJkkLC78jTMsqNpSA7bv/HSVNWUOTf8f0B4fcT
Ck9Ya0nBYW9ZFi8XVkh5Mdu4k3DOXDsXtc1E/DY/9prEsRL56TaqXS8IxqzB
p7hkpcA4apJtPYkVQvl1jssSfkNuF6VJivh96SqrGamssP1D+TQT4VYDfeke
IsTcITFmzfaOFbh7nEsRcU71Zce+PuGRgnevvtRmVbDCZjPP4h2E0/fG2CVP
ScLft5LuDbOs4JvDKTBI1AGNXXf/fSuSBNv6AsOAI2xQ8ee5B1QR+1kW9Qc3
kYQN+Nk9UiR2cBqoPLnyjagnYsmnPA0l4UDLgDoXGztM/Tsd95zwoChL51Q9
SfhYR982w80OnMFinTqE51hZrLJqSULGelZ5qRA7kGLcboSXCUL4lfviubsk
QWtwW63lDnYo+JpC5S4VhHnFc1JlNEmoczzUZnCKHe5pjZq0EPX5jU2/a/kf
CXBOcvtuXcAOhbHb9RFRz419DOw0TSWgUPTeQWYPDpgo294U8UoQPrOuefJg
4jC+tsfV8wcn3KhmLMz5CcJPgd8nA+TF4NwoffXoIhekDP15/1dLEHiaDfQ5
ekSg7BPX+UhFHtCdMI/WnBYAnvEwG694YTj57HGFwW5ecB3Z1Ov9VABi/k58
UT4oBDL9yXfTxPjgy2UrZ+1dApDwPC85KlcAbGbdtM4t8cHdCMGExQwGLB1M
C+KQJfpEbaXcptf8kFCw9NZGkgE8f9Rkqk1pIOZWxv1eigKpTbwilufpYCqR
EPJNnwaHVN/sSpKmgKMmy5XHLnSYUF1lKzhAA/0VVtIdGQrYHkp3r3KiQ/Vj
/1OJyjQoLK99aCVLgfBDtgZap+kgqY9MjEVo0F1p5TuwmQIXpRM9GcfpYK75
pcSsgwqyzo7hpdso0Of/BvPB6XAk7HTToBsV5rs3xFxUo0De28y83TRivls3
fL/9OgX+zDwrO0nMq24PZqStc2gQdb3P87cPBSzU+CQGCP/9L6FTP4sGQkcP
abq4U0B15Ou4uwkFzr6dUVJLp4Hk3eLhhNMU4M5vZbphSoHpK38fMFJowON8
9tnoQeJ9Xk+/RhylgLtpnNDHGBpYRNrXb+OkAGZ087PVcQp42YUPfwqkQUfP
nIeVND9E8Bd1FNtQgNNP3CXFkAY+Jy9/FyTm7FWTp2GipyiwV3oxxukwDV6+
D2avJvODtYD9HXfCeWdOG8gdosGVF+FKe7v5YC129J6oLQWEuQf2pWA0uD89
IleTwgcnjxwOsrSjwGmZUbm7u2mwYNK6FVfggzKrtfUg4jtUmuNGGcI0cLe4
oF8gygd61k+jgPAdbq0iiEGD2HdRKru5+cCHy/niCuHP498WO1Fp0Kbm6Ucf
4QXlSyFDF85Q4Nd97qA8Lhrw0X95vcjkhfxIj2bNsxSQkNX+oL5Khbrqkv75
HbwQLoh8wxwoRLxXr5O6qCAmaTLYKMkLfsjnUibhZkaS+brtVOBV4vyXx8sL
uZ39B6oIV5BYF77bTAWPY3GJNsM8UNzw25fHkQLs16rO0P5Qoc9X/axCMw98
+JLTuIXwC7WO+mZVVGB7+kRgqoIHcvZt4tUiPLo64kTkTyr0s0zt9kjlgSpe
n3E3wsOVqpfYSqmQkf08ViGKBzidc58GEr4q/vA2BlT4quDa23aTB1Tz9tIi
Cf+Zrrjfq5AKBlYRYsr2PFAg88HxDeHzQgqi7XlUOHzwBlPTER5oM17VzPt/
/QM7tflzqLB64EeJtyYPfLsn0V5AeOpbk/uamVQoP7fbhrqNB2TDlbSLCZ+W
bSG5vSZ8181fKWI8IFB3wrmU8AA2qSfRKVTQ8QnmV+bigaze16ZlhC+cdTUu
fk6FX9YrsmiBGy5t271YQrjpOJ/8YAIVlOWz2Q/2c8NRftZTQDjfwvFN/LFU
MD9i+7Gknhu+Du0I+Ex4/eXH2nueUIFP6/cezVJu2CxVdPwd4d0L1OvmD6nw
2uGDd+47brCh5A2kEf7oi0TblXvE/uwcP3LvPjdE9o7KRRC+i4c+/fYWFd7n
Zf2bvsYNjd931vkRfn5j1JufQVS4uf57+zE3buD0aNvuRLhUQkNATwAVkh1m
yayHucFo8OjQPsILX5X6UbypUEBvUtvCxA0HDHfjQOTDaJxHhqkTFWwXYoJP
T3DB1JNj2+IJ31AttNfmDBWCt7P5x7RzQZKB+acrhJed+dXgaEuFuDbLszOf
uaDgw5UUGcI/WQRbex6nwoVTeK/rZS44W7314Ukibz2c1ix8dKmw24bZ53g3
J4jLtf45SeT/Py+jG7JbqMRcMc7NjzjgoeS+Ja+TFLhRpOpB7qWAAbTva8jk
gO6bb3W4CKdILOwQ7KRAkjPNPyaeA07Wr2rEnaCAwwO1HfJtFDgp6bSXz48D
5FULtuZbU+AUqhk/XE+BfmkZ/S9KHFB5P6q8ypICNu96nbzKKNCV9LB/+2t2
0LO/yx95jAIMxy9pfikUOBHH4611jw02yU7LKutTYDz87LIi8R3HWZwan+mx
APbzWfctok5+C2dbFfvID6kbGwwilFhABUu/fWIrBW5lseclZfFDp4WFmoc0
C8T+a8nZqkiBIJHySekUfjigNOOrsMAMZ2qqQkvlKMB1qmaJ/pAfvJjjxA3T
mKFC1K76O1G3X8jrMUpd+UHiil6aCQszMPJm5LaIUIDHKn1MX5IfrDy8Qg98
IsP5F1v9+MhEHbZlTuwP5AP9me1TtWJryPLctj8LofzwsudZJFmZF87JG14Z
GZ5CR51SuMo28YGRx78tfB5c4O/XcmLzlnY0U/5p7aUIDyyLvzqHx7ADFz69
+V3yX8xQ4pYZNYoDrC9sS/FSZ4H1BClx28uNmItJB/PJYA54JTO04cZ2oo97
Yv9Q9WATthF2zN+6zAHN4RGpYTIsoNM5++ByXzP2QfzunaumHNDQn7X0mJ0F
Koe4NLq2tmNDGUX327k5QDWQI+TJH2aQZ3Snn7brwn7y3jms4ccOXl6O4Udd
mWEY6xlvXh3AripuU9dQZ4Mfna6/VGOZIPJNwncbxjTmVPDk6gZ1Zmi5z/xV
apkEAQOnbaV0p7FLtE/DV6WZ4ebWUtLTMRKoUa5+/O47jcW/qup4wcoMsYKx
RYJdJBDvuPikrn0am31OWzKvYoJPrFqm0t9JwJ2WQE5Jm8G+PNtoomXHBC4s
pTaXoknAmXCEsX3PHEZ996F/0JsMgbIbS+SVSXA+TfbqA7lFrFDb7GL5whoq
Ys/xjhlZQ+nblaXXzRcx+4m5QMf3a8go7eWaVf0aCvTBcPmbi1jOpKdjhPsa
+qdMjtr5ZQ2NcZ6D9NZF7KLHZ1vXgVV0QSbmk2TkGvqRlDaoHLGEedbMjZyv
XkEjhwqfcSuvocxvtC3pLcvYsx8Hz1qFLaHp/CdtkTdXkXDreTntbWtY/r1n
VtOJs8iITbu4YO8KyjVwiRY0XcOCdEaMcJ1ZZOCwbf8ZmRV0UjnLUN9zDdve
4DjINDyD5jIMlffyrKCNenJrXz+uYZ3cmp0jSjMI08CO23cto5Mme6aSVNex
x0Wxw+5fp5AEcrb4F7mM8F5ypwwPCWe7zrpcfWccLVzjFqDNLyHmjQcTdIVJ
OMM7L0CvfAwJha7mf+1ZQgYmqb7MG0l41uw4cxPTGMrgsnz5unYJxfHc3qei
RsIL9bET5t4j6N+mL2wS2UvIrTos/7Q9CU+rEzygbDGIvPRTDma4LKG5Q1XH
eF1IOF15T+No+ADC5TcnyVgvoXC30w+1PEj4wrHewm7oR5t69fxrDy+hZh3L
NvwGCTeN2HY8Xq4PZV023zsov4Qkmg2k3J+S8OW8zrHm8S60+0akzMrIIrqT
cYsfSyTh0c+7JYWkuxDvA5HuU+2LyNWZa+hOMgn/2zbK8+VIJ5Ldd56HqXoR
nS1ba37ymoQzky8s/rD+h3jnU0e58xaR9rfnGscyiDinjJj78tuQwAe235dT
F9HGkHOyd7JIeAP3hUdctFZ0qK32tOTTRaSwW0pL5S0JT6R4Hjvk1owcaAKa
PBGLyOVZq6l1DhHPg8TdaWWNyLlxeFgjcBFFMO8XmiJ8ozTlhLrkX6QbHT6f
67GIVLWeWK0SPt3Fp071qke0L9jQBcdFlJ6tOuBHeJuufqDK7z+oGZwMLlov
oh3miU+difeOO7rSimRr0XZ/k6T3xovog2+8QQURp+HlT6I5vtXo2Heam/aB
RZR6LKk7iviuxeXDUzqJv1Gn6qMdgvsWUdKza0G+qSScIrP+6drkN2SPnJ88
3rCIvsY0+98l9q2vuiiEGluCanSf7sSFF9EG2TSch9jnfsVOf2ltQI9MVd8q
8RHPCytfOPSIhJ+6Pyt7bkMuuvkmU2lpaQGFOqkJRnmRcI/9wXuaQxOx5Wjp
RObGBdR+5Mxo33kSXmIbXrLwIgMz5nkATNUL6OxvmfX4syRc4z3nkzTSe6zR
b3CPccUCajlioLnn//+ZfSZ2unxrMZbS8O7xz08L6NvHg0cXpIj4r/qU1fhU
YizinQ4uSQtoz+jcn8N0En6bdWZHU3k1Nnl/2mBP3AL6oKguTWEj8irrc1GE
WS3G9YVE03qygOK7I8Rm/qxj9mbuTYEO9Rjeo6u+9e4CivpV5KuWv47N7D16
LGm0AdMT1xXmCltAVQ2Jqeei17GNR44Ol3k2YoL3flRsC1lA3gI3T/pbrGMP
NQavdQa2YF4hAUG6AQuIRWRHqK3SOhbV8qLlA3MbllnRMqvhv4DqtohXKFDX
sZXGZPFjt9oxzdfSVH+fBTTWSgn1Kl/DTucp4lUlHZhz9OW175cXUEGBh/J8
0hrm6DZsKnizE7P12KrY6r6A0n8vmdr6rmEcV7mPJ2l1YadaJN4rX1pA17pt
Zvs2r2FF7XY8NoXd2C2Wi9fR+QW0fOuwCvvKKsaqL5kY6NODPS/t45lwW0Dz
W1+dolSvYgPhdv2le3qx7uafEecIzw9fmmV6sYqlMezrNo71Yl8PdEnLE37n
c+PTf56rGNOWqybRaX2YvtBa/y7CaYdIi6k6q1gcc8Ehhl0/9il9fS2I8BBP
uzorgVVsk9f55EdCA5jPgerr4kQ8Spxb1xe6VzAnjMmEt3IAu53gemuNcIG2
xVMhOStY+bvnGr43BzEZ67HN8hcXkAV79fD6tRVM0LboRJXKEFa3+7F3PPG9
Ka7yb50Pr2DV2m8S2IeHsA8pueGWHgtIOfi9A3/bMlbDd8ZtzWgEO/VYVjvd
awGFCdholM8vYUV7205sYh3HtEqazQuDFpD019Uv7QVL2IXHjukZ2eOYRIeJ
pvctYp/zSp0mApawh4Fn97puncAoxqy4/50FNCBG4eRkWsIaDvAs+/yZwG5E
jEederSArOV/PzmwsoDtKvIR+ig8hU0kqh15+GoBaWWu3Cv4OodVHG3s87w6
g33o+FGb0rGAYlKM852957B1pq2vmMpmsFJ7pw3jAwtoTWBju7LiHBbdyDmQ
wjOLtXk9L78+uYBqo/+83hM5ixnG5ApLPZ3FUtjWE64yL6I3hv2eIiYzmMey
uXBA6hwmfT+lsVZhEf18d/GM85tJrDp5NHhT5AK2Sepmc/2tRfSClPaQ22AS
2xtjOLnn9wLml2xpnfZ4ET3XFq3sHprAHN1zPGc4FrFvR7KjfiQvIrb2kXP6
chOYyxmd+ICri5jUby8yKyyiIhaXTWTlUezg9ndf7I4uYd6JKZb42iJaCL5B
T/rahzmJRa+vFC1jrXueP7lK3IchW+eDX4z3Ym4ipNG/PcvYl2LLC5rxS2js
g6ReiVgvdr/I/dx+rhVMOIgjx4C4X4I+RFbcdu/GslJjR+NMVrDPqam+hxqW
0L/wtyM+jA5Mvc8j8sHPFYwn0flG1pZllH7ZefWsdzv2Wbju0uO+FaxI4+eO
ov3LqATX2F9X2oppeAaShUmr2IpeG4lutowwf5VQLpsmbCRU6tCz7atYie/+
7AfXltEXzW2RkSG1mOt2Hc9XvqvYeb9kiR9/l1EByUk5sbIae/stYvV16Cp2
9DfeQBpfRvQAzuj27ZVYbGtPt+KTVYzrwXiOL9sKqpr0r7tmWo45Z6kr5Was
Yhnfa6R2EPd+z6/SuLauEiz86jnFz+9XsdcWF81cjFfQ+5eCSWGegKVTEp8e
LFrF9DzWBnocV1Bkt7y5A+9nzHfcKe5oySoW3JO0LTFwBQUXXrpC25OLNXMe
vDhQvopRdOTPRcWsIKkYydXZvFdYhbjDFZafq1hBinz795wVJDTe5rfE/wQL
Vriw4/WvVcwhgOmP2s8VpDSb/UCddAWVkrfgjYT/+zJ5u79nBQluEiw/oZ2E
lGwkXB8R68jViu+vWltBxDlW0WnPRINCAo9bK1axT19eb50UXkX/Hr2KDPn0
HgUfDvnyvnQV+/mx87HhnlX05ljNxeXAQsSdIcMrg1YxGRMsq8NoFR3547zI
eF6M6Ltsi6U/Evuv4v8249wq0n0nNNuyXopOBE2rfchexWaPPq3JJvqoAF23
l5tPViDFfUfm+1JWsV+VszqDiauozkWbLZanCiXTG76I31vFcsr4ppbrV9FE
YRTnro0N6DDWgu0yXsUcX0c+DDu0hhwYU83m5X8Rv0pVfofaKpY/++eh3Jk1
NDyyTS/mXBPylFLbq7V5FdsqnmQ1H7iGZBuN6hRSWtFWFQcO2cUVDLnLdkp/
XkP95wPqdIM60Q/fqwWV91ewnReNDkTsXEf7UZbqG90uZJXjWzHnQeTzbKwk
q/E64nkYJNjJ3Y1SpEvtFo6tYF0i5NsprutoR2yNUHZkD9o4JegWLbCCcZWY
VFilraPb00ybeML7kc0FQbt3YctYW1pqxX4KCUg6QjbXNEaRoXB8xyC+hKm/
353rHkECiUqbvcxF02jboWMpExzz2AfD/rO+98igrvGJb5x9Bv0+uGMVq5rD
duUbRo8kkoE170gNs9kMcuHiaR59PIdJJj0955RNhvJ3ts6p3TPITjfE8Irk
HDYXofLAo5oMMyeTX1WszKIPo2rHkxVmsQ3imjX1NCbIV8F9QtgW0JNRfXKV
wjSmZ+1AvhPDBGsLO5W0/ZeRfQ03S1PZKOaaGN6QlcIMc2OaeMirZaT6+Hpj
sdYoZruo32r3npgbrN5widcvo6gLi3VGRSPY5fjtPdQyZhhSuTOqt3UF9e+9
OWebO4wdVWw1utTDDD+c1S4W1a6gvKZmz7a4QcxOWmJZRJYFUt7u6uMkryHj
Dnu5YPteLI1VP2PtGQsEL5abeg2voz3rlq3CGU0Y7m1iKh3NCvH83V/fMZHg
z7XdUoqxjZgUEtnnlsoKVpe3sDrxk6DjwnGkH/oXs8k8xJ77nhW2sPjNssuR
wCo679PXs/VYv5Mf8646Vlh+XPJovwUJln5vMmSRqsHKm15SRihsYNBGC5hP
JcFe2QXLHpVi7EfchyXDMDZ41NjgWCJBBrmlhJpOJ0BJ771eH7zCDo/uOP8Y
kSWDwhj14+tXX1HIDZYu5hB2IHs6Xm+VJ8MWrYnRqwOl6OeR/ILPj9lh4W+H
P1WZDI6vLZ8oOXxHM3vNpfjz2EH2YkNItx4ZAiSyNmrK1yC9X0HHTafYQXOH
+klTIzJkFh8LiNGpRfzpaod+kYl58Tr3vTumZHA3Sspwtv+D4tPqfDWpHHDW
wcLV3ooMpzAlB5foepQXHxnKsZMDdl04fifHkQxWGv4FRStNyLoD09l9ngOU
VnNL7ziTIfnRwc+pjBY0rhRl5XiVWN/kElnJjQx+dgLVy4qtaLOi+PkH4RxQ
Hn/p48IlMqR8KR/ptWxHmECD56/XHMDLK64vcJkMmzviB30u/EOpCkdOtH7k
gPMpyzwsV8jQOmY080mrAwkt39jUXc4BiXjGQWsfMtyrfL+9yrwTHc56ZVjf
ywF51YulX33J0O9eS3f814m+AncizHCAd73X3XU/MpjbbDfOPteFfiwzFSYz
c8KJTxWr81fJAJ6FZsf9ulEvs8lhAxlOKHhqnZJ3jQwR6d/d3zP1oJ8tQtnU
nZzAxh7/WDeAmD+rrt8vvdODONDRykpNTph5W6ObQ7jZJa/TwbRetF++LjnI
iBM0gutVpwh/odqSMvO0F0liyXLbTnLCISXRHq5AMow8sxIRkOlDLI9XT1S6
cMLtgawvy8Tz/S4z13vT+pBOv5Wqoy8neN/WxssIJ3H2v3TY3o+e4TZFM7c5
4ZambLsT4cefhptG5fWjierOHt8nnBAjivH0EPFPVGgc91QbQFJF8xmzLznh
rvMWDTXCYzvU7zDBACoL66ady+WESqkBFy9/MmSxVrco/hhEWo6Hs3ZWc8L3
lD2HbIh9M7yq+/6b8RDSNtH6d6udEy45qnZKEfucNRK1i/JnCN0fYkv5M8IJ
plv4WdW8yBAU0ZWZ1TyMKkOa+004ueCrncrN3xfIoKVz74VQ3yjiHiuQadbi
AvbUtJ4EIk9OCNNcNp0bQyWft1T1HOGCnBvm2kYuZLi09bNl5+AY+vb+GHuf
DRcsKlv76juQIdJod+qZkXH0D2sV+OXLBfRzBjrfiby9jKfLfZ+bQBKnjr/c
nMMFT1h5BOU0yEA7+6jWZGIKxbL6fxSQ5AbxRR1+a1UyfDubdeGFwjSKz5be
+lKBGxgNSdKexPn6awXFtWen0UlpBycFFW745m38wH4bGfS63xSWN06jyktb
VSVNuMGSuSJNTpwMthTZyzxoBm3ed83txQ1u8Lwlr5owS4KzcwFDvCFziOWd
zqlN3dwgtWMKf/2UBMX7ry+cn19E227oVjOSeODwbj0OW/t1NHueNrdNgwTl
PhZzO5n4gGunoOabI+uoUn/PxyOWJJhqJje/4OWDE8xTRY0a68hlMaPV9jIJ
VCyyG3hF+MA18GJLh8g6KuOWDDd4TQLOcZ+t5Tv4QMShSiC1eg1tK/LfbcYg
g07szdKqk3xQEgfNOqpriEn8HqbQTwa7KPeQ/e/5gMG15cynhRW0dXeK16Xr
zKDpZvrrhS0/nG+b0KFqLKHYex8E7wSzgeY796Q6IwowPvTM/NSeQR9+r0jp
1nLDG03ajp/HqeBsLrkafWMEDUvm3Y2mUUAoCA8rlqbBnfjOvz/Y2tE32ZBF
vg00MKXLKZX9pkHTxZR1UkcOCtXa0q1ZRwdh90Cqpj4dAifYdlck1mHZZxOq
pYwF4OCVZu1LKXR4ofHNor+2HysJPVji9FEQkh39t/gP0uHkqMk1XtYBzOZQ
0TfLIkHoPtEagg/RYe+vecYulQHsW+19G92vgrAp/7EZyzAdFNp4wy7FDWCO
YQ16Er8E4c7wNdXbI3RQ9n8oVX1mEFNn/Nqe8U8QWk7uN/Ybp0Pzot0E38wQ
5phYu2LBJgR1c16igrN0+Dgr73mZNoaR7RkJfaZC0MMWcVpunQ4OJbK8WgfH
MPSL9incQghcmRZyCwlvjA9P5/Yaw7CKhJvbTwiBmPLDW0dIDLgivX0kumkM
K5qK3HL+rBBEejzMuURmwF6K5eaIpHFM761+caWXEMyUe21/zsyAC7QTbhNP
JjCv0pIR2TghePXOFC9gZ0BeWJ0LXXYK21o8dEusSwgCtwQ++cvHAK/TdxWb
NKaw6a5DVvV9QmDF9/yeDj8DMuV7Z+Mtp7Dvbb73I4aFQP1EXFMO4acUo5Mk
701hTM8FFKdnhEDYHrmEUBjQ7hcuybU4he07U7XvObswuJL2RQjTGBAaW6V3
vXIaK1mc8LmxVRis28ROjTMYcCSxtnnT4DRGm/o5S90lDIE6J2q1BRjAHbrl
5HfmGUw+r6vnmbIwnB5vfvGY8DWVgM1cqjNYnYyWRJ6mMGjxb7bfI8gArRJq
lseLGSztKA//FxNhWKpLsLARYsCLraPb2r1nsf5Wjg+WnsJwJ3jDpzMiDDAa
frlk/3AWq4tZ/gI+wrC++skwgXC3CZ7E7oxZTCjqz6HN14Rh4nOobj3h2UaL
pzs6Z7HNz0KaBkOE4V2V2hVclAFfPJgKkcEcdjSQc8PRaGH47N1dzCzGgOCX
oucYUvPYYtrf2axPwkBNfZGqKc6Ag+zpk56q8xjkqZ4aLxKGcsn+2VOE6/HK
qP85Oo91tHkc3fZVGO7xTL+/RvjVJjOOsNB5bJ/uvf7nP4j9eVBwJ59wOd95
h6bJeWzJV+fX+RZhsPlpFS0gwQA2ga6KLTwLWNUpLCf2nzDErG6/Jk94HOdY
x+XNC1jOsJ58WbcwhNldalQnfNJUVJH1xAL2sDiunjYiDAaCQZMnCF9bq2Pi
KV3AdhQ+UnqwIgxn3OuKwgh/4Fp08XfbAtaSuZwWTRIBTpN/mg8IT7Xvjo+Y
X8AOXy34EcciAg9W53WjCTfu5Q07TF3EftmFJiRwEH45tSmO8IQ9rHtYFBex
nyxCMgk8IsAw95hJJLzs+8OnhQcXsZUbYhaxFBEwGe+KSSL81vkbBR6nFjHK
6cMaUQwR2KgWWP6/c+9OiN7ss4h1Jh79e1dYBKobf19/RnhJUO7WxgeL2Obk
kY3B4iLgJ2peFk94jdwj39vpi9gtnW+bfaRFoGspNiqG8I3HeK4plS1ihrUP
2pw3isDkhk1TDwkv30p/cXthEUtfArdDW0Xg2FExs5uEC9/UK9lGW8JqzYMP
7dopAiuMBxa+hJ8qcYyqUVzC+oUX/4ooiYDKw1OD5wmf1vuiT7Ndwm4Iv93Y
oy4CS0ApNCN86mO6YrbPEmYbZtRZhomARtbKijbh+T5Dnw4/XMI0f5hZphwQ
gZoq48pdhA++a2jyLlvCPjQd9LExEAH22p0buQn3OynL8VFxGavR9nn4zpqI
c0UuPYPIk7hjp7aUzy9jeqdWSiZ8RCBBrOxJOpGf3qI7LDWpK1he9guvrKsi
0FpeIBpCeF7Gu425CivYuTyVMefrIpBlJq1iQ3jEbHBElM0KVk/K3958WwQc
cuXVOQnvGnf21ShZwaRyO9mSnojAwR3D10yIc+EqutIiTMxjHff4nhfnioCo
2lPreGEGvIy9lTgns46F1NX+tBsRgSleibKtRB2gbrBxvqC6jp1PvvMpflwE
2JQ1W/7RGXByyIy5x2QdexRrX94wJQLS/pllDwh/RQ9+XhG4jj2pNdHRWRSB
vvwJ4SmizpAdLrh7t61jB+k2f7nZRCHH2KLkJZUBWSqm1sqGJHxe1qkQkxKF
RDUz31qi7nUv8R42ZSPjemUHCnRMRKEga/OoKQcDxIoT2YW9mXCGjz5Pd4Yo
BEiXuc3M0+FAyI6dQTeZ8JjlIL++bFFYzD6EzAjfGOY1M3SfCefzUq7vfycK
bk/O/8yeo4OEcKjxx1dMuJ0Uv1nPR1HI3m1CcyTuhbhLPhrazUx44FqWd2mp
KMQ7tzmUTNHBc+h6Jk2DGa8uVO2SaRWFkpHFAK1ROvz8dUT4BZkFL0/WfnaM
Uwxeha4cMO6kQ7/6dqbzt1jx2ATfyVwbMRD9ffg9KqPDLuGPrKaGHPgY17j/
6T4xePlChOVnCB1Of3pRtWmcC39ZNsHPfVQc1vISpxT20UFIRo+U/Y4XL3uy
0aosUxzEflupGdbR4Bjn31BHIQou/Mz5etegOERsfWRg5kyDCgXlk9niFFxs
LWBz3pA4PLQdM3R0Iu5tW0GjeRkK/mvSRzJ4WBwKQxZO+zrQQFSy7VbwVgo+
b09mlRoVBx0L5sp4expYbGuxeKxFwbm63rzDJ8RBd5tpaqMVDfxOZxiEuVJw
+hj31z1z4gCVbg836tNgOnbmefkXCn57cOfeZpIEXE+8O8CnQINesbe90yUU
fMktLcSLLAENl6THWeVoQLb9rS31nYJHGoxuozJJwEH369SVTTR4mvRK7/If
Cm79/nOYFrMEuHqGvOmVoYE8p3YgZYCCD/pKeN5jlYCd+Rl7skRo8Mdj3U+K
SsWt5R5rNXFKwMrWC7UMTuL5b82l905T8QfMKhuVqBIQOM1dpNpPBWHDukO3
nKg4h4k0fyzhrAHxuZK9VEgtud931Y2KV/Pon1sj3P0e1DF1U6H+alWAkxcV
n0MCjl9pEvBP+050RTsVMjJZ+XffoeIjGbcfqzAkQO5d5Eb9BipxrzU/jM+h
4l2g0dMgKAED7Pdvbyoj+qsIra6QfCrOkmJTISskAS/cb2iufqVCdbSn0YUC
Kh6fHi5xkfDToaKydUCFo1HIa38ZFe84XixGFpaA491MXoGFVMgtvkKtbKTi
4RMWbjQRCRDcN6/7K5cKbarI4Ns6FX9f3X1zSJTYZ6HQb5rJVNgfzTj8nIWG
e9htvyspJgElfQEXOJOooCi4386fk4YHDitzmRIucl1c908CFWpag1q20ml4
o7OsXQ7hTx9xhp99SoUVRV+mkM00vOMc63VbcQk4/6f+9LVIKriqD/6wVKTh
XPzfFG8T3se1PUrrHhVYFLdnKO6k4bbn7xtmEl6vlrrIEkGFEO6PHytVafiV
5n+jM4TDtxyrsNtUKE4yn+M0ouFIczDXXUICDIJM/EMDqBAeMnejwZSG0w6d
5rlLeOFoyYFDV6ngufvipmQLGr6rcktLKuF93L8wZj8quJs55+61o+GPB1Ra
6wmfu3j0j98VKnxI4xg4dpmGc+8ruSQjKQETnvrn7dyogPFNbBf1oeHS4/OB
OwnXun/xr5ALFQy250S0X6XhNrffs2kS7vHxqVelExWMJvGIs7doeMhDJ/9j
hGdJ5h1TPUOFyvSqbZvDiTjbXzvbEA4v1x+N2lEh8sjH3r77NPxzAaX6LOEt
P9k4n5+iwon65tzUxzQ8vu5rlgvhG/jmc4+epIL8DqEYh6c0/G5+H+tFwofr
Vh+zWlPhzI5P32oSaPgFe7ccd8KlR5NvtRN9+7vKfHmNZBou5JbCcZlwv+/z
FfnmxPeuzEJaKg33b33L/b+zCcucvHeUCujlyQhqOg33eZH5+f919vsdwB1M
qTCTUR3ul03kQ8Jngf/fuxJ884r6ESoszqmgrlwaLvdwTtyV8FhgXaEYUcHU
zmez/kcaTlK6Xu3w/36+GvvTq0+Ff8XexW8LafiYtNdOW8KPZp5e/aRHhZsT
YpGCxTS8qHNu/3HCM3fe8rl7iAqMIv2H/mU0XHtIes6I8Cth13TsDlKh2fbf
zgOVNPzMvqELKoRf/etTz4xTYfUYW13FPxr+ajTx2hLx+wYuPKnRVqGCgpDM
frkeGu778sNUP+GeD4z/UZSpkBUw03BrgIYf1XERqCN8eGEJa99NBQmOky+1
Jmn4rTX62VeEq1cUL3ltp4I6q1FcJhMd3/wsV16L8IW/k1ZJm6hgZv6q69Qm
Ov53KfPiHiJvO0kc7bV0Knh3zzjnyNPxTa9kfnETbqxQrviESuSty7ENzNvp
+GN5UmMXcY7+8uZVWvJTobuua9PLvXTcoObCWgTh9skvGK1cVMjZYX2lVZeO
C/7YFFZDnN+6uuyXzWQq+BVFSW52oeOf6w2yxIjzrizHOvNhnAK/Gf3/xLPo
+CR1z1weUX/+YVFaMz8osF5X/+ntOzruvcvr+knCZbj+7bpUQYEPp8/FH/hA
x5sCSoKYCBfj1D81XEaBK1/H/ByBjn85T5o4TJeAtLEdbv+AAj/XPjxNqqXj
G7VjLn0j6qH2hjG7L/kUKE7owPrm6PjT2IjNXnwScOxZ7J/jyRQI0Dmulq/J
wCVpZ7Rz2IjvCpxlXfKhwMl7DTvtfzLwNVJ2RfyUODgt7cpl2UgB1WdKDUrl
Arj+s7hogSJxSAzVPHZpmQ9K+a99qygXxHfmKJ+pcBWHnN95HMev8YJvnkDk
43dCOEmhGHvNIg6820d3W0xyQ8VNLdaia8K4roNZdM19MbDMeoV2XeCCaPJh
5kVdEVzsI3IvXBKFW7QKRcGPHHC/bZ+0zLQIzseYwsOtReHIoG/uKz52cHf+
1p8YJoqvRGa+qXgtAqG3x4SZbVnh9LVttx8Ji+HGelOTjX+IPn/mAru+PzNU
vxcMmwgTw9eeb1tQnRcCNzct0r43ZHh2v37/h1ExPMUjJGBpQhB6N/TKe+qt
I2ftmj8de8XxyMOM9K9/BcDdQVVxv/IySmO9daBYRRzfMKDncPWPAOjX3f3T
tGkZhamrH0raJ47LjafUKFUJgOjdqN1egsvoE+deZms1cXzygyc8/yYA0yOp
gunzS6jmmKFpoYY4Pngxadr1vQDYop3BrJ+XkP8BuxH1g+K44Jd3T4sfCkBk
0267a5pLSEHdOXSjiTg+22mv4G4oABEHuP2uHlpEFcy7khsIz+avmiPpCUCN
9K++yb2LqOCK5IHbpuI4syWrx/0DAlBm/0LEccsi+jzVKdxjJo5nJFp5vlIj
nm8P+6PPsYgkQ7U5I8zFcb8w75QfcgJATllOYf2xgKw+WqQ+thbHwxe3JVWx
CMDVJ0lKWkYL6JdxBM+tM+L4UvM/hZYCYt7jvH/jj9k8iul/vpd+VhxPPf9o
uTWfAfSgedMqrXl0TSToSSLhHbQT6m05DNBwMy79vnMeycfems12EMfN9oWz
N6URfXm+x4PPfPPoxo5fMkVO4viChFxl0SMGLGsc7Qj/MYfkBOMKrruK49jt
1El1V6K/P2DQP6o1h7aeGN302l0c988KusxJzJmMA+E2eTtmUaRKx+oy4aa5
QY2NRL+rd+VCQYjkLLqhsnnJ0EMc33vUJS2V6F+1n3LXmPPOIr0JB5tBwjfc
1wrSYGFARZrW5qmhGRS/P+cLt6c4zh+kv8VynA6FNKcIsdQZlDBQ7zJ3RRxf
EUjj0CL6xb3togO7xGfQvsF6bUUvcVxJLnt+DtHhkZa80DjXDJK0alU+RfhC
TI9R+mc6ILjCmb44jb5zxLp8IbwBtuzgf0uH7NkiNam/02j4NmXNyVscf8im
DiWxdKCUNfQsPJhGfEl2OrY+4vj+8ruz/y7SwXm4Yc2dfRqJNTWJeBJuLv9D
qNGFDlvEJ1kOzE+hMk9D7Dbh1gbWfyod6FCG3Mn0/in0s0TE/xXhL6faBT6e
oINLj1RH9rcp9KjcPTKfcKOE2/FvLOiw/f6dkqv5U0ijumjmK+E6R0YK4kzp
8GWp/ple6hT68EX+VQPhTAyTUl9dOqhP39FpC5lCRkMH59oIv1NNznTUpkNz
wW5K6pUpVJWm/6CbcP+eum1mGnQw/qDScN5hCpkvf/DpJ1xxQ/Kh/UQ//faA
aoySOfH8G86MQcLdNmrPb9xDB/a6Boulg1OIWbNQYYjwHqO7GM92OjwfzaYh
pSmkv24wM0D4jvITUlNydHi56eyvoI1TiLaixNFHuMO1kCcNsnTQkXwUrMOY
QldZpx06CT8j3fXykyQd3IJb1dlZplDAWzJvC+GdMof140TosMrTMVU+PYny
LFpXagm3zX1wy59BB1cPjTe3uycRY7kzr4hwr+oNJSpcdNh5JVicpWQSTXMw
X31L+IafQiV0VjpkhGU0wrtJNF/XEvac8Dcfda3G1mkQdyEj+mryJHp9Pd47
gHAN2RzdZ7M0OPI5X3ryxiRaZXhbuBD+Ti/62ZUJGlxLZRl57T6JXvwZ8z1G
uHsm9a7+MA28HXIK7e0nUdNSVIQs4RdfS8hNdNCA9Dv/UiU+iZaVf9RkEHl1
VY5irfCLBnPFIcrx6xPI63PMtzuEs+oKWM9+o8GKfZOG0fgEOvLv47Ij4Ysu
DmNfimkA64Umq+0TyLcZbRQlPJxx4I/RB2LOsWqKsf4ygfSe3j3tSuRzwqJf
mHUyDT4McZdxXptAiq8WKZ+Ic3R6gSt4hw8NXrx7puc1M45a/GIPrF4Ux/H6
4vvfNtDgXtRKXFv/KIogPV15QfjFYtHZAAkaOHcLxbwpH0VZGsOzeoRzCQ7M
KwvTYEPT774raaPI5Jxp2t0L4jipcV/9M14aPPK0v8HuNIr844NmyeeJ80tj
DJ1eoMK8W3y1YN8Iejd4szjKWRw/2TdokfqbClIxb5n7u4fR1uGXDEd7wvOD
OWS8iX79o7Pu8fZBxLGctDHUQBx/73lLoJW4j1k71K3KK3uRbPT1z6/0ibr9
8NdHhCiwmmq74UJ6L/pn+Yleflgc37TJKvP5JwrsuXTlFD20F21+3MGzqiuO
q5B0wuwyKbCzS1/FSqsXOR30ZzIm6n9KiAfrj8cU2GHG+6I2twdRLrxXv7lf
HC9Y2dlocIYCauqntwTEdCNPYVqJkqI4frfd4hxtjR/ct90M/GbXiTLXqn5c
J4vjPhpZdp9O8wHztuqSrS1N6MldNNUXI4bXXw4afKLBDYrDYY5Cll9RmHit
h+OKKF4kMkl+E8cO1/ddeqUwXIzlskya/dgvig8co8z7rzNDuV/QmsTfJsz7
Dun1eRMR/JLdjdZJTRJ8vRMd6CzZi91MoFLUqcK49iPrmomWeWQjvfHjXNMo
dsHKIfHbc0F84j3k73szhsR2x+6N7JzCevYFuVh8YODRE+YXLp5pQLdk54fu
Ls5hp9PO340h5oLlucJpoxs1WLsx+1WrT0vYfxTcdzjVXxgA8Dvsde0toWkV
EUWdg8ooIUVWpURGRkM0NFApmyJFRDtFQ6U4p+yVvbN39ry43Pv7/v7yPJ/n
POcc533P+z3vP1dyrQwosabBavtX7SvPRoHJAb47miOrIPB1e6NdHydUZH/U
nBREB2cultgpXCNBuw67qo4CTvj+9J3w30/p4Itvyf2AWySo/ru30yiDE3qq
p46UYjq4w0qgVN0hwcPbW/q+uHDCuzxu630oi+CqTGLR2VgSnN16NVy9nwOK
sgUM0EIWASP5eUPkSxL8cL1q0qGDHeZ1xonz31gC7bqJpZa1JFghlrSP4xsV
1hSanS8/wgC/mNySvYpkyDxnTHkaT4WtP9Z8PuPHALbjt14PbCTDW7ll6yT8
qNDe8e6uqnAGyPYfyR9UJcN4zYNezzdToYOOk/vAbwbYPnj5as92MpxceFWv
+4gCZQspu3RUV4DqgKv3dzMyPGF9xVvrHBn6x/XuuT6zAjKZpqFzfmToW3cu
iF2CCe46eqhP7GUCnR1xQ8n5ZJjLvigQX7YKjIpTv43bMsFj7iZv/QIyPHZc
eLz/yip4+IylEufOBOOf7mW0lJAhqaLa7U/XCtg4LYjK7zOBYcKQGE8tGWZe
ZM0XZzAAM5wrrLSCCQoZpL+WfWR4TeyBeLTSElBymLdp0GUBn7dZyZ6cFHhn
1PiUS90iIIndvR6/hwVS9Zsn+3gpUEFBQ4Z0cxEwm4yW+y1YQFXoCLYTpEDV
RvUPUR10UPLIWUrjNAuoR7OX7pKiwKy7D7/LxS+A4/j2rwP3WGDH2b/Ng8oU
GP/YP0rPYAHIXy474hrLAjH+7bfMtlCgpHWN3PqJeZBtUm/PlsQCzYcuXn27
jQL3H+KedTKeB5UjwgklL1lA0KVc/7Q+BX71yf4eSJ8Fj6uaT4I8FtglbCfw
1ZwC10tHneZKnwX2u6TlrH6xQPJVu/1shyiw2fzYnTMHZ4H1obnitkIW6Nng
HnvQhgKPNt+bTVqaAZ+vvyluK2EBLq+drQ/sKTD7277Q1IwZ4JTTfMOinAVq
pVZE245RYF3AzzWXLWYAD9vmozqVLGB96dpOmVMUSOIRf71peRqEsatnRlex
QGn4gd12bhTYaJUkmpkxDVycb3Ta/WEB/ZW3ovGeFDhnX32Uy2IaJF+fMYkh
XGkwNLvChwL10h9f0FuaAr1CyFibcMq241ykCxQ4ddnV2zh9CrR6fNfaQ8z/
3WA/n0YABQ6d1jmsZj4F7DOCzvysYAGR5a4Px65SoEHPq0t/xydBc+zLnU/K
WGDJUHng7g0K9KT/ChU3mAQycIHcW8wC/PbPkz+EUKCrueQa3vgJcKFQUTS8
gAUkpY6V192lwFIBpqfajnHQdt7Vg+MHCzS96zUUiKHA3F+d3Cfuj4FHUcJH
6r8Qcf+Y773hAQU6Z+hRbTtGweJ52ZbVDyxQJDP5ZydxH/5lGMY/ufEP2BQz
JlyeEfnzev2QbRoFXnEQHKwvHAKVWx4cOnCdBRqufrronE2BlhWeKsn7esHp
XpsQLkkWeBi76URqDQXSchvJN+70gFxJYb0gDhbISM0LK2qgwFc3zkYdLe0G
lyzatovNMUHdO8nM/hYKjJDZO74S1wmajcK+pVQyAcw/5iTYQ4FvG8kcDo9b
wGjy+47Bc0xwWNP0idQ0BaaZvPQdP1sGyH+9b8bFroL8qV2ldTQqtNr4fVE0
sBjIZf1U2XJuFSycTg28LUKFas9zUkJCC8Ch3Y4nqyxXwSN1iVwNCSoMn+zk
td77A3RMXyjg4V0FfAPymt5rqHDgfGHjNuEokDiYkeN4fgVovLvcEqhKhdjj
V2cuRxHy2qH0bo0wAyTf0XTI2keFJyMUpHa0lqDiL6JFGj3LwDdmUKLYlAq3
bO7UuPGqHOnlbxPT/LAMCqTeadccoEK74V3a3mtqUMLACAfdeBmcmlzNwoeo
8MdZEfWzTxrRuzbSUJDXEriyZ9qC7xgVClKcavQkutElQZas+k066FxWKJM6
R4WH796Zep7bjfYnPwpq3U0Hio+dO+0uUKEOg2H72rEH/alm5/RmLIArsZaR
9/yp8NoXj7BDT3pRlqjk98N+C0Apajv+eZkKrdMPXOLiHkCsBPMiNct5ED5m
6+d0iwqRp5vLi8gR1OJTayTWPgNe7api2kZSYWJI0PIz/n9IrPd21JmIGTB9
0sPJN4oK//akBNbd+4eiUUdn++4Z4K35qvtSNBW6rqvKfnF9FM13v3JQfjoN
0lNVw61jqfDRRtncHfRR9JDE9Yn74DTINxu12BhHrGtevu+v1xhaQ7rjLLQy
BW4MDviMEH5noDZH9dA4SvCP3pJ+ZArsOXebrPuACmM8U0XLfo0jMjTep0me
Atklj4ULCW9s5piw2jKByka49w3ZTgL22N78XQ+p8FhGUFJ+0gQC5TbsDW8n
QK2/Q3MG4Y6U2mscbJMolG1zwFbmOIi880VtifCtylK8Cp6TaEe+VDDFYhxo
my3F7UygQuEisyL2mkl0vF8KWqaMgYtdxX/PEK7/PkjeRmoKaUsuMOTHRsFp
gR/twYRv3ftE4LbpFNpa7aQToDsK7pzbdfo+4U5e4eGRAVPIQ1T97fHgf2Cb
jMbB64Tn7Lx/w/PFFIqUyNzbUTkCjDfpeR0nXMnBuEOyfgpd5760YVF0BPis
CDxUIbx9IDktljmF3NeHpX51GAbhwSbpfcT+sx02tTZsmkZjn0KBUtoQaCcp
e90h/HW4WnK71TTaGva8wHBgEJR0dZSJE14rYxm4MXUaZRdneua5D4BY9w3v
6cR398IGKu100TSqXhfNu/lNPxg02z9mQrjm5lK1oyPTKD7LMsx9pA/4jHip
hxLxUvB4kmepNoP2HozXCnfpBcX0vzvyY6gw1/4VVHk+gySC7vzJftIJhGdz
eLZEUOE57qLSz2gGDbz5Kt3I1wE844+xGu5ToZ/PY+PWlhnUNmjoonulHahv
FOE/fY/IW5uMG0Mcs6ih+E2uoHUL+D3tJ250hwq9g3+lVcjMIiNGY8yHn03g
vit5KDqUCtdq0cLAllnEqpBf6FnXCPaFBF0uDaZC5YszDyqtZtF3i+1WR6dr
QRNKSJ+7TuTbY+HZ7hOz6AX3pojSIzVA5sxvqZFrVKi9qHbnivcssrTvyjY9
VwUuB3KIllyhQs5vh5k7Q2dRpcXTTctLxeDEXktXcIkKN0fXrDpEzqLYk4qD
B38UgF4327etxD2dGh3zZjwg+lequJf2FQya3S8fdCLutXHMiUyJJ7PI4l55
WO75XHCvhdus3IcKCwWat31InUW3vvp1jE18AgMTvElrz1KhihA9CafPorn8
pKiimjfA4FCi/gkPKoR6yk/Mns+i+1f3ddBvPgZOV101wtyo8PZOH5EDhB8V
noxSHj4C+E/dCHzsQoWV9qarBcQ8bB+o2KQkEX1zLZVIcCY8vd8/m1iXyzZL
esL/NVqRZRe6StQl++/6WITYp/o3w9aRPZ+Qx0qMp5kDFRoac3trEf9veeUR
43pljMq+Y9f0w1T41eDb6nTILMrxv8En4l2AUnm2yKlbUaHez/s5ipdnUfex
0SCfrGIUcGrp+DNzKnzcZHCt4/gsYi553PuoUYXsNBPKjIl6O+wUooYkZ1Ha
aID2acFG1ChYtffudqIu1T8X3kGeRU26fS8U/zShS48+6nNqUmHBTq9f/US/
PmihK37mXgu6OfsvxUuNqJN8d9Y0fyD6eHOOBG5mO9K4R981qkSFkjmXKfbK
M4j3i9UnYbcepHI+Mekn8X1h9yOrcVVOIbULFe1bGEPoq2AjR0cvBYb7na57
mziFki9p5I4VD6PyzXU+rX8p8MTUtGfmqSk0VrLwjR49gqKeP8xGTRR47rCX
w9eRSaSrauyL5UeRfI3CgFk5Bepv4L9fzjWB3kUa9mVsmEAtsXZXXLIosMSC
Bx/+PoIKOvNonkPTKM/k3Ilx4l2RkUOXWVYk5tVqkP6pP4OMfh07mOlHgb+v
lNWw3RtGE0ptpxuiif7/pJCHowcFbtKJj75qOYTCXet4TLRn0QPLfe/DHCjQ
fZ2J1THcjyi3bTl+e8+hwZqw7Sq7KDD4nbabtk8nipIa2VOQuoBu/WLO966S
Ib7mvrx2/Vc01VLfzzW1hIRueDGWLpFh/8iUZlVxFmo00zuSKbGMlDtq68N9
yDBk18/bo78z0IrxNoO+XctowxJ7jowbGS7L/GKrHwgGDDfRu+y3l9FwQRp1
iw0Zsrje9cdd/QmAo9ZdXXYGeh5NDtPWIsNzG42mdEN+gQdGEi+uKjCQvqxP
wEcVMnzeeWaHWmUh+Pys1MJOnxjPLNNQVyJDne9jWX7OFUC2xGui5ywD7YTR
B5WEybBnwU3e8mADKNVJveuEGcgyKJONf4oEF1cWe+cXGgFl/4xvbC0DCY9U
yYcNkaCn6m/XmafNQJh3JedsDwP9eWQaxNFFgudYqcynM23gVbvMrPwqA/1q
slDm+EOCezdtEVR+8hfMFHW6MrhW0NveXo6wIhLsT/Xv+Lm3E4jVHtS8LbKC
eI0a9wjkkeAyWKNvV9kNVgIqEz6tW0HTyx9n174jwV+WK3cXU3uAyGk56KCy
ghxQ7PD7dBIsUFhcvXSxF3zjP+zwc+sK8ktM2wcfE33W3gHmH9M+MPpyLqFV
awUVmOofaCT6r/DD2XLzcv2gx4Xy6YvOCiqPO7Dd+x4JBvXfle6d7gc+Cqcv
We9YQdJP9kBeor9z/2nVG1E0AM58CM37QviDkwIZ7wKJ8WxeMVOJg+Cp4zf3
Lt0VpHBYNemQHwmyZfBdoHgR35XRS57121eQyJofdqtnSDBZ0pbt527iO3Rw
f178thVEeWwvmXmCBNeE+g2LCY0Az+7fLhu2rKCJreI8J4+SYIvQmGLk539g
ONNstVhxBeV9Nrf4a0yCgyjzdUroKDDvV9z0V3oFka67UZ8BEtQJDO3bZjMG
LO0dZf4IraAg/vK3Z3VIcCxb43fd/Dh48Mpf6cgKAxWdgPckNpIg2bJitbpw
AtzJ2p45NclAAWIM0YU1RHy95qV3xE0Ct5MlQxd7GUguxWFXuzhxbu+5OGUT
pkB17M4HZoUMRDXSIOVykKDWilnXJvUZEN0wgAKvMNCe+QrbJOK9P8H3qYMn
bgbk24QmIFcGYt0Rliwj+p60N+GckfQZEJXnUsJtxUCmW66ocr5ngRNhWhQf
NAuCJ7Pff1NkoN+15Rs/RrKAQb91l7PZPPCNS1Huyl1GMi7Zr0otWUB2I1Po
yv5F8CviRB78tYSW9dNEpVqYYC01Y3ln+iJ4e5+RgVKX0L/dXoyD5UygXpdJ
j15eBKs27Nyx15fQV4da0fifTLBVojqG8XIJRCWmNunpLaHvvWXcB9KYQDkn
++Ln1WUQsuTzc+zNIhJfc7b4vCcT8Gu2fVWIXwUG2ayrJG86yvj39VU6hQnO
Mx7tXKtNhmuviAn3xc0hMTvDV3v0V4Fy2UupqmPs8IPoY+PwV6Pog+pdmS3N
DJDCu5FN5Do7vF66/QinyijaXhLBaqtggNrzlS9knrLDO4aXTeUy/6F7b/ja
YzADCDkEh/h3skMdv0L1jVkjaOD3xDv5NwxgZtw74GjPAXV95/P4Pg4hymG6
as41BlAsV++AxpzwgctYOXrZh+zdanyebWCAb5+2WyksckG9Oj+yQVsTOslS
sVEIWgYTO10vslfywgMj/+zKSwqBeYfTl607l0CeHrzy+xGNqHPiF+oeToPf
2ormRzoXQO6PbVK2G4RgbUPPRbIeCaKRI8fnleZAguzDjffYhKG00MG44zUc
kM6vnV0MpsGWq2t3frgvDHfWNHQuOvNB7QGNL9dKxwDjlv/81QhhOCdn2kIO
5INyKKJx3YcxkNTB/LcvShiaHQ35QY7mg52mb16XPBgDihvWPKiOFYaSiSHW
g3l80OHGt1DSqTEQam9l+/mRMHwuw2FjJMUP22mvv4HVUXDxpzxP9QthOOA/
tmj5hx+mZzk7LG0dBcrKzzxP5QtDYaXksL8aNHjjk75+8IMR8F3enVnUJww3
GHvNtE0Kwj15b+O2Hh4EOSbnVd/3C0POv98Hk5cEocrdQf4svUEQsHtnRdyA
MFQcyjrlRBWCTyxcqGpKg6DL7dcp2yFhqMKvzKwVF4KOR9/7ys8MgEULu134
nzBULWvvjdklBMUOuZYMRg2AafUzZ6WnhWEosq8/e08IPlAunaJU9IMTo5R5
JkMYWt50NE9TEIY/eKMrwkEfGE/r2/1oRRgah9LdF5WFoUHmVc+CDX1A5+rQ
Do1VYSgex2twQEsY3pDSZFvk7wNWZu/N7JlEXAavrfu3j/jrWaju8LcX2G8d
4Y4hiUC73X4jTE9h6DymUc0d2AsqbouGx7KJwOnvpA8RX4i4SYa78n7sAf66
7InTPCJwPMBtyXSfCNwdJfDim2I32GW1VGTEKwIbctyAgIUI3KUwsqLJ0w0m
9MWn4gj/pWJyv9pWBI5e7k207esC5Lxnu9X5iHk+pO4wdReB+UuDBRo3u4CG
T8K4Gb8I3Lt2k4hUuAh8nWRy+ffPTkDdrFm3niYCK4IOl6nUisBDRfzIflsH
2F35zfso4ZJVuSzcKgLLg72cFSgd4HQg/5owwgttD1lY94rAT7oGNgM1f4GY
QVRuP+GmKYW7fWZF4FGdloOnvf8CKcV4wVBBEfjb4dD1EDFRKM2hJ7/vdTtQ
Uv5j6ykkArdf0Q5bbycKX1dM7ole0wYimm/h64T3Ol3oCHcWhX3rSwvVx1vB
cgLDMpZwiWldp2l3UUjW/zxT/qMVHM01msgmfEmisC/7sigUmmH3WTnaCqbq
41fzCT+VjMf4g0Xhmtmg0piNrWDeI3NHOeG0X+/Xu90XhT2HNAfXLbSA1blN
u9oJ55f5pSL0RBS25+4I2RPXAqL2UDh7CBdPEmE4Z4jC3bKXabXOLeB5YRRl
gPBU68/MD+9E4apn1QWHrS0gg8ytMUR44ZZvOozPovCsbPL3PmYzWOXPiPvf
3+pte2mUJwrD3Mz73KuaQeL1ByqDhG9+r3swrEgUCuzaRR9/3Ax8vQSXewkX
HW9Tq6wShRe3FC/7eDSDi677SJ2Eb41TMeZrEoWmJ/RnJ3WbgU6gG2gm3OmC
3mPTTlEYeHZi4CxnMxha9+zbH8J1MqRVQgZFoZbj+paRxibg6aB0tpDwx5db
6D8mRGFq6LrqUxlN4Oet5+FvCJ+o3XxAiSUKdUu9uq0MmkDxL6liZ8JfuN9c
rZEXg4p7yxUkrjQCB07qzv2Eu/DkxsxvFIPmXLyVwaaNIMXJa0aT8PG1Kp4S
W8Wge15YxoREI7hTuld7lciHXQs104egGOxNyJzL/9wAqhuCFK8R3pT7weP1
CTFI5OtTs4l6ELEq8/EI4SEipyXc3MXg447Sz+e/1YMBr7OGqoS/N/ZKUDgn
Bs0sRhuTbtWDlMZfHvVEHnqW3hWPCBaDXyedjvSJ14P6t90kHsKdXd21dr8Q
gxWFHEtOoA548WedkyLuBePcOAfPqBh8WZq3ixVVA963Wjwq5xSBK2xhEZbn
xOFtLt4cnRPlwMH6RcNpwj1vz3K+vSwOWz2/31w3VwZ03lruZHGIQDo4dZUS
LA4d69v7BO6WAbYC3zBVwgXG+2xfxYnDdkmDxL8fSkH7vOlRP6IOZPNuXKr+
LA5FghsWHVnFgP9MKcog6obVF4GuqAVx6LB2dRsjuQBUzhV8yKULQyHLN82t
lyRgmzv8MPXpO+A+YUTaRLh8hNhh8+sS8LreNcWakW/gAF2+OW5BGG5nRhzI
vy0BH84EfciU/wYaFI7JuM0LQ97Axc+JDyTgs6ps21P3c0D33iKxlRlheD+1
5PKWTxJQUP54Ru7JTyDo2rXI7nFhuOqbGj0wLgGTO6IMDyq+AVrRTXse9QpD
tVBaQKCzJDRQX6wSsnMAtnpyrXMlhDsa9ngYSMELe+zUjrZ+Q81n/EjzV4Vh
vJvbpBGnDAz6aG7b3F2P+Pc8kkdrhGFT/8Vxw2RZGBSoPfc2qRuxdekbJeUI
QaUHUcPVC3LQkyzMLVIwiD407KTWaAtBA5G7exz3y0OvYh9DK4dxdKHJq3ZT
liB0dv8U46C9FvbtfSbU+GUaVRvtFPyuIAg53R65BH1eC/WghI3cszlUOaF9
n5MuAD9W9aW93KIAi96/e386n47eqD4ObHzHD/38jeqUHijAU1Frs08+WEbI
xW1DryYfPOyU4zoxpwDvPReZfPNwFTnTaUqvMA+UNn4Zb2egCJWcDJ9IbSZh
9d1dgnn7uKGE05rb5jcUIY+lz8cX/mRcLZWsdyqZE75Z67fF/asi/Li9NvRY
IwXv2yl9nEzlIOqncEx6pyJ8KGy6qUCIDc9mMJy6ddngoSdFQUsMRThlyZnE
58iOR1MfD+drsEHj5I0hViuKUHl91k+KMzuOHXib+USZDe6MeP31FeFvbdV4
F0+zY+sdGsNHZNmgq6Ps68OrilCufUG524cd7/c/sgGxqDBBfn3OM6Yi3KxF
9XsRzI4hRwflbDEVvjT8e0WCrAR9dw1N8bxlxxHWdAldayoUOuhYeYpdCR5K
N4rUXGLHUuczLzD3UyFPDHiSRvhm/bkmfiY77hw8IFq4hwrfBb9I6iScTKLs
G6ZwYPzvkJw50U9nDHAp2XAowaPXQx4m8XHgc+nFTjZSVCizdOykHqcSFEq1
WJmT58B65bfq9nZR4N4DSsmdXEqQ6rb18419HLjbWMwhieg75yOkaHd5lWDw
3PEnM7Ec+P65ksMlpyhQdkLpyGvC/U89LTiRwIGpfrLZs44UKFHNP1BGuGT6
k01/HhP7CQmJNbOgQNuXt3q5+JTg5736b19kcODrEvLMqW0U2NpPOhxEeNQ1
ctTBHA6saPjvxVqiT22r+iJkzK8EOf+tzQps5cALpI99Rgtk2K4+N+9IOOVH
Q1p7BwcO4Dl723WSDI9GSa47R7gTnP2j38uB++lRzNc9ZGhVIHIsifCb7W1t
K/84sM+5A2hzMRlywkaTXsKvcel/Ob/CgbnPPMviiyJDPq5zSxYCStB+wMta
X54Tlxubnt5wlwxbhnmv2hOeu0XnX4wSJ+berBoMbpIh/WmYiQvhTUXCuYMb
OXGE1iWGz3kyVK5WRxcJH/N0ZYvcyonxjLHNHS8yfGBxxP0a4azs2KBuLU7c
27JeJuU0GbJ/dXIKIfz3B10NzR2c2Iatra/Mlgyjh4SUognn6LQD9QacuClT
crjTkgw1fX/OxRPeuXo3SXEfJ14x1radNSXDumP7BB/9v59Pj9T8zDgxWjil
wWlEhoYr7y8+ITy4+/Ri/kFOTGtp8ZfWJ8MNd+fXPSWcbl+yzGvNibeyl25U
I/qCel2pNWmEF08laB215cTfY07vAepkeFpPyvkZ4dWns5+nO3BilfsDlZYb
yfDHp7nx/533wrj5xHFOPLJ85ZfzWjK0+/mm8H+/ULFeTdeFEyf2OyqekyJD
P9edA//PTxHWMrp5hhNP7/s5eZPo7/u/P7NIJdyrbzqqzIsTm8n82RzDS4ba
X3qpKYRL1OqKCPlxYk+b4pqnbGQYbL5Efkz4kHNvpe1FTmwy0tKfuUqCPt4D
pgmEA+HSn8mBnDgjb4frjwUStFp+3h5LeIl1QW/vNU58pOBLdsMwCSa+e/r3
DuG3pE/UeNwmzuGz7tXuHhLcfKZp/03C9x34nJB5jxPPn279PNpG9P3f/rJd
/n8/Z4LjJyM5MfsxIz9SFQnmtR867E44TY+u5pfAia3bTskqZZOgwtH8M4Dw
XXVz7R6vOLHUFbOFuNckaH7jrpjm//u/9SCVksmJ1b2fbGB7RoJ7x8XGlAhn
nnp/8VE2J/43Gna/N5YE7xw5J85O+CjnTcvCXE78YDL/bMIFEsz/Mnc8j8jn
Jt+tBQJVxPz3Vyp7iH468pFwITvhd+LKff2nOfGl9yq35q+wwMxUXd48jxK8
MaxzP2oHF+7gn/6T6cUCrctyKVWEt48brHLt5sIVn0ZbXJyIPri77mUG4bYp
PoE3Dbkwyf/ehurdLEBp9tSxJPwb75kon/1c2HbPh5x4MgvwVs7sS+ZWgme2
blKFTlx4i1WobP9tJthVM65EI+rMpYpwxscbXPi75NL9hOhV0Jz99asVmxJ8
ptQa3FHMhc0/qf5Wv7UKXjuwbRch/B3r1dB4ORf2DVQYLzy/CnhsKxbrqUpQ
L9bfZ/UPF2bfOqs4YbMKfm3/ut+a8IwLjv+kmrmwk+d7KS25VRBPidhgSlGC
a3bfv2syxIUHDqxGRr5eAYb2e94JkYg6fJYGr3Jy4+q5PP8bvxig90V0kxjx
XeBQM3HVN+bGP87a7vaZWAKV//yvjkwownnvOz/FCrnxCd7JyQGLBXAigI/z
0h9FGODg0nbwPQ8eOyZSK3N4BrgYr+syS1GEwxtWjLsf8+I3krz9AgrjwIu7
tWDVRRF+ylCYUHPnw6lvjriZ9PYDX3tbaVUpRWjqZaxerMWP02d7a0x9iXf6
tWfPwrECHCm6cttimB9PWm24FaRXCPpLZeg9JxRgs/71q55XBbCq9V7TQJiL
fmyojAr6txbeV1FPvsFBw2dNsgTOb2hC5rphLvjsWij6/RHbD18arsj71ln0
qRfJrct0VKmQh7d1NAW4f9OwczFDvbahF7EnPmg6WCwPhRiv47QLaPjB9ZA/
7fO9iGW1e5vvL3mI+C0Oniik4ckx3dkJnT6UvSoZ9+6rPLwuU3Qiq5iG5ZPe
JfH97EN539q7eTPk4d871SM7K2iYezYnWqmwH+2OIlu7XJWHZ3xDOZbqafjm
0ZDGrPpB1KWQ7B+oIg+jUkc3iPXTcE5Ed0XJ5D8U86CmWjp4DaTf9Xr9mknD
Jf02708KjKIjzx5uFQxaA+/eCLh7iEXD39IaLq2ojiJJ2U2p1MA1UC+y6PMS
4ZRHGV9VPUZR+0/ym37vNfDCpguBaSRBfIYkk3W9fxQ1n6xxjLJfA8861l7u
Jgviw8GuL8dbxtBONmr3bY018BqP+n5tNkEsZLrJrg1PIAPTWhtGhxw8nWMr
r8sliCeelk+Yd02gC49f/8xukYO1KqGNvoRLqVqtx6sTaFPWKSXXejlYsEP8
9SvC5ZJJXqk7J9GXoNfTpaVy8NmNrS/FuAUxl8yrtZafJ9Gk5ZMQ/09yMP58
20I/4YENteJfrKfQv4AaGb+7clD+mGLqUV7CP2800t83jSTiDX50b5WDckEx
0zH8gliZ/Whaus008j3FM9WpLAcPDC9zZhHOSktl43GbRg8psrlt6+RgRKQj
V9X/4y9wNNTfmUa6uZG8FZJyMOnYqSKqgCD+bpxxxqFsGjVmlsZEkuSgSNbo
OhfCT6Qo/M5tnUYMtpljgcuyUP1q6PVAwgXsXotI/ZtGXDnwp/OcLNy+rhhH
ED6+ViexjmcG/VzzcZ3KsCz8vi1y/iPhfwKeLuoemEEtL28kpVbLwlQtd9kp
wuV/VPZFOc4gjX0Xmi6VycKV156pK4Szkp59H/CaQXTW3uQDBbJQXPMjJxdN
EEuSbq6JjJhBv9MbSidyZOHVpsNBMoQvb1R60508g+xcdVV/ZslCONEQrkR4
++40Kc33M+j+dInEnTeyUIHWc1WZ8NqJo8m1f2aQxEhWiFiKLGQc6GVpEZ6b
ovxevmsGvS55y9aaIAszDZdidAm31aU98ZqcQcf3ifEkxchCY6Fuqh7hXNds
T39jzaDKOP34o/dlYYPwxiP6hF95ZMFFFZxF3pd8n4mGysL6/cdC/3fxIyD4
wNpZtM6Cte1PkCxM8xSL/3+e6G0eDfFbZ1Etn45JaIAs7K5sv7GD8NFU2nI7
nEUvtp3u3HFOFhZchPu3E64n5jmjYDWL/jQ2zY96ysIIyboZDcKv7vr8w9V5
Fs3HtEQ8Pi0Lu0TkL6kSfnKt/OE3frPoeXTOc5PjsnDN+S/N6wkPa5UcVYud
RTWJ2oceHyLWHZtTESN8nro2aEP9LLovceae4g5ZeA4riw4ScWk/IRrh3DeL
ZFwu8edrEn2HqIZ3M+F7yHaOj2dn0YjdRx5bVVlolDyQWkL4ozYdLV7ROXSx
utT3prwsfPA5NDKD8IoNj+LaD8+hlyYbmr+yy0KHMyXXLAm/qOPtw3d6DgWJ
75UALBloSnWL1v0/D9eorOhdnEOFO39UFCzKQPeH7AHyhFe73lub8GAOzV75
Glk0KgNPaJ0sHCHy/PObQaddTXPIJp925k2tDNx/8PIeX8LX/9g+bWw7j6Ir
+/MXn8hA2x+aAXv4BPEt4c4SK9d59JV/x/WShzLwoOWBW7KEq6suH7O/OI84
detX4qJloFeh7M1Z4j7a/FUvdYubR7VOJmobQojxZgcdUghXbj9kd756Hr12
22C1xVMGLge0+A/xCGI/yeOs/cYLyMGXXaRBVwbyX8qb2kfc91HvlrkFbTo6
uam6/WSdNBxhey2syy6IXVLUJMoFltAztQePvJlSMGD64q2HszTc2CW+WVVu
CVEyNp4oo0vBrAa27/kzNHyqNjwuXGUJ3RfSrFaYloKuSOh7/zQND/VOupuY
LKErESi9ok8Ksm1TElaeouHjLY29b28uoQ0SNGFqmRTsPXqeljRGwyvPf2xd
O7eEnrsOOJDipKB1vKOPwAANG6VrG35oXkZ/jUoMtqyXgnaGMR6GDTS8N8Qs
aDBxBdnct5HWMJSEa7zfBj57S8PUc/rDbkokfMLm0n5pTXFo52OsJ6dBwzqx
Kb8TMBmbv/6z86iYKFRZqbjIHy2A1xz5yLnuKBVT1U8YBEcLwWg+i6Gxl/x4
oxN/1odMNtyX+T7E8AU/DJg90FRzkw+PFWU+kfnIhuWLi4Q/R/ND7+3vO1lX
+XA11aPhVg4bHvZSXJa9wg9PnihrUA4gxs/s4TBCbHiGXyu/wYIfMj4dv3XB
mw/TYsiJYTVsOPxH+NX2RT7oKOfwrsmeDycJ3vLYNMOG02PEf0BTPvjaWTe0
QZMPJ4+LBvlqsOMTJd2GsI8H8hgmR77q4sXR7esfaGuz464palhMJQ90oXy6
ZdXGi+lspM45XXZ81eyNa+sXHhi2v3z9QgMvbpi3/usM2bHuqaA/B+7yQNFQ
FT/Ncl7slip9Zu4gO9YZAI9+qfLA/o8Cg/6fefF1uYX9Mx7s+JrEqnnHeW54
dVNKvNpdXkxy2fKFlMKON0wk8mUuc8KoY+yRe1R5cWim+bh2Gjv2jNtxEnVz
wsS91Ru71/PipKe/409msOPFrIFnRcWckA40Xf3leXHZ64jRtDfsOOlABMqM
5YTFZm4lscK8WLJDoCgnhx3fvt1hN7qZE56jJrbdW+TBDOcPdZuq2LGrjUWK
iA0HvG6xsMe/gAdP6XaNPJ1hx3udre3qM9jgb/+YVuUjPDhNqVk2eY4ds07F
r7EMY4OZC/tzxA/yYKX4R0pRC0RfLt8Vjc6yQcfUuZmVfTx4tUnAxGqZHb+W
1bH2384GK3xTQ77p8uDma3zy+8kc+IWioophCRW2CrxpGpXhwc5p5E+rRB+8
++G1QdNBCtz2sfyLQQ83NqKrV+gJcGDbjf7RY2UUeFanFNW1cmMtDVvqWRoH
9iLRwM1MCuylLQocq+PGp5ZC7F8JceBr1C03blygwCcPdl86VcCNHUttDK6L
ceDLMRxejWQK7HS7Ybr5OTduv/N38ZA4B1bXrhXlHCDD370zNuHJxLo2exol
JTiwvtnUWeVSMpQRW/d05AE3ptqmB1yW5MA3gsM59kWSoVHOnvbY29x4McPg
U4w0B75lrvGmmuifgLXewFM3bhz21KV7jHBtJFh4nUmCaq4K7nYnuPF2pxpe
PRkOnCDmLKvUR4LvM9528ttx45jlQYmrhCvY5b35XkKCDDHNvXlW3Phr5afB
D4SPupe4Gr0jxjeKPXEz48b5Pv/smgj/wbnJBEeTYL/lr14+I24MqwYOTRK+
viNy39aLJKgd/EoyU48bx0u+/LhMeH/sR7s4OxLcpWW6y0SLG7v8brBbJDxr
2DJwZBcJqmirWHaqcuOMk983DRP+tl49WVORBD1Sui191nNjj8eGrDLCSRmS
ed4cJNjJzwEYctxYNJQzL5lw6PUzTa+RBUrVjKRviXPj12kHDU4RPshMT72e
zAKDo2a9VBo33hs26yFNeJnBZ9fXp4n+xrHt4Q3inR9jdEqygDi3g8X9fd/U
WMCm8ZvOIosLq1Vs8x+W4sBfa6wL7+YxwXOHL7taprjwrlDzHhfCx4r3c5mG
MoHgrsRncIQLrz3yfG8dEa/SqvrCiQNMoHnl8Gx6Dxe+f3zA4zoRX/PJRI9/
7avA+sqpow51XDj+5pEN8qIceMjasCh1cQWcjBvZFvGJC58XSJ0/xMOBT0mu
Y19VZYAvr9b5r17gwnrrQ82ruIh8kH45xz+7DGK9HnwRPcuF1/m6b9nOyYHb
cp5fpn5fBtt0dwxtOM2FM3td+uuoRFwyj0k92bMMntlnrdM/woXXaM3ob1th
x9u6bB1u2S+Bbo4t65W1ubB3aNYutxF2vD/k5Wupm3Swf0LuuNgcJxbsUBPY
+ZkdF2SnFu36PgvKwp7Vantz4sHLV0T1s4i6JKDMYr82Cw66zwa0nubERpIR
QhvfsWO3a8tyn+AsuKT1KyTAiRM/XW9F/ppO1I2jruI/S2YAz76A5lcHOHG/
7zDXtxh2fFhN5UxYwzTYfebbnzplTiwxZ93C4c6O+5gjP7bUTYLWc2H3LQY5
8HdM7Z6gsGMpc9K+2pUhoKt59JOAPQemGb18G8Fgw27HhBVLrg0BCosve6MV
B354vusS3xwbzhJ2UrrPHATyCjW5+iYc2Dv84bdX/Wx4k7TBnyDWADj9o1XQ
YTsHvmisqHmokA0/UDUTXMPqAzyiDzLchTmwQeN8oOQ1NmzkHaayYbQL/C1X
G2ksY8fnFjsmv9ZScda5L91dvNXAUvE42rqdHZfoCzbGFlKxwU+KjV1VJYiQ
bLASVmXH3u0zpB1fqfjRvaKA3ZHlwC1KpnRKgR1/bJgu6X9MxVOKbA7HBYrB
izcqrzL42fGZ6JusVyep+POO2vfSQrlANeCYwT9i30OnThbZDFCwcYV5HKdd
BlpzZ7sDM5YNP1n04kjMJeOyc+zZBjkNSD3HyujfOBX/O7Gi9+g5GX+q1KDv
bGlEjQ82r4vto+L5xz9kLaPJuGdmR/7qUhN69vlWz45WKr4o2Dve7kLG0bxL
88X6regAe6lXGPH/9JrUK9rykPGVqK6OrPwO1Dx6XV+V2HdQ1fcn2/eRsPm1
upxymz7E95mymGxCxcPXAiNVllaQeltxYdjqKKJ0TW3Wek7BNmz3fgnlryCW
YM4br8tjaNjpTE7pYwoW/2SgaHlrBW3Vk6j6tjCGIrJdgHMsBT+afTNay7WC
Nh8enLk0Po6Ym3+2pVynYPrP+sd1/AyUoRZQvVw3iWyTpg5b2lOwn+IxORX6
IhJdVf0W+nMa7eFZMXkvSMGRkpK2/nvm0CXHilZJyjx6LxHw4cItMvb4Npvo
TLxLvxy58Werxjz6c4vJ1RRIxlUn7IST02bRvaqzYXHH55HbizN3oB8ZL6PS
FM6VGQTTNhtuzp1Haq5LzzVOEOMd5PYVvppGGysVQpVcF1Bli9uRsN1kzHjo
4NZeNI5qLzx+/uYBHc2ZrZHbvkrCV8okxwsExtH5dS83BH2lo4Z7OeO750lY
7sKZwgCbMZS/W1/NroWOpjTPfbUeJ+HY+eW1dr3/kEXHdU9RiUX0N+HYaFoH
CX9Rdf94dWwI3ZG3WV1/dxG9rzQpaswn4QzS5nmz6h504FLK8QmtJWSduHz8
dzAJ13XeDMle6EZzIyaHgvctIZ6Y22KcV4n4+X6VUJDrRgFc6THpNktI/qyc
ktMFEu48I3o07M9flD303Mnv3BIqFfwsv/s0CaML187Iircjjq/dxaJBS2hl
u8vlMicStm2oS5JwbEXVc+26W+4uoSb9S2xuNiTMM8hfkN7XiPrSSgu+JCwh
vq5Hga3GJJznfobn9PoGJLZtp71k8hJafcqofA9J2KIuU3rydB06fmtqoTN1
CdE2H16bsIOEn9R9LHR4XoMcH2Mx9vQldHw4+kWsJgm79tew7pVUIZcXT81v
E/5GVSY2TYWELzj5VEcalqN3TxUOHXu2hC5GNIsWriNhNwl7v+UfxahbY2ru
7tMldNZx/YllORIezbn3hEOrAFW+19pIebyE0kK6MvZIkLCHX3Ns2xGE8ipH
l4viifk9D4qkC5Jw0PuNJ+sNvqGZsKMZNeFL6N6YeLsYDwkbDHGE+6pmo58b
w66sCV5C6/fqqyRTSTg13pRXb+UOylkB1Rc9lpDlrLpewzgLrVBnK6oOfwc3
BvMe5CotIb9fVd5seSxUa44b2zUxUI6/oxfKv4SGrGZd9LNZ6EHWuOHM9wLg
ttcv+Mr8Itr3ZJ966nMWKubT+jHyuxz8jDeP7UWLyEPq782xSBYKZlxcK+DY
AFpeNM577F5EbVbmdamnWOhTt3p0p3gT4JzdnukstYgsMvbRoB0LuQvzN7VV
N4PyE5TbATN0FOsvepffgoVsvodcztNrB0s9pgtsT+kIaHbs1dJjIXmba8MX
GN3gs9l5x6SeBeT/NtrwmxgLqRs3CZyt7gGD2prSsZkLaF3uy9waPhYi9YmF
d6b1AnHv9pZ3lxbQYfJ2fyk2FuqvDHrRYdAP9kaSz1lxLCAjT3KK/iwTre57
8EjGawgU5z6WieafR90PFVKq65moxttj13uNYeBAF17fXD6Hoh5eU/OtZKL1
k991pOeHgfZFYbHDt+eQk5tJumERE/mP8NSqX/wHnO8cE2LSZ1HwYav5a1+Z
aCjFLGbd0XEQl8gUuV08g/pntxYcSmGitc5/EkwOTINRRfnJDtEpNJ127mH8
RSbac3KpZz5hGkydf2Xx79wkSssLCA3wY6Il5dUV7t5pEPjuit/B7xPorLrZ
g8izTOR9fO9xY78ZABZoj6Z3jSO9m7GuVq5MZHiYzLf3yizIsolMsNj0D2k2
VH3cZs9EKoKfhGyI7+7xhpLYBscR5LajJ+6NLRON1x0oj5ufBeOblAP5o4aR
ouZn4cNHmOhiknvDlTNzIIf7oXPP2CCSzBimASsmytt/eFTq6RzQdJfxSpUc
RNX1Zik3LJhotjbOsLJ+Dpy3J511MBxAXnE3/s2ZM5F4xHK6rc48CBHjGhKM
7kMP70pXX9zPRCSZ0B0bXOdBY63uoMbnXrRl7s/ZW2ZMlFgct2kudh788q/v
ftzUgzS+TTf9MmWifSV3//zMmweeNjeKTtK70TQzlkeL8C5NnZIrg/PArMP/
V5J4N0otSuFsNWGi0v1t46r8C0B1JSkw60wnevNzoCKL8I6v3McqNRaAiolO
5vG0v4hxSfTwD8KnBx5fsDm8AHr+Cv32am5Dm0++ebxI+Ii0f03JhQUgVvcw
l8zbioQ/Tz05Q6xbE2JqLRe3AGp2aU6a6DejU8rTlrzE/n38VBQPf1gA9K6n
HGc9GxF7YNCHbsI32nG9cC9bAPlt4ROJifXoorTTh2HiHOqTlcMdehZA3LhL
Pb2gFmUOG+5TIs6tcfBr8UY6MX4Gb/For0ZyCmVnog8y0aYP0hGVPHSgepCZ
uKhSiTacOsaz1ZI4z+KD9EcqdJBwWmz2fVEh2hxgGstxmIk4xapdsS4dzA6/
s7lN+4Uuu9nY7bJhIs8jsUu5RnSgcDv5V+qHXOQzruD84igTufma7Ak7QAdJ
DFX28l2f0DWzkwkGDkz0I+OBgoo1HfCcM43zjX+JDvZlDQscY6LdRivZqbZ0
sKAx8cXLJgadjg+EAs5MdGHtR4d/dnTQqdm7bWr5LvjM+e8ucGGi1Pzj5Vz2
dHDLtIvMvek58Lky9OaZGxPtJX2cWCHmSY/V4njD+RHI+mtH6ngykYfv39US
Yl1uS2laWuB3YFUXK8X0Js7fdLOfpzkdpJ7lu5hyAYPzm99pLpxjot/p2bmG
O+nA+6pLmn1XCTikz/708hUmGs4Vqb+sRgfsnsyWlJgK0Pfv7VeOG0z0PTK4
Lm4NHVyZH7jnbFANHr8sGS4IIc4BlrWcX14AlnfQFM+BejBqzxCqjWQi+MR6
o8HAAihQ2fhcQ74RWPWoFK+NZyJew+v/GFULYGnrR/fzU00gzHeQJ+0RE+3K
96SaPloAeQpx06/C28DdSZ5szedEfBNB0TeJBRD6JZyoO90gSMRI8mE+E12v
S/J1+DYHwldPGg+lDwHXG0sfti8zkdoLFqy8MwdeOrabhrkNAx9xPpdRMguV
Tc5t/X5kDlTcvOh+avMIMG1+1VLCzUInTs29lxufBWYu+aXRL/+BUO/1B+hS
LKT0+cyjjzyzgNpjI5wQPg7C++fWqeiz0JZLAYLOHNMAqOirmgdMg7X84T3f
77BQiP7f00P2w8BRDGzcsDAPVEQPuU3KknCzaI6QYPYQcBzcOb122wK4d328
U1CJhGta/nRUsQ8BhUAd2Qpv4h60hd403EzCTu+Gnu16OwA+LfTUKfcugJSH
jC+N2iRs5es/bD/UC64e4w7m+04Hj/gU/3y1IOFbZS1fdh9vA02xamp+G5dA
ZeJXa9PbJMz1Ueu52r8W4CKsbXHUYglUn88vcYggYX7R71MN55vBWrUM29mL
S+DkAX7mlXjiHVJ/oPRFcAMQ1291N0NLIPdXtMDAMxLesl4yP3BLFdjfdGDX
S8Nl8KcCGhzBJLx0PHGVLvccVF1GGT/4GWCow+96GPG+GmCf3NOzIxqYB9QI
WisxQELKfhsaBxmnn17gkY4JRq+OHBm6q8MASylP9z0TIOMfdDZ6XP97FHO7
i9ThQMzjUpg0IU/GDwu5N6hPf0HGrexcFC8GCBjkjX25iYxVX9AP/fX+iSZl
slh1lxmAIwWVeWmQsfM5nqYPHwtRiMrrpdvxDPBWyEFBxoiMX5ab61dPlKAS
QTM9v6fEui+qG6gHyJh7f4l+3uYKtElV/J/YawY4GVEzST9Mxt4Nwe0/q2rQ
WYVXMcnfGIAtf0sI2Y2MTaIV7lDc61AFKXXd3XwG8BBNjxH3JWP1v1OOXtQG
1HLEyFa/gAHWPG9V3068Y/Xp1Q3/njSi/W5evPnFDHBCUG3DCeLd67yZ1Oet
3Yy07r/dLFTGAPL+Uobx98n4plbn/EhlCzq1zT91RzkDWDbvNq+LJ+PT4Qfm
zE+1oYLVI6f0CLf1OCksnULGXRMSIGKxHZkf5/KQJuaZjvV39HxJxvCFWVZS
eAeq/pL3oY1YVzQ2Y6Eoi4wVYycS3eW70OWrhzVvEPu0tDR/t5noW5RmTnT5
H+1GUT+TpgUQA4hpcZs+LCDj6RcKYbNDPWhP3ojy4kcGwC+3uoU1kTHJaD/r
2fteVKNPfWX/lgG4Dfpu0LrJeOcz6bqHF/pQ+eYE15xnDLDOe+/H5BEyFgy0
e6nD7EfhkVnp7pEMMKz3Nqp2hYz7HmKVTs5h9KIs3lfdngEu12i+j1Gi4Dtc
wfJbSodR3paoQ+VmDLDRKHHlkBoF7yUX1KTdGUGiS8Yy13cyQKFmcK20DgWr
e1/73EkdRZGaC52GEgxgnBF9IM+Mgk2XP6memB5HLcGOu1OKl8FLCzMzk3MU
HPWaTVylehrF/Nz7uJ+1BH5fr84x/03Bwg1jGjPSdDTCt76kY44OBFVkTw66
ULHLNrrc/Gk68jV4J02qo4Ntne5bzntTsf8S6AnJoiNTnQdpOe/pYDB/jQA5
gIp/iV4L279nETFUFUVHXInvg61GhPx9Kha+4M667LqElrMS7Z/WLYD7VleD
XbKJ/jOx6E/aAwaCXKZpYo/mgY5OCH1hlYoTY+y2j6Wx0J69jcY/JmbAGsuP
afEP2XB6wuW8LKLPO7sxwiRf/B+oib7r4PmLHV+gFjBNC7jwnzJ5z6ulaWgh
IJC/T5gLR0erv39iz4cpCQnTt/aOopfOLRe6mNw4NNc6WeqzAG5enxwsrLyE
6h/qHj0bwIvpAh5hBw0EsVD6lP9OHwo23NDpzvGLDxv5dr/lbRHEx9O2htbd
48SeND5WfhY/dlLP/ZulL4QVYtdfMtjFhxmqth6XXQTwVst8Qf7dQvi6gpcW
05IPV4s/OSrhJoADbJ6FuAIhLE01if/iwocj7d7mZrkL4AiD3dpChkL4apS/
oWg4HzbRudnT4i2Ar+8JXtprLIR9Op3uxLTx4YsiyuPMAAHsh7vIW6yEcKRV
0boIf37MnSEbkx4ugHl6mrgETglhyRnIF/9GALdOsbwcsgVw4prb/t7XhXB1
+ijHk5uC+MoH4NQ/JYCLRNRPrLkhhDW9Pznp3BPEUVZKMREzAhiFHLGqJDwn
+ElYTawgTnubz6s1J4AH3/pbKN4SwqJciqdW0gXxt3nRtgC6AH5X9a8rJ0QI
v22UVdtZLIh9V9pWe1YFcJJD6PngMCFc4k1NPsgjhM9t7Dy/jYeGa6ssVT/F
COGfZR8bOqOFMOP4i6D2tTR85GD2tQ2xQnin/dkh7UdC2G9mpWeLIg0r8Dsw
EwhPSxTsuZcmhK1v6H68qUTDSmZKsRfjhLCwvfZ99Y9CuHTdRLLcBhqu8/ZT
knkghGUT/pY51gvhxWnR39tVaFj36OdhwUQhnFUs6XpETBjnn63XndSi4erc
ipT3T4h5fqVn5SYI47pXHvE39tEwsivtmyCcYTc1fjVVGM/PhXklGdPwR/Kj
LWrJQjielVyi/1oYH3f96pZtQsPsDfXd6YQD96RDX3KF8RxXTGWTGQ23z2tU
BaYI4XUPz7SEdQjjxR22F1kHafjde3uvN4TrDAnz7BgUxg3nOe5TLGl4XtlH
tpXwnjO8HQMTwljExvoPxYqGh6+af976VAivf2jtrksSwSbJjN7lQzTcWrx1
oJRwext51V+KIjj4b8mZMhsanjshrP6P8MmLcoFOKiJ4x4d3tBxbGpZtexrz
/++ciWTreNG3ieCR5zcnnh6l4fjK4ExDwl3WrDVet1cEP3YWsfO0p+GxkRC7
FMLz+c27nd1EsHbKXvYeJxqOfNifmEX4YGmu96iPCG59pxD19RgNf4k9soIJ
d+JbeXkuQAQzb7M53D9Ow/R17Fp/CY/nNZe7HCaCr6W05Ck703DX9wieIcIz
bUPtl2NEsNmTPbYLhPc++sE9RXiOde+egP9/j2X4nQ46SeTPSJYmnfDGhYW/
s89EcNLzAydCT9Hw8VeRt1cIj/l6ROnsWxG8TuxYnYkLDSdnXuAgEXnjGBkt
2f9JBDPipKO4T9Nw3uubn8iELy7q5h39KYJtknMTSgivUKqP/N+nV7uEKgpF
MKni4vgtVxp2Cwh9xPp//1vEJfSqRDCt6VaMnhsNF7Z8amAQfvmDZ9WrRhGc
miAROk14hkmAwQLhspq+2qKdIjiF270s4wwNsyWPdk8QPkX+ZHFtkIij8dvj
R9xpeOny+s8DhJdSCmT7J0Qwe6SQKdWDhmcO6/9sI5w9Rz3ZhE6cw+4/t98T
zuGxd7mK8H79kNo3LBEs3S4sbetJw4Ma12Q/EJ4aonT0jKAoPpI6vzfVi4aP
cblJOBKu8e7pWImGKCYP7moQ9iHyf4ox9n/ceQ6UyUjvJDzesesV4X7lJPIm
wk2FDKkehqL4TKKvqb4vDcvvuzU8RuSVVor5KsVaFI+ayQMHPxpWv7qvzpnw
fyVD76QuiOLu+/SawPM0vGzzbG6RuBdpuf5+bV9E8eNHQ5E7L9HwPSGPDUWE
02VLNXrzRPHY+Jzcc8KLuANyogivccguGSoSxXeSO7X5A2g4e15yXv4/Du47
nqr3DwD4Hbj2uO61kp0oCZGSOk8ihKQlLVKhVAoZZUQklJGkZCSrRSEpo+dR
yIjM7JWVmXGte7l+5/v70/t1Xs95zuf5fD7nc/5wcf9Vj3lMtNAQvdmH4zfu
amckuLbgdWrRNTreOU9D2/m09Q7cEkIzUdS9TLyPKMnfTj+iQ0dFUpn/SnyE
0M8vomXvcK+Ls1nesZuOjBqNQom+Qoj7cU7eGdwb+QM2SRvREYPTsNgA90nj
XV2FeN/wtQpT7jpKRz3TDrMluJvFvLpsHyeCkgNDHhm401Fi74miOD8h1F2e
usvxsQgK+dz04nUuHamHGSS1+wuhqcM8/wi4/7YKJVwtpCPDjnNGi7gPhMZJ
P8P7mNbDFkP1b3TEVs2Npd4RQgkcN0fL8L4nV7Hs86aBjiI+f9MxwH13zMWw
E7iPSeffuNhOR2ZVLiHHca88UfpqDO+rz+trzWX66Wif38Z7TrgL/Z2148Vd
7WdnQeg0fl8sNCIY90de9itxeP9dP5Jror9ERzt7pOKjcLcuuy6hhPt7gbel
E2t0NGN87/gz3Fkaf/OzI0WQe7224nOKGNqdXlKWjLum9KMWXdyvpaGrxkJi
aMArdygV95DW7V4wQgR5Dn9NmRETQ/QXxwrTcZfLSEwywn2sOxk+kxFDnw7H
7fu/Wz40rX4oggQuNP3AlMWQsJJj4Evc/aJ/elvg3hFdWTiwRQwZcH30TMQ9
47m8xq8HIugO39TTYB0xRLS4ovQE98uEw1ctcX/CnWu/YbcYYmf5hj7A/SH9
hL9ZuAgStPlZeNZcDPUE2N5xxX28Lf/YjzARpCy8arp0RAx1WXDT7HFvWLeW
vxd3SbGAishTYkhqpPC8Je6eV86Ia+HvNf9H20I/XxZDSr4jeoq4azycl3x1
H4/n2Z31pq74Pue0y3hwl7fyfy2Nu+jGvVzt3mKIY9M2gSn83KsHHFyJIXh9
eRH3ztwXQ1bKf/rf4/7n4yn0Jei//tmzwp0php7UH3gvgbttVbCNOu7K0R0v
uLPFkBNJ33wazzcW1+rHlLsiqPm9922ufDF0JJHALMf9faBGfhD+vk7Wnm1Z
+SaG9ASGw5xxV/slPb4Lf7+f/kBSbe4RQ21o+5NkPJ93f2zIdrktghzjUNQW
MXGUriw/+/a2EPpw1Pj+9HURxJX7NePhXXG0+i0/5aSHEPqq7Zh984QIKjk4
vIVmI4Fso84/1cH75M8cBt9Da7yvmnIVatpJIHPto8dC8b667rSKdOpxvB4f
2OyzcJRAMevOsTvw/rxavHi85qgIYsdQLP1uSqAvKkviXng/D9112Jgfn3Pc
km4crYyWQN8OS/k/sxNCh4O14g+Z4nm+IOOwUiWBloWCa7zx99T5koMbR3aI
oHHXDoGRHZJIKq8lP99cCJ2eWTB0pomg3FanmTZhKVQr1MlniM8DEdGK9eQy
YVSvfOLIzch1KD/49/K3NkFks45bpttBGKmCHB3DSWnU8+658ebrgqgW9iUc
GBZCCuqBvLYWMmhiZfal1LAACik+mis/L4gqvsLz33xkUfN9zWudlgIocNGw
xv63APotedjc+ZgcGtx894l+HD+y7Dxi9/wjP5KY6wsT+y2HEpiUjK+tfMjj
gZOXZTAfSr19TrjWRB6dybvC3s7Hh7SSFVeNVHiR1dIrk6jP8qjm685n79fx
osrgfPXBem5k9sNqiwhdAc2vuXzwUeNB22YFF38eoCCOH4tlvlcUUMK2MBtt
SW70aGDoASzkRBcqfgiczldA3kzZfbEsLtSU+bNMX5cDBQS6XfgyqYB0E2um
tgxyokvj3uwzQSREOvwgU1JGEcknSR1oz+RAr2UObbXrJ6CIw8LlGpgiim35
Vv7CnYwupQdpdncQUFpytcJz3KvefOT67UJGSO64n00z/h3/hVzDARRRjMnn
F7zOZOTGfWvJ8gcB5RJqmC24P71+t+/GOTIqM77spp1FQO5BT3+7GCiiW50C
MTsOktGPd3OvOr0IaELzokeAkSIS7yAOZGwko/0BPTvThAiIgUUJSpspoh/t
rsrcHSR0JX2D3kEPNjSwSAFqRxWRsfkGxqA+CXW3/XGqdWRDKHqc5xruStVn
/wTj31MCfgacZjZs6MSnspyNu/tLHzFlLRLiLXx4f68+G16dH7RQP6aIcoXF
rS5sJKHSX/Vl60hsGGvPU61wXBE910yhtYmQEGfvZ5fgh6uQN4W09sdaEdle
L2clDBPRhzg3J43UFfhkkmMUnlREu2yl/BMjichpkCDm93gF9h4jegz/5173
/TeGEVGuxq491cErcI82nwr/KUW01d+u5kMQEV2QsyacdVqB3llE1lHcjy6z
jUrx7+7y+YfH3baswPKhiJNduKcSq2vazxMRNXch/VgBC569mz5deloR7fy3
A4zqElFjJn1r+CsWdGRoVnTg3hG/yOekRURTvXY74TMWnMjJhrO4Hz75Z8Ow
GhFJrkg1Kfiw4MnyrTJyZxSR0/kJwz55InLld1duAyxoOWEWch13B/U07Z98
RJS8wziTVcWE3JlxyyO4S5YrEe/2EpBzRpmRRDETSqUZWM7i7i0pXXoMzxtH
leCEbdlMuK7FbJCFe/OepL8bWwhIQ1DG3eERE+7U1PvJf1YRKdxpuFZdTUDx
mYnzvkFM+HdyTYaGe0NzVW18OQENfc3WeOzBhAnEoQ9SuP9w7nx8GRGQ4YGm
5uKTTHiirjZ6A+46mW2nuD8R8Lnw4Z5f5kyY8SWnTxX31Qt8p39/IKDCOeXz
fXuY8IzdzWtbcL8XN1SW+paAWuCswbQGE8aVcO/SwP0nCntyPYOAHNQMe9gK
THgUndqvhbvPWZkG/RQCeulwTYefzoROZmejtuHeOvrdnTuBgJJCy0wkKPg+
dQiS2riHtiYFND0hoJ60ZxKKy8vQy1Sz77/rfeMaFxOjCWi0AKSrjS/Do0b9
Q/+tn/M4sNXxAQGp+/P/0+5ehvlda6qauOdvbpTTDCEgn/OWC7t+LcOALz7v
1HGPeTPYtBxAQKneQXv25y3D5Q+WVzbibp3T6xnqSUASzevumKYvQ4OhoNcK
uK/NCF465EpAk0nud8zilqHUo99K63FPD48oE7tKQHGv8r+a3V6GtygPW4Rw
3+PLX5RiT0AqKftWTa8uw7Twel5u3KklVscdzhDQ7J0e1n5bfD9rk75r+Pna
bLh5etMJAspcF6K3e98yzH7rtn4Cd23vwdcfLAhIcrWoQopvGYJtjVgx7hnB
JhafdhBQ1HKloNDqEuRMF7DPxv24nv0+j214PB/5SJL+LcHDxc9Lk3HvTvNI
11EnINrJDV6DjUuw+ojzjju4H9aSyc5VJKCC7OTz8fFL8EfdPGkH7i7Cli3p
ggRE7zuvX6O6BPMf+a4E4vn/+/CMdn/lGrTzP4ftM16EwzMkznt4nXpvzmFo
yq7Bou9LPr26i7DNRMPlNO7vstR+vBJdg3I6AodvqSxCehTnrCbuIrnnTWS4
12C/hnXZW55FGARN9nbYKCKxhusnOGfYsHpAqGW1ZgHmXoshy+G+wZb9+fs3
NpS/O0S2PbQAY58KkO7g/cTdPryG6MCGtdTr3hIn5mHhX8+d0UcU0cmWwZzg
t6vwp+/Tv37n5+DGlb2TsyaKqM/xtifSWoHFQVK9AkfnYCf9RnQU7jO057vX
b1yBBSGNMc8N56DalfOHtuAeEVra7LVuBap4+e7M2zAH3SWUZS4YK6Jn04Ge
ahwr0HZo/E7TyCzcd3HLQgXeh42nvZ4Gt7Age9zRps15FnpJHL9zDu/b4co7
Ytc8WTD8su/CvOsM7PxZtHNUTxGtGzXup+H1v8gdYqbOmoK+8vXD+qp4/n8x
l2sDy5Dd/dHw0OMRuPfb1b02bAWUZX68qf3GAhTfc0hlpbUH8lEqbaqRAro1
W+S19fgcPE8NVIysroM36SN30r0U0KW/Mp8Z56ZhkCJXYlTDUywtYeB5sSR+
fSBTmLJvDOZtTl/qOtOIbfp9L6L4jTwy1S5Qr60agD9y86t+ifVjpuK/I49r
yaOPpcnXnp3thH/ydhSGfRzF9o2K5GIJcujZYYdMJZGf8HeD8trBP9NYoNV1
t9YlWbQk5mtifvUpJAde/PSkmYGNLZ0efBwng7YaHCriv12OXXS/WvCCvox1
VqvNZ49II2XOLUVNq62Y7vTZTm7iKiY6nLxXX2Edqo5yrfu3/g+WvMdxr/Jj
Atjb/b1v77IE2jbiNzub8hdr+vpD52QYCUhRJ/SuxIghuaKrO261TWF1eq8S
vxlwANn4XSXWAjTUgsQ4J7bNYgc9jpx3neIEX8UVt6TMCKOV4R9WvHzzWNyk
vKwygxPwOVzo0BwSRtwBs7t20+cxrtCPEi3LnOAN6epaUZswsng/OXpFdh6T
f50Yr8TJBaYPnE0ohsIo80lWyLdt8xindMSr++u4wK4Ov+hrD4WRfsuxkP2n
57HuP86kU8ZcYK1LoTlqozCK/3Uw+v27eeySzymupngu4G3v9cYqSxCd/ftP
Y/HAAiY02OzZu4UCni1taKrdzYcacmh8ZN9FrOGnX9WAJgWkl6ydHpDnQ46j
nDGq9xaxaIGrLb06FHDj0Icno5x86NVvuzfmkYtY3Z21yq+7KeCTvefYj1pe
5Eioun8/ZRFz8vhUQ7eggE01k5XVp3nR2cLtoq3li5j+kvgn2mUK4HbzF+z1
5EE7mdZ89QJLmMNY+tM3CRRQFnLG7l8KBUVL7L616/kSluYU+cIrmQI8yQck
OIIoaELNa9NC6hJ2vPPDrl0v8fuer+LhdqCg95XPk7PeLWEcw1c/JGZSwL40
+yvdqhT0OujcMPXrEuaSMibXnEMBm/VrFoo/cKHl8zcOFvQtYZaOn7aNfcfX
t6p/aFTEiaLa/IDzhmXMKD5TfbacAnozTuabJHAibssHyowty9gtxYUXEz/w
uN0suKTny4l4bL5K3Nq+jI2bmhz7XEMBxZI/D43u4UQfv9/Z4Wu8jDU4TpVn
NFKAzu1lTvdSDvTCo13o3KVlLCzrh2txNwUcM6L81f5ORvUnrnKkv1vGqLVW
xdM9FBBfdmnc7gUZWVpcTCvIX8YOPdbnpfZRgM9R48+evmQ0dS3F8sfXZUyF
07BS6g8FrDzNDrmoS0ZmdocY3fXLmKvQMCIOUEByU7SnPo2MpPe/4hhqX8aU
pibrmnHvkn3Dx54moRonoYOjf5ax0LsK2/YMUUD5tzdsPBnR7kcjxaOMZWw6
VJ2vGfccPTeLb/dIyHI+jDW0uoyFfz65cnSYAj7UaMupnyeh5ciM9F4uJnZn
841yhHuCYJ5LEEZCaT5Jlb+FmFhO0Ekl8REKsC4R0ClfR0LWx1RcaySY2J9f
Ur+tcTdbLrs0vUhEHC5mH0rkmZiGS92TQNy100ooXM1E9Gz9ueisTUwsQShT
Pg53RqURD9cHIrpBpCs938bEbDL+asTiLi4ieWk6nIgw24ue9/SZmP3NYV8f
3JmWFxXKHYko4U5qvIsRE9ssRSg1x333ul8aQfuIqF/GPfH4QSYm4Z2Uw4l7
hY9H1BZZIqoN+RW5y5qJcfdv4crEn2v3dubuUiYBQdfVABk7JpbnJ+OugXvZ
bbft2G8CKipNClpzYmJh9UPvU/C4nRnw8MzMISCpSwWvem4wMeMjDWf0BinA
/d9yzXYnfK7auv953F0mtiTVuu0cfi4eiqD7zD4COiuZ+fDGAya21nwt+Rp+
vps/vdZykSGg0r9Wo6axTGycI2ZuF54PA/+gdcqrNZj66LjKQgYTYxFfeMV1
UMDGkhJRGT82NI46Ob6nGveRyPHRNgrQchVtFt7GhkY7Oc0Fm5gYyUb+kFwr
BdicGd7fNrIK954VLejqZGJblERDdJso4OipG25Dh1ahw6cEDs9JPM5K+59x
VlOA9EzFA6bcCgy+776aKszCdIFaaQ1eX0ff9aQrfFmGbwpcXjOOs7CIWAek
kU0B5wMy0y45L0NLiYx2aMvCRr5333d7QwFHrL/13Vu/DF9ZKqWFO7Ew0UE1
GIXXtePqziLDgCUYTpa/teEWC1PfV31rfTQF6ENl1ab9i9AZ3rC9mMjC6pX0
nks6UsAJ2tX+K9UMKP6PfERzkIXJpiRfeHCOAlxuf1qL8mfgz/uJ5jPBwr4U
Nk92nKIAo/RFqcfaDPy9RaRVMVjY65pTsTyHKOBiE8FhR9IcrC5q3HOZcwWb
PCh/LGU7BRiLqeQRr89C/sAo/5/KKxgjwXHeeoULlKpfrBoQmIZKvDkGmy+v
YIYvvn2MdeAC+UedW8edh6Fb80CmNmMFG/KiU5NOcYGAbIsrPr+GYF/uCBfH
6gpWqXCh3/UQFxjUWW84qjUE7fNavrRzrmLT51re+u/kAspjaolnlgdg/5O9
b56Kr2JydPcEMR7cLbYYdQX1Q13fpTSnXauY9OiRueJETnDi3t6/p7a2w6PM
TQHXg1Yx49E895GnHIBh+tOX/TsfTtz6fk98PRszD9081RzEAbycTAwd7n6A
A1PVX6s3srGtBvrg+nUOYOubxCVonwF/JEveCtNiYyuCurez9nOApYZlaoeA
PTTmj6dqmLAxPza7acs/MjgpubEzNeEjRr3iCcXd2dipwL759K1k8OJvRPLS
vl9YZdxn55t1bCxsd/GJlktEwFDny8Nm+rG7N7YVCUWsYUYnXmtvOUAEbtI3
RLIe/sF2iv9Rvx+/hv2bSZqV2UQE9Q+3Uc1VBzAulcNPhTLXsA2vvf3q/hLA
/ne3U8lnB7HS9iNqZmgNW7lUsXTkHAFMG3VoPC4exhgbjRfd5tawJLnv1318
2Rg1NmT1m/E45pv+64u+OgFEVVpbph1bxmTCk91Hs2cwErDdJp1AAMMPpL/N
rC5hlV1VvNkjM1hGYVwhJZUA5pGGjF/6EvapIH4oSnYWM5z/k774mgC8TY+K
2swuYoYjh94mP5jFkkY2LQwUEAA7ZKR4390FbEuAxskLp+awuTvvzEebCCBz
hOqddHcO8xTqLHz6g4FRLONzvPiJYMxnsSpPbg4bM9fQ2jjNwC4brMt4JEoE
zo0vclRLZrG2tLKlcPF5zMHJ+1GWFBG8MeH33seYwXx3H39WYT+PuUUomQyp
EMHj/urusFPT2F31mw5BY/PYSSjx5KgRESwOVFofVxzD4j+jLNuiBcxXgqw1
60sExYrjVyfMR7Ftznsvmv1awAo+FnYtBxFB9L38d+jmX+zfyxyu6v4F7Hdz
XPVqOBHI7XbeZVY+jN1QWeO6QVrEdBP/rF9+RgRKG2Nm6BNDGOVxIe2R8CJ2
N9Kl7d8LIlgx+BNrTB3CHnznvqa7fhGzHVW+05+Jr+Oiw+A9M4Ad9J08SNRa
xLDdQjs+5hPB2a2N47kBfzAT6lFtWb1FjGfribjHxUQQsH7OeCq9HzsdIqT0
ESxixlyDAde+EwFtJi63sqoPm227yV9itIjxFt1P3FtNBP8EPCUTOnqxhyWv
FrabLmJbbzyMFGgggutfRPtp8j3YxAvIJWu2iMWoDKw0tBJB3r8Oe5pjF8Yz
GOjjirtwkGFYRA8RLFMPvs5714GVXd/8Sf3AIjb5+E+nwRARlP/aIMM/24aZ
FSdoWhkvYqezTsdOjRPB1i1dEbq6rdivvN0PWg0WsY0PKCejZ4lgSMVc85BP
C/admxkI9Rex7lHt2k3LROAR/rUuj6sRU+/80v128yJW9s7cHHCRQFv7CZa2
eT3WOJ7m+E5uEXvyaDyxiJ8EeMkivrJKtdjK9/l2LtoiXs/tqmqiJBB9+69J
0J4KbCiZduj7/AJGO6nhOy5LAiKHDm5Or/2GreX7JysMLmBfPXXCdyqTwGOT
K88+F3/FbFqXb/yuX8BiHI/Y3VYjAcpD4wcTvDlYzeTsP930BWxt6e5U2w4S
8BQkEvL10+C0y6m7DTsXsM1VFUkzh0gAezf6svHiB2jWPvvor/QCJuqi0Hjt
OAmQf56NtMr8BKdmHRRC2fPY+6kPsz2nSEDw9YW3zuGlkM8jR9ypZB6r1evt
fuJAAnzcQyURdbUwNl/0WLbqPPaJuzv3zG0SOJ36kVlT1AHfDZROWJfMYb3t
TT/4X5JA+B9nc8lNXTBu7rWAV+gcduDWr/mnGSQgQA7efCq2G/qrOEjoHp3D
Iuc2sUTfkkBYqQiHumYf3PzJYHPC0Cz2uY/nbUsefl8+Lb2u0T9QXTF00Gpp
BttGFy4OKCOBM4RkbGxtBCLDd3a56B+2mKIgffgPCUypmbQbP/sL60KN2yu2
/sNe89GVPw6RwNsKh+IrGqPwb2epdFjCFBbFu6pIGiWByun0E0PWY/CsVUL7
XpdJLIE3wuvcPxIQ9nvdGh42Af2GCq8FMcewMcZ5y00sEvjR+2tL0q5peOtR
bOXlnCFs3omVVS9IBvs3mv/wdJ+Go45WxRsJQ1jqAQu1YWEy+D07Lsl4Ow1v
s8w4d1sMYhcCXU8NU8mAO0VQvkpsBoaYDFq9+PMH6/4p/zlDjAw8DGJqnnXO
QMFo5cO7FnuxvPsdRhvXk0HYt9endvPMQp2t4u59Pj1Yz8uL4o9k/vv9W0Km
i84szAw/TWaudWHiMszkEVky4NqZs847dBZah9UvTrHbMfHLrszDCmRACb2q
y5Cdg1/6rzxO+9OEnb7ycpOaMr7PtvOz2fj37yIpfFRCpxErcDZwXcU9Q6XQ
4o3jHKzaEZ7mH1yPvVrK1/20kQxERhpdbV/NwaatOktme6sx/4qItz0qZJAy
37cqXjEHjQ5vCjZvrcBqqjniDqqSgaWz/1vBP3MwUeSWv/bl71hk6pZbGbif
6B45tm9lDg6/N9t9nwGxfTOXvIZx7/OM5PpEY8A7U65+HkJfsEFBtQLBTWRw
5fzRBYfNDMiqObSauyEXI/1IOSOL+/uSigfHAQOSzvE98nLJwEYLSx9L4M5Y
L2IbfIQB0+1ejGAS0dhatH0IE19fBdZuZVxgwPdrea9eeQTDoDCCfTnu4gMW
U6nuDMjlm9Y2aZ4KlwZKDnvjPvAiMD82kAF1NX+VnXzxAe7PdwwVw/2rS2hN
dQQDbj7m8pMroQD2KhzXTcTjMEpjvTB8xoAEQeZO0rOvcF/wxUgB3F3vPfvF
8ZIBq5WYg5drvsHPD8bKHfF4GoY8kxR4zYC+F8+i4AMVUP/aC+F3ePxXWwwv
2WYz4FDwAe24qiq483xmRscGMji4PffXag4DnmmOuX/RpBaCPGc0p0QG7bId
d8fyGNBqZn7y1Pl6yOdzK25RkQzIRoH9Gz8y4AOxo2ubFBrhpnMZDsN4Ptgc
sXL6nMuAj0SSdwT1NcHNE0KXkTy+/1dbipLeM2C4/ehB86QWaPDna0+wHBnI
8nAld79hwE0V+xydTrVCV97XJF0839r6Li17pjGg96lWylfxdhjiv0BrxvN2
7sHs/ppHDJi3eHZr9sMueHPdKGeTFBm0HkxMCQthwMScDQJixj3QnNzqoCNJ
BqnifntybzFgnF2A8OG1XvhGUr8oSJwMRnqSjExOM6CL6B6lufx++Lrgidm4
KB5/YDpfcoABPbuFayhRf+CRhLtCZLy+dJ7dufZGlwEFA27EW18agAeF9rRy
4/U4fSbo8CI/A34siA/wkRyCeWdrQ3r58Hko+MjjxvQ5+KPlvebHa3/hYzUd
mVISGXBIKHy1fjwLJfY+PeI9OAWle/Y4xUySQMjBLEvtK7OwiJ+wNT7rH/yl
sfzw3RgJ7KbTumsNZqHDtuJnOXrT0GvcbePnERI4xXgnazYxA+/FyhMuEWag
maFGfWY/CRyp9/o3rzEDbb4rnte9OwtzfiilTDeTgE6o4a7XvP/gYR/rldHz
8/DmBn/hC19IIHNPV+2ZpCmoecBhwu/TPMz2aP1F+kQCM6XR3I4aU3Bn83HN
k9wL8PrM+kvPckmAsU2O/cRyEg48Kg/teb0Afx/D5rLxfltXnvzC+PY4DPLd
+pw9sAh9pAJ+3knE93/urWFKxAi8DxTqO7cx4fbA1ay//iRgcfvYsOqHbuh8
ckLlDsaGX5Ds4SlAAlFn1d2CQ7tgeudH0gdvNsy3vdzXrU8C9QUTdw6d64TB
WrHy6/PYcKtZxuFq/D01zezvuMDfDps/V4bkKK5BfoPFI/EaJJAV+K2jxqoZ
arcEXG1hrUGJFc0vknIk0Hx52e/6/nKoYbTx4OkyApLMOq3/lk0E1q9WDNgf
v2E/aw3X9QqQUN4Gi8fJhUQgKsC6au9ejinceYzWyZPQUe1T2cv43OJw/+WW
VO1KLDPmZ97SNhI6Vhv283AOEWSe/ZDgWlCLOQhEfHlygoTOWYVjpFdEoDOd
m73Nvhkb38la9k4kIbdFDrJ1LBFYKbYE/PHoxfSkdNJjxcjoupaheI8LEdy+
t1bbcKUP67poa7hTiYxk7zxdr+ZMBLsLwxc3y/RjFW4nzoRpkpFV2ZFwbwci
CJPZ9BLd+YPxL6hY7jAjIxXzG6nUM0RACc4RljAawmjRNWc7bpFR6uTVzt34
/G39XuiPXOUYZtz96/NUDRm9ry7/6alEBBKL+x5Ue45j/l21D342kxH18qRu
sSw+j+nvJxlunMB4qmR7L3STUZ2g3NIaPpcal1VLJwVPYn4RP+UqJ8nIWFjU
KViECLq+Tdp3yU5jyPhd2TU+DvR+qjQ8hE0AR6RqdxObZ7HbYScLhvQ4kOnv
1IsX2ghAH/3LHlGdwzI+b2uqwDjQ7im1nuf4/CzOjHvzyn8OO/xL1vaaIQfq
Nn12vLGOAPZIdX4t2MTAth9uiBa14ECb65PV9MsJ4Efdxallv3lsU9fbJ1Wn
ONCq0Uw2KZcATnVNyKY1zWOuxMgbM2c5kKu36CXNLAL41F5xSkllAbtD3qI6
dI4DnfipNnH2FQEw+lgC6fic9GTsX4WWIwe6z3ij8SmJADY6C1Gfyy5hgkgh
wsuFA3kqqP49Gk4AJo97Nl28sYRpqzsp897gQNyL+6oj7xHA6ZDLT8nfl7C+
JuEj11w5ULnaL5OqAAKwzWxTLL64jH37kZb1wZ0D6RTkrOl6EUDIFYvUlk/L
mOilueXImxxoqGDPpqtuBPB5j5/eNwoTO0m8LG7owYFavd62vLhGAONt518G
nGBijyUeRNfi3hZPYzVeIgArskyc6GsmRv1zblbNkwMttz2PIV8kgKudf1o9
l5kYY8jjmz3uPY8vP9WyIwCxa1PK2aYszPR9230X3OU9PpLsTuHrZLiafnrG
wrpD6DVHcI+UKKwJP04AXEeDKFGjLGzLEiYgjHv4yaqJfCsCmLrE3rxr5wp2
/hmzIQ3fjwCPrm2POQH4s68EFdxfwZpY3vFUj/+e94w0pwkBHI5yoyluXMVc
qe7at/E41FAunbbYQwCRxaIMEY9VbNf3bURPNw50LFmz8dpOArgXnmDdULaK
JQ0YVFrg8RQ+6e8VoU0Ai5Pn6KXn2BjDY4taBH4uwV203ZWb8P3fUmm3e7aG
XX5w0NzRiQOtsxJYVBInAIkF2mD5GgFYH+D26znCgWxHVOpZPWsYl43edOEG
fK7/x1REhzjQqLGO6FrzGpbWuv9BnBkRHCt5XXoXzzflZCPmavUadqO1x4ES
RwRx6X9u5u7nQGEdIGzq0xrmKNTnWorP13Wlsl6fdTnQ9QNfYp7h37+Fbo53
k4+QQQhFL+MzjQNx5FNnBXevYQsFIj0bIjmBC6/4m65iMuI5WcjWf8LG3K1V
ewvfc4K7XoNkegEZXZU/2mXzgI3paylo7arnBC8lKvbp55BRNs2T6hrIxq5v
8ZpfFeYC5iJxFifSyajyeZbn42tszNxBRPRhNBewddA0+/mAjFzu0j+/2M/G
QmP4zDojKCA1VnXo1wm8bxhfE26eX8UsFHxpD27xAEXqkz33hknIZH8a+fGh
VeylhUmHiqQA2CKxFePuJyJUV7JBf5GFJWzb553FSQVbV59VX49lQ9dilcCW
yiVspOLyrw81NFAien1ftMkylD1A1NQPm8e82h60HdooDtbPXZRNHZ2DqSB/
+KfKLBb5M8XZ0FYSjD+lnLosOgEpPkoL45kT2F+vA9UHNq8DdjoFjwc398N9
cva5oQeGMN9FOOLfKQ1G+VOjbIQqYF+t/IVWqw4sSSLf7KSJDGikAJn8xgps
erimLNO2DCu6GB/PviILfs6nLHzt68WKAi3Xi7zKgynZ5WuRu+XA3Fv3YaNv
Y1jUmwe31xm2wNVTUjcNMuVAp2l/YfiBWaxEsE7v144/cG+jO23zqhzYx0rw
f760gKmz3O6/eToKp6/pdnYby4NXA7kvcwdZGEGi98xRNA3fzY91b/eVBykN
7ykzeF6aj2Dlj+wZcDjA4vSODHlgkZhX1+9LAqkn3TOv712Cbtl8gTm4l37X
IV+8RwJALZINLZfgK15LpJopD4SPBS4PR5BA3ubL2wXPLsHVp7QQ8VfywE9a
fPNIMgnsfxq/P/PWEswOtDP4+1oePNh8M7mtlAQm2gK6avKW4FpES+zZLHkg
kbuxwJ+TDDofwds9G5ahxK6l9uQ8eQDLt891h5PBGeMSb2UeJtymeei3b4k8
yNHPVW55zAE2qv52U/3JgqfZihtKcL+8o3egJ4ED8LS67xxpZ8GOM+bJLNyt
z6hfGknjAO/Nc+tTR1hw45SqmMdXeZC42lTD+MgBLnbcdpUkr0DnjFWRc1Ae
7HnxcorQ8t/vCbh4LexcgZj0tJ1QqTzQmg+M7aFxgo1/z+t6Zq7A8Ghty7rv
8qBKQOFbdgwnEA850BQVsArdzrmbz+Hef87vWPRzTuBbLiioErkKXxue9hYv
kwfq5wjZrqmcoEF6m+DXhFWo1/La/gzub9ZEszXzOIHSWckzwwWrEBPt9ejF
fby2buRFIyfgP1O7SWVqFVp/evituBzf//AWNUMRLqCqkax5/SQburf8qmrG
XUHRlUtUkgt41urHzjmyYRGxkjSB+91vR9P65LhASeeOzzdvsqGW/yleiQp5
sFk5ZpOXBheoaKvT84hiw+sL0W4OuPcV7j/71JIL9JzkUXGqYMNLz8Wru3AX
GlCySHzIBfyeIEshrTUotVNy6C/uplN3GWuxXCD8dlhDCliDjrZfhBi4TzDr
N5xL4gKMHOEmLcs16HLZ/THlhzw4J5i/QfY97gYuRw5dWYNjaT1TQri/5+dn
3C7gAh7Bxxu6bq1BD5F7NuK4Gwo1mLVCLvCdKV7rGLoGa+ib7BRxH7m9IS60
Ht+/lKm+d8YaNNx5c2Uj7j9Vbob1tXGBkwuV2Wsf1+CbjPjXm3EvO5XHtb2f
C5y5sC8x6PsabLlY6qiO+2sjxBc2ygVCOwGFu3EN8jkI62rgfkDa51nXDBew
XjCdCO3Dn9cvW1wT932SP95vYXIBhRsjZrz/1uDdK994/vNxr4CDviQK6FF9
uSF0dQ3mtboK/LcO8A6/WcNLAQWRAfpkLgIashhW+O++7JPlShKiFDBbUKWw
V4CAUo32Hfhvn/GnhU6fX0cB0ZuvGfnRCChw/Ye7/z2X1lfTdVmKFMAfty2t
cB0Bubge3rIedxgrrKmvTQFGB7XpmpsIyFC3OVEM94P+Z0IC9CnAUHdZ2VmT
gDZdYcv9F+fDWesulhtSQLjVrFvaDgJifhqwXcXPa+3hlU8mxyjgQefjrzRj
Atp6emzdHO4L4VD1/hkKiDSuLDI7SEBmURrjI7jbnudQqrhIAde79s0FHCMg
+xqRsjrcPboH3u32oID5vxuFJ84T0Oui3eejcS/x9uZfF0cB5cbarE93COhc
unWJP+56jI68g8kUcNhlZ9lICAFNqXVuvoo7TNnSfyeTAqrtPpSLRxLQtYDc
/Ua4XzfYUNtXQAHEGe4bNxMJaE9cuucYnuciT+qHI9oo4OFfpv3GQgJKfuE+
zI37waxrHGmS3KDaLeHOxTkCymWbzj75Jg/WUY3XPsRzg6NPhHlMLxKRiqvN
fmfcz1M2maq95AaNMnSbEWciyvks2rAHd5enSvszXnMD1udpRpArEfnNLYYN
4P3hliLjxJPP3OBd8w2hr/5E1MBzL0YR921+nL0Ov7lB0Wm/6o3xRLTBtljI
D+8z8m7Kx6pEeEDwn/Gt7XVEFFyUcCOxSB5c8R5SiQnhAYcG5V1zdUmIT8Ip
NjxHHgg2z27XduEFJf7H07QpZCT49kaUMu6HvemJDA9ekJP255S6ID6Pi77P
QB/kQYT1hFueHy/oKtmmtZFORuIOYMPse7x/xsq7qUXwgtQlPT0xRTI6LC92
7UC2PJD8G53Hl8ULHnzyyhndQ0bJD9aZ1r+RB47xfuv8x3iBAwrkcfAgo4E6
l3nNVHnQ5P/Ke8cFPtCdZlqeO0hGE/lGbkei8fy0U2ieOMwPLidaJUZ+5UCP
I5zXa1+QB7XBZcHzNEFwR2tLgLUtF3IWNl2yV5cHw8sWY8spQuAy1xcB698U
xFJrDwobkQPjoYZGXs+FgVUXK596hgf1mq2t+/tMDuiud/dQNRcBmKVB1PpC
XsR9qddRZ58cmGl4lOQ6KQJe/NSs/ErgR7u/e3wfyZUFeyb1hJMjqOBVp+2T
ikMCaI+r9XBbqwyIrIhejBIXBcvB6KGKlyDCujzCFhrXg66bDrolCaKg/RWh
/lyqEEoq4dtiXCQNjDu5844L0QDviK6ltY0wOvXgyS7PlHVAOGmPrrQzDfyq
2/5Wt1YYZR14d2vhhBT4ccPZzqyEBspyE6Mj9oiggQ5soVVYEuh3NfvULtHA
zZnp2+T//j9BRIe9jk8SaBwhH329TAMcjznW+yaKIDlT6HeWUxIoFzJ67zJp
4COZ9Gs+SQRdKrwy2rMsAWR3ltF0VmhgRPLVhcEUEdRYKn+h9o8EaJUO+huy
RgM2llKWnzJFEJ/3i2G7jxIgRlx3fIqTDtw2/BtQyxNBNw7Idp07LgEomh3D
UIQO/hSMy52vEkHBj3T1q2LFgWtQKLDZQAdqp7YJDM6KoH+mtYk/IsWB/c0e
Sjfu7SmsZUmGCNJ8feluWag4WFHQ87ZVpoPCbV+mDs6LoOyjgR1ffMXBok/Q
CbuNdPDDanIqf1EEP8efnx5dFAe9fD/YVqp0kGYrZ+C1IoK0h79Lr2qLA+x1
XwxDjQ6C91ycreWkIuh/xfhjoxioQiYy2tvooLseORaJU1HtQ0+Ruz/FQPGa
7cUHuB8UtC9tkKAi34uMM4cqxEAhajYdwP3PTXfJEUkqyuQU8Bv+IgauEjVG
H2jTwWBszndBaSo61qXdTkgRA+1MqscvHXyduqFFKzkq8rmaMTV5TQyYX13v
LLKDDupvuD3LVKGiUkLuhtc8YqDi+O664F108GXzubCHO6holCf3Yz5ZDKDn
KeLZuE+N3Mlw3UlF5Ov982iVDlI3P5Rrwf1rZkr7cT0qan0fH9E0QwfOncEu
svp00HGt+a60PhW9OCciMdpOB3VtxYtpuHuO3upLwKhIS0xZd7yJDsSx9du+
4y4eLpt1C1BRlAcH90QtHfhPiG7uw72YlBRhvZeKWrZMfB0tpQNWmZGl2G46
8N5KjRTcR0Wff/PcaXlNB6cVdM+64b7z3Ta/G/upqIxPUK02lQ7Con64heD+
ToVjzNgYj8+sZ+j3RDqwOjtmEI97E+bntN6EisaiD5x4F40/v6IdfzHuepeP
JpSbUlGXcHxVUjgd/Cb/46zBPbpAwerpASqqrJKeiAymg36x+wVtuGeL+otf
NqOiI/33Da9504Gs8MG907g//F3WymtBRW7RJ26dcqODl6R8CSbuk5ayDe24
x0ipnDO+SgfP9sVnkPbQwbbV0Y7Mg1R0wm1sSdMRzw+L+DEe3Ct4uxnullT0
/NajvevO0cFRR6tBIdzL/T/I7D1ERax56i7yKTrAUk7F0HDn3SN9gt+Kit5H
nR0aPUoHOe1HF8Vxnya2vfiNu2K7I/h1kA4GituEpHC3tH++lHyYirIxefM8
EzoILw/s+s+969fbOh2hIk+aL/cTAzrgwaZO/+c8T8Watx6lIqt7V2964ucU
afQpSgL30R596wXcRV8MPrLeTgf5P2560nHXSjf+W3SMigRNmu22a+B/h/wQ
FsFdqHzy3p3jVBSxW71XdBMdaEjtP82He97skJahNRXxiQ8KTCvSgehEuA0H
7mbFw+NcJ6iIsqrikyZOB/s3/XacxeO5IbHzbqgNFV09E1/kg9f/3ReCXiO4
vxDRtzc9SUW/jNTeHuHD68fZY0cn7he7fM25T1GRuql7/CqbBmKv6lV+xf3U
fZ99d09T0c3OzoK9wzQgu9VGwgN3k4NY3lVbKjJ98MxDqI8GGq40Jtnh/jk2
6O8GOyr657k42NlOA1rGho2muPtePraxG/fjWVb112tpYCb9xh4J3HPqnZGJ
PRWFBn3vDftIA5XBznLpePx85OVO0C7idZE21+QfSAMW9x5m+eH15TVZ0eFz
mYpCtl9QzblNA9nyAcqHcC9O0n23zZmK5mZMZ/vcaUBompdHDnex4xbHR3GX
qVTu2eVIA65bcriL9OjgMmzXsrqKx5lIlu41o4FD1X1/unfSwZBCCEn0OhVJ
Oq6T7aTRAM1b495vXTroObSUevYmFdloHv/0Kl0U7LJLexipRQc/S2fkRP2p
iNfn55FXSaLgvamGwhbcFe0q96bhzj+yyT4jThRwiHIKVmnSAUPeTl37DhXZ
ths2JIaKAqklpVEWfv6qPMqXDgVQEd3dZMH7qihohBEJFlvp4FWbgc2tu1T0
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

      "]]},
    Annotation[#, "Charting`Private`Tag$4536#1"]& ]},
  Axes->True,
  AxesLabel->{
    FormBox["x", TraditionalForm], 
    FormBox["y", TraditionalForm], 
    FormBox["z", TraditionalForm]},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{353.32193396934844`, 332.2266336836528},
  Method->{},
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.3678750574226013`, -2.8435857196632894`, 1.2218584542442414`},
  ViewVertical->{0.19368231387481297`, -0.33577811387877593`, 
   1.3955053906915391`}]], "Output",
 CellChangeTimes->{{3.7538160105204754`*^9, 3.7538160683752213`*^9}, {
   3.753816159328975*^9, 3.7538162110885353`*^9}, {3.7538162611866317`*^9, 
   3.7538163270357313`*^9}, 3.7538185585140133`*^9, {3.7538202049828*^9, 
   3.7538202579253335`*^9}, 
   3.7538203363183947`*^9},ExpressionUUID->"91de3826-e60e-4c52-b395-\
19471e7cef86"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
Axwotmqa/Vj6CrZ+uFn6miInIpn1whXrRaxup7Q9OsyJnt5d9+wZn8W6+V2C
9jpxIllZ/bXjvlNYiVHX7cHjnCgo5EB1aPMYhtpq3/ts5URxGTwdgm+GsUjk
Xvu1nwN1nmWWGkx2Yykh1oUrZzmQcfbfqPzEBuxJ/IMbrk3s6I18hqx4Uypm
/eDM/hUBdnTsnMLZnkdf8I/K4xnHqGzI/5vwhf0R3/Ezhy8vqf1bxQ8ppkLF
9X789lOh9yOWy/hfHxOxAKMR3NP8+LF11wX846eSKLbzY7hMhYnMpW2zuAgP
cwzmJvDynNmdxgWT+AsFVeeo2im8d9+c8jGBv7jmO/WrG7bN4FR9hvet44P4
jcs3jXXos3jm1CJ1aPU7fjPb/9/6jVlc/k/uvzDPCrxbZ3+rkMcsfpJk8OGS
/XtMYuv7uvDGGVwssETLw7UV+2VX08tdPI1rDayLDnT3YWupbDbbVKfw3V4u
7hJ3RjCJbefug8YEvuH1Ua/hrH9YUsXrHUmlf/DR2t0raZQp7Ku+R6i1+zB+
dE/JpdNBMxi/eCbY3evFDR7lDoZHz2Eq1Zu3X0toweuy8sRg7wIWeN5Nwi+v
DJf50GJelrSI+bfu15n8WoQZSTx0a0xdwrr+e3HzHq0F+6+7wyDGahkbe6oe
eVykDzuiICoyV7KMvdny1/WHyAimpfCKP+7HMiZaKSOXuv4Ps38SsvXEu2WM
88HZlXujU5hNWx3NyHIZex6tfEN87xwmT0KyB/AlzIhZmVkTuoh5D56y3Ly4
iDVej80QyV7BNrRuZHPkW8Qy2g0386B17OrTlZMd8/NYmK7n+uxhdrCObrxe
VDmHvZI/svVUEQfI1Ka+kQycxSrr+Tk3ErigJyQmENFmsEb2M71Wx7nh/EtD
G5GnU5iibbC8ZBwPlIUEBBFpk1jcoJhrwRdesDOT+JD9/g+2VrDFsXedHyxc
qpvO2I5gt65RwnQFBOF9+S1H7ulBzOxjwSAPvxDsS6uJ5p7qxDrpabScIWGw
LsjCxnpasIWH/x278EkEUjV/rytFfMX+EF7Oe8aLwuNbl0NjVIPxwNXEqub7
BEgMe7cJu1eOx3eEkDtYfff5dghMiqjDs4qK+j+z+vS3/FcxNRNd+LsQ0GOf
IILgbFXS6EofHrb1Yu3z3SQ4aVnYzhk4hCd+VppvDSfBzEC2UrDLXzwmAC/y
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
       "]]},
     Annotation[#, "Charting`Private`Tag$4577#1"]& ]}, {{{}, {}}, {}, {{}, {}, 
     TagBox[
      {Hue[0, 1, 1], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
OhOxOuTJNGryPaAr/xtFVy9vfl7JaVz7YY9i5f0x3DAewXWe9ANG8gxNXYqC
nxxDVZt9aGizk5d18iwF61NeG2u505BXo9DKWpGCdb91dl5/TEOX9uCbzvco
uG/FTdoqZRp2CVSP6AVR8LGNXNNFFhoueG48cv43BdN/Grmf16WiYqvULu3C
cdyiuF5Q6joVW9uk5TRrxzFxTqxIWIGKr9TjHRQ6x1E1S/h2nzQVz6gfltxO
jKPd5bHTKzmouFnonIj7jglk3IXb61Om0IhDdZ3U6wl085stl5ydRFvLtm0z
ypN45MJ1hysTk3h6O4vZ9tuT2OEUmHu7dxIpX2XvqT2YxEWb4/lmZZOoFnPs
eKTTJH5mk1e97DuJm87qbp1Jm8TbXcFfqw5OYlKc+LAy3xQGaX4y4DeawKBj
K76I1U1hvdHU3+PaEyhe0exV1z6FSjlX1LRVJ9ApxNbp/tAURjiLi/sfn0Cp
VmrSux9TKCXWQSvjnMD7F9e0Bm8lPW7PZgOxhHH0yZzd4GlBRa7pur2iFAru
ZAtPoaylYeVeG8tPXRQMrbOdrBSmodJcTMvuegrK5/BPR+2mYXcrZVQog4Jy
6UlysidoGDfbGVfmSMFvaknsoEvDnbX2TyQ3UdBnqPodZyoNeVS9T7kqjCH1
1PKt9vPTeH6TzNOsM2M4kVdlVagwjWclQrWHD5H+biunEKE+je3uTYf2CY2h
b9WPg8qG02iV7a3hRRlFv5HrYfdeT+NzAY6Tbs9H0ZZvTlT/6zSaa7Yc1UkY
wbd6Yqm+12bwzAvHT1xhI9gso12WemsGW8Ue78h8O4LCf6I0KvRn0Gk1VXXe
agQ7Qz9+67OaQRb7lb1KZ0ZwHnbVFfrNYIuyVcWrj8O4NSDr+oXWGUxX2V9R
Rx/EuHH+pevyZB8PdNV3NQ2iYEBD2mk1Or4/fdmuP30QTXaL2AjfpOO8M/f3
hseDeJ+j4nCZER35FXMPKSwNoBVnr3iqOx1V9GqUK1YPYL+vscTKSjpeaLoQ
S9nWh46nrVfGyzBwxbiBwM9/vegy0vfd8wyDnPPSp1hHe9GSkZVuJMfA00+9
ulljetFbhydo9TXyOutlmVSxXqxh29VGNWVg5pv3+7MP9GD2kehHwuTcov4t
ulEq3YUXdI3fy7Ez0TvHtlVYsAuV+tv6CzmZGFulQrVc6EQixLFxPy8TJwql
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
/g9FomeM
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$4554#1"]& ]}, {}, {{{}, {}, {}, {}}, {}}}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{
    FormBox["x", TraditionalForm], 
    FormBox["y", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-9.06175930118265, 8.88900792451081}, {-9.683969565819817, 
   9.528526216788494}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7538160105204754`*^9, 3.7538160683752213`*^9}, {
   3.753816159328975*^9, 3.7538162110885353`*^9}, {3.7538162611866317`*^9, 
   3.7538163270357313`*^9}, 3.7538185585140133`*^9, {3.7538202049828*^9, 
   3.7538202579253335`*^9}, 
   3.753820336467201*^9},ExpressionUUID->"a91e96f0-f5ff-46fb-a963-\
679fbac8288f"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
MwtlTScnccWXklICImxImWbVLcjO4Dap8vsE17Nh5eWiOKWkGdy15ltZ1RY2
7Bu+m9WkNouvGWt8Z2LAhp/2yHlx0xyelHfW0MGaDdIqL9454XP4Jt3Wu4Tj
bOBcjoLD+vN4gqbmC3MXNuz+i9t0mfF5z73nxvBjwyWSSPC5bws4riL/PiiY
DRJ1AzE3rBdx7bozxCfX2OC0qSvJwG4Jv2tjWE68y4aEol5qV/sSHvHK+vu2
+2y4qt62mqhFgJWOB4Q0HrNh4rbiCpu3BBiuUvu36iUbZgqf3zw6SoAPSm7X
pd+wQW4g7KTCOiL4Z3Ad87PY8EvNtyLRgwjjU1Gb2LlsCKNr1f56xddjL+6X
rShkw7LX12829BPhEub9tbuIDSdCr3HCVQWAFFLCtCthA2Pn4QtTTgLAQg9N
wsv59c9fruIlC8CHWXdNly9syFb9Qp9vEwCrooXAuSo2KI0Um93mkYAofLIP
1bIh0UL7ZosNCSS+MNR16/j5TKhUtvD1WdDdV2Od9Wx4fWOOcpuvz06Zq06i
72xgpp3bMC1OhplVLzrMGthQ8/m3KcOIDMmeoSfpjWxYuEze3hxCBsGwretC
+PZGC7WlAwVkOFF3oi+Zb79fpeEVOEWGOxNpfN3Kx/OJTMD+dRTo1mj+Msf3
Rw3SJTS4UqB++jOmwbdXZxv8JCVTwNbCeLMkP/7Sol9rcwsFZNYoHEnm55dn
97DjiJQgfPq9sLPrKxvYwYrvruwRhIK/7je/1bAhPLGAe/CKINzaXfXdi1//
hTTtts/5ggCTZpn5Ffx8s9XzO8YEQUp56sO7MjbI797v/FBNCEatLgbbfGJD
jmH8vbljQnBv76GY58CGGB2jsel7QiClFXHjaT4bbOzfVFUThcF2fYlh0ls2
aFDEw5I3CoNG/0He43Q+vmkufaxTwjB/1GHCKI2Pf1F4gPwjYdBO8rKIT2JD
QNqqYrxOGIbL7d5FP2CD73XbjVMUEZA9ahOrE8PHX5+x5+MmEXix6YNvSCQb
Wo5RaMwHItC10k+EGsKGOsPTwXeqReDrhuRHe86z4c8pK/knSyKg7lq0oHWG
DS7tOMH+mCg8ETHP/3eMz08nVi4jUhQivYz6cCs2vCwoCjfERWHHjqnzG/ey
YdfV8AHEFYMYlyebxTazYXybTCrBRAw0XqXKOWvw+btbtAjzEQPFbMuPjivY
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
fLCpJ+LYuVEsfe6z//kfK3iJ1Hb+FOYkllAQn9h3ggAn7qUfMPWcwWaU1RTV
hgiQ+3T7mOqleYzfcN02zUAeMLj9MZTmtIS1ftixUMFHhObe+5khCytYzBo/
0d5EIggGqPWdWceDpDJ3HXygwgutUVGmcruI6Mk3kyeKRbywkBz5owvxIvyF
uX3lPj4Qnx293abCh+oqkYZgCx98Nqv0Zczyoa3ZV/NcuP2Rzcy+5fyGH8Uk
unAurPBDT6FdX4yLACqJbaNTrgnAjuy1G5R5BFGY3unCn1KC0CF/OunedUE0
NDVkmvJUEKy832bpMoTQTck149g6IThs67pL+aoQOto0XZH+WggUorsjnLn8
fuJVuWeRtjCUedl6O+cJo20THuLPdUSgK83QIptXBDVuZZYEvhGB2ZtnSk6a
iqCBTV6V3zVJMLImRFHpughqSDuqmZ1Bgnu+ny+6fBNBmg4NdGk5UdBsXHXo
MZGEflv+sRFPEIUCcQeisRYJrYtJO5jOIwZxHzcFFTqSUI2d36kfZ8TgZMPI
/r0XSeifQWffg79iECG+tWfdUxJa1h5Z0NAnQ8M1kYxDZSRE/f2stvABGZa1
3c6O/SGhx5OclD1LZEghHW7YMkJC/hpqmd22FIg5eFfPnEcUtTy6diX5NQWK
hG1ue1BFUX2/7b9cASqc8794J1tGFM2xD1xYs5EKnb3rRLariKKX1LRTb+yp
0L7+L3PTWlHUdpd4yj6aCrRleuSbDaLoSroVks+mQvz65PFWLVFkrtGTTmyg
wsbyH2JfuXiX2vXdIstU6JCm5F3n2qce7CvVWUUDjuVXOWOuv2jVpTuJe2hQ
ndpEE1wtij7NalnKedJA6tH9kXY5UeReH2fXmECD09dUfw8wRZG6xmqBb69p
gJtnf9kiLIrsQwrvTtdz9US4U2btAgl9kwg/4DBLA+97LwN/DnLrNcFvxCtJ
B4Lfui07m0iI3rQ1ZkCby3eZtzgbKkloLOGYjKQNHZ44RqVnviEhKU7Kv2vc
9336ZcfFssckFGkeXmjG5Q+SzaNf52JI6KjYOyfHXDpcfnqYv8eXhJzOpF8v
qaLD6iaFOTE7EupOJQyc6ePyje6iyAIiIaEDT3iC+BgQVzhEK1QmofK0Kcvf
cgzYfM/Pd78wCS1877a5qc0AY/5f6WpVIqhSz7BN0Y0BAkKZa8OzRNDtfYpz
C+EMaP+nEvEzVgT1X/Pv177DACOXNQqRxiIoSLKgtfsjA9IsfU6PrhJBGaRF
fvu/DCDs2RfnRxBBpoi1V2+UAf5NUQcbXwujiIhz7fvYTPhYcrDuc5wwaq8R
HAtRZ0LA4uDUv2PC6P3qR8kK+kwgZIy4lTCE0YZOqyffjjIhLXF5MqpPCP2o
OX2q3ocJjxYORcSXCiF+2cYrhyOZwDiXzbpwXAjxBRuo/05lgmQzadRTRwhZ
OGW8q8tlAkq775dHEkKrxpmVB4EJAkFu13e/FETu1ttZtX+Z8C2suelRmCBy
2f5IurGXCe4WI5jjfkG0cqJv/YkpJlxfVejGGBRANeyyIrYYC5j0vnlasQA6
W8sqxNgs4BGY2RJxSQBtHdhQP6bIgt//eWqVcwTQi/cGWotbWOBW2T5zd5Af
jV0kvLdCLJA+QfUfK+BHwT1m1B17WODbTC3lmPKjd05ZBhW2XP9Z/72isvlR
3k0b0V1HWdD7BiuJ6+BDPoqrFqxOssDHfqNuSiYfEjJEPLxnWNDZbxCkHcCH
XinXi+zxZ0Har9k3bhgfqqkWXFlzjgVSL4TVtYT4kOH7ITz9Agt4Sw8s3qzh
RTf7G9TgIje+drZB/G1eNBWfyA68yoLK79cFVzvxIhOXFIdv11iwWfvGbofV
vOh5wb8KuMGC7JQDM1rD3Dm6WXiNZRILLtduImS9JqK1t313Xr3DgkuBhVjl
WSKK1A3/43SPBSdutUTHISJyY+dk/XnAgtA43fuz/ETk8D7x7NQjFrSCzU6x
rzzoW27PzOtUFqgn92tUxXPn4rTnf9hpLGhxKhPWPcSDTPftr1F4yoJ9iuic
JZsHuW/8cbmGi/3vfpVWaCIgy+V3mcrpLCjbPRX24CEBXQ3d0KHAxYEePZrV
zgS0IY747SPXvvrLm/zXygS0TK0XpnNxM6OD9rhmBXNs1dMW5J7HOx2mb2y5
gh1RKh59yo3nw9qW70f/LGMn9pVXDHPj5Ulckzhqv4xpHeu26uDmMzGx0Xym
dQnb0fpDNZybb9BkSWmQM5ef0vyqvnLrEQwZkYGdi9hwD6HmPbdew4I9aPrY
IqZlMVl4/CYLNAsFYme6F7A0ZXVyYTwLtMz9RkJPLGAHdCfNC2JYQKz72xfT
M4+dzFUSOnaJBcf263gYd89hn8MqiqtCufX7ffvjgusctvSqIutKEAv4vMfM
0b9Z7HiTy+KUDwuQpMXO6JYZ7MzE6bD24yw4VNuxJtZuBksPcL511Ilrr+xp
pfF7GoveL1R9k9t/NGEeo101U1huy4QtdR+3n0LJ4uR3E1jQaX8NfzUWePBH
iShumcBerr/wMUGBBbcF1Knt2ePY9HBxlgv3Prxx/bTjZOoYZsBzv0WVnwV+
T06teiI4gvntVYjeyb1vD1Vv7eqbHsLsCtafYtQwgS6ovzutaxC7ecXc8l45
E5Lfuz2+VNaP/anbcakhkwlF1tqdJ327MZ/GH3kLwUyYjjM02L27C7Ma9Lhy
5jQTrhpvJ6dJdWL7B+3OJdgzYd0tyeR+vB0jBymKtusxIa9rfJOJSCPmtkCc
K1hkAE2E6PNj9C32vHCH3OXTDJD5duKYzpE8rOHDVDHRhgGeKR+3+yY/xkK1
ZiQ1dzGgq3vr6SFIw/OfbaGnSTOAJDNxdcb1C/4ipM5g5hMdFBM9WINerbju
qXnxYAodZuT6ncIG23ADx1sJOjM0uHrxw6vznA68KLWSmNNCA99l7Qq7y514
4UXN03gmDf7l1h5asurD41nvot0NafAjK3P9uP8Y3lIkrCh3igoXvxMDa3vn
8VARYwlsShQEnpH46nwX8NLUlD1qBaJQfXdm+cryAj5een57SpAoHFeNfEli
LOFFvs/eC82TgN/x9UZJ7RXc4rlEpeKMCOS2Uge7Cngg7m10lH2jELThu+2O
zfPAjHzo2/uJXL08Waj2bDsR/ml3zrnuF4JbHmFJbkCE11Oo7SIIggX536a3
5bzgFXHnFuOhABg6GC28KOUHt1yytp8hH+xb7bXafpEfbEwPsRRmecHW+N+h
FzoC0CS9qcjyOS9499+Ikn4lAInDykLWYrwgV2DNN/pIEKJH+E/gVTxguXXD
ecO/ghC+PZKSE8ID58dSpRRYQnD72zkTNXUeIK/SUbW/JASlYyuf30UT4MmY
3im/Y8JAWvWJ/4vXMv7o6N6j1+4Kg/VMcafV5yVc3b8lTeyHMLwMkfBakVnC
H6h32qrqisCebUaqqR8X8POcCS0dPhK8OmK10UJ0DreishT7NpHARrlnU53d
LO5JzGD9cCWB8rlTT88+n8GxbcPkte9J8P5nEg0ZTuN/5w4Y6fmIgqlZRtWI
1wSOhnUjjB6KQnKJN1/U83FcGrnpiX8V5b4b3tc1/43hTf23in/KiQGpIse1
6+AobugWujrVSAyk0jbUjVBG8P6bX2hL7mKgkZr11vPsEP77WF4bOV8MBJVr
Tmbu7cdvtyhsfFgvBqqtDpXROb14JR/fQ49pMYi9Sjk0zuzBHcxm5pyZZGip
HQleCezCLc+arz2uSYbi1UId+J9/+C42RrXfS4a7nF8uRrod+BVms+hqZzI0
p9HXPLvThtvZ8k+nB5LBoWJcf2SkGX9/Qva/wqtkEJE1Frz/vBGfCruSvPku
GTghri2XXBpwgfr50IkMMliY5Z3okKrDz728UfXhFRkG9+YUtNfU4Nrr3kn6
viWDrHTSQjDpK36146jDF5wMv/lq/Q/7luMdDdMHooAME6I2K7mv3uJmVIPT
TiVkKBz6S36+lImvtb7ULfaGDK+qaFeNrvvh9xVkLmx6ToYnAyl4+Z9nWLCZ
uqL3HTJ4i3xYx1AswqwNTPcciiTDhcql3GG1D9jY/ru6TifIkK+Tm9D0oQJL
bp/kETQkw0urQ6T6tTVYCSlza4Y0GT66yFavC67FKN4Tt671i8Hzy9uEGOX1
mMXU+r1DOWLwMKrkJE5uxDR73f2aPcRA7NG+c/dsm7F4H0KoHUcMsMe2/Wnm
bVjBTqO6XZ9F4ewNPj/LuXYsJkd9u9VRURhwGUg9+/gf9tSrfl5tiARPar9k
tO7rwv5S8y7rnSKBOyUw+dJcN/btu5pkf60IOHcbjb560Yv9u/3oga+6CAwX
mgb2ufRjPnXB70me3P7eGiEzrjSInf0xuanljhDs+bnhcePQEHbIuSROPksQ
lqc+5vZ/GMEMDw1XyacLQK8zB+2rG8XCquf9nCL5gd/XLmlT9Rj2vNtR+KUB
H1RGd8pP1o5jm6rWhlW68UBff0/n5ZVJzIPX+HDYkxW8akxaQFN1GhuPuvDp
hfYiXiAturLacQazs7ysee/bJF7pyz4/MjaHOfuqlE01juLLkbfyI/cvYPfW
7Xo4+7APv8B5fKEtfxGbMt0cLXH3Jy51+L+7LfdWsNV8u02XZJ/iB/hdXbNi
CKj8lPFl98AKjFpdomawhweZ7KSIj6C/2OcTMR+SubqBeY3q12zdiXlY6rMY
OBFNhJxvSnXrxyZqeg00/XjRr6jnncofRzBxBeUbcUp8iPVuDVF47TiWFDm2
ffYrH8pZNxGuRpvEpO07nvu68yN1yd1DRpensH9j+v/F8gig63eaTGruT2Mn
0p0vlsQJIA2FUI1DljOY1/75qzlUQSQ/8VXo46sZLPWDEUP3qiASFv06TsJn
MLY1Udx8XhDZ/ZvNfBY6g52I6b8mdlQI7bKm29pPT2MpQUWat7m6tRNt3T65
fhr7cDjq9Tquzn165ow1dcMUNulYPCR5RBgZFDgOCBAmMebduefPU7lzYN0X
x6rUcSygb+DolhZhtHX5pdOA3BimWRoaz6SLoPP5L2r6xoexkONX3t7TF0E9
Ut6/6J4DmNcbneVVriJo3TqiS1ZBD3ZgfGWWECmCfPe3mG5v+Iehh21K4XdF
UOnigePD6a3YUBvuPM7V/a4HZXNfuTZgOcMa3+4Xi6CT1+p0qjursBhn6t0v
ZSLIT0ypofxYEXZZWHzz6w8iyKMlKp86koqXWdXtfQAi6G/t1e8RNp9w9059
nrJCEVTNZ+yiR6rDef33KFlkiiCZNBGX9VNN+KHz7VaXueeL7dI9lTDegV+V
XDBPiObODacvHnU63YP/YJUx73mIoACmxle5fwO4N6GGXndABJ1ZHatG1xjF
i8sxd2dNEYQW75867zqOby5XkPAUFUGPIm4PbE6ZxPdGjQjJdAkjYQdpa6eF
WXx53T//vlhhFEW5LTymvID3RjPk99oLo9ab5c4EkyV816vcZ9WqwojQcO1n
fjkBjDcMlr4tEkIRiRp05RoekNzxn61NmBCi5lSv1P0mwmMzS3Y0EkIf8r6n
p7fzgXxyQ/tkiSAS0+VZldHOD9l/Dpx2CRZEd8TMGf+1CMCd683rSzcKosbb
jMbIaiEwXvO49MpDART/W3DLXIwozGR1Xrrkwo/+LurM7/AVgw2fJu+5U/lR
QoOr1glrMmQNpdRVveVDfE1TasokKvRcVbmDyHxI2myfs1UBDfgTzcY9nhCR
z4ri0Wg5OhiIqWWXGhLRoX3GFeui6JAfeO72dDcPOh/VcXRsLwPKfmUr7lHh
QV6LMrFhn5hAjPgmvFNrBfv3nm5+X5oF7uomUxYByxjnaENJIHfOUEpwzhIu
XMLa+/51nGCIQ/Pn66p3ti5i+atEbbxMJODGj0OJpapz2KkXzyWfJUsAv+yD
HSedZzGrGrd9z9slYLboh7zs3RmMbxUYyvmw4eOJP0m/hKcx8Xl23FSUJCS/
MJTIah7HdLN42798koQ/n8W3tVDHMS/5kIIgQSk4hL5d8zAYw86mN8f5X5SC
L0EyzUmmI5jugYpRCT9pWFe2c3r0ey9m8Efe+6qsLPwxulrs5NiArQ2ZCl8y
lYXVx3gPaNPrMLWxgfSTobLQt+Va8dmPNVhXmobq2j+yYNO0UdPUshyzIzSc
S46SA/Okwf5kjww8zUSleiJTDlJKZ3N0zhTh3Yc/X7SokwOr9jcyIRYf8JaU
DBNFjjysvWDjWbarBrf5HWrAyZQHkzMvQnj8m/GzaE1z8Td5yNu6yijvSBu+
/6biI+dBeUAB7P5gvg48yNJG9AyTA9Lh366kmXThDRe8lv4ocmALduvQ5Eg3
vnjJOKdKkwNHOvGWVzd6cYlb2OmD+zhg7HFup0P9AH6g57hfhzUHDkNG96bA
Ifzg8rsdyy4c+HLRpcNaYgRPJN2j/D7LgfO6N6xfqo3h7g6Ti0kXOaC90hWf
NDeGH7l+8HJHPAeuYWJMxpdxfO1qN22FJxyQYaorFrpM4t2PGnR/ZHLgr+WL
q7I7p/DmcubDhXwO8MXBvlH5abzOWr33USkHeqgbt6gvTeN2v6lJZZ+4+ZQz
VSv+zOAqxyKVHb9z4CPvBaGP+bN4tRUPNfAXB9pfj5dLJszh4Sa3quQ7OHB5
dUZZkeECbi1jcTGnhwMC9DnWgtwiLhyhdRQf5MCTwuMnw2cWcRVH6jeTMQ6U
jZX/3F29hDes8K6zneJAqiwlcE/6Mp6venGwc5YDmTM7LoSHrODeTqZuowsc
0H3dEj+lSoDOnzsFQ5Y5oDdu8BHdJIAqHsq5TFCAEGPiovwSATI2XaCyiAqw
w+nOz+vHeWA6V3e9Eq8C3FN26b9ezQMDH4k/87iY5XuuW1abCK5Pr+0r52Jj
23S3zY+IUGO7OGDNxc+EWqV+CfKC2vAQwZPrjxb16N68Jy+cHY7/JcCjAIer
viY9+cULRsdu5SmucEDj0Jucqm18oBi5paVskQN2ldoJAY/5ICBb517nHAeU
qo633BXgh6VGvnUx0xy4J31Hf9tpfjj9/uHP/HEOsFY0bcyr+eF3Y/4n12EO
bLCvqGnZKAD/1FN23e7j9ofWSZOWWwLQs9o86kAnB64vKnrsnxWA8R9Jb+Na
ONBopFGncVgQTNJrZQ/85sC/snKFwLeCwPtmfVPyDw5c3e06qSYjBBebkpWP
VXLA+35bj2GIELSHfVIpfM+BXa/LEz/+FYLCC3oiCcUcIDmQE57pCgMOJrMj
uRwogntefbeF4RTPvavoIQfcrj+QirQQAXT/hd/GWxy4ae+2+CtbBNzUpyef
X+VA1PTOkTASCdo/ntbQ9OOAff1BUgWQoMoukK13kgMVd9dpHJMShcN55/l+
2HGgy51pYuorCk6O5uuv7eBAa2I0NqMoBq9VnG8UaHGgYMi9/VWwGKy7IaR/
UpkDkDsnl1ctBueRz+Mjgtz+eajx9WQwGfgnoxtNRuRhzceiBukqMjzyzLLo
+y4PpXem3vJzKGCU4k0xi5GHGYPSJZ8PFBA7VHyYfVIe2ubqnWaFqdDw/cnt
UQN5EJ+zYVZtoAI6n/yjalYOFj9gqhsvUOHtT5NMHWs52Kcr+LBMggaNe4i2
1uvl4GU+uLJ1aZD7gXkqVUAO7CJv6ArZ08BZ7qUe5MnCwBeBnqwHNKBr8sGN
S7KwBy+QOorT4CLnN+eGnSy8dRmSyGilgbcT+484jyxsTxKaGuDywB3z8N93
f8qAQtGiaLceHVbv/s5v+kQGWP+eOHja04FQZy2ltVMGJtoDW5Ru02FPiE+7
YIA0RK5M35oVZkDxSCunF0kDDKXV6SozwMXI+MW4iDT8zZ3nrGAMSFbZd+7i
PSlwv37LXNCPAeswb3UxVynIa3Ro3x3HgIstF+ZL1KRAXm9rNW86A35/epJ9
J18S6FtzvnT/YoCF5LX+D8GSoPrPGhMZYsC57htjLD1J2FCfOviYlwnhUlEr
68vY4Dez201lPRMId41NZ8LZ8FNmvwtlFxPu/to91bmDDTu3nvznasMEWZ/f
PzfgEhCqU3HC9DwTrlBCd10PkYAzWRN7mxKYMOrSdJGhIwEX3C+cqX7ChP4M
tabobHFIjK6CPx+ZwIv/XBVwShx+xUsEDf5iwnGq2+PLiuIQ0dJ54XAXE47Y
VF9h3WDBwz3jwhiRBaqGhFXxxix49a8tN4fCgneue/erLTNBbI3brK8MC0JX
Nz3szmPCnU9qZtGqLNiiMfryw3Em1OYpsru0WNCgr8Iqk2SCT9+DjDh9FhyP
POLZ8pUB26Mcd4dy/YaFUKylQxkw3F+klnuQBWvm89wD1zKAanwgUOUwCzI+
9Rwcb6KDYXDJrsajLLCztcmKiaHDNqOnKRUnWeDw5LeKgQ4d9FwL3MY8WfCR
THBjd9NA1WL1zf1+LJAeFFYj3aDBQBKpqzmIBc7PiBxpPRo0vyTK3QthARJN
FTLuoYJp9f72i+dZILVslZFwnQoZlEOlyeEsEM4+8n1GmwrpZT82f49gQWyL
xNNJoIA/v1+OciQLRGlBqhvJFPgkEx2Ywl33WtFYeWZLhv2n5ctUufsfxajJ
WT0Rg/ctiXnfwliQlNCXuH1AFJRFVswjzrFgJIl+3W6DKIgc67xsGMgCgn+s
0yt/EkyyHq6i///zLXP2NuI7EdD12n+S350FC8m/c+4RRMDLKOgI7zEW5JoU
XYw0EAbevm2fBR248Wv+fF4QJQS+kim7yIdY8Htd/37dckEAHYFD9L0ssL1R
+1uUKMg9f9SSgrFgjx3YZATxg76snGa7MgtGTb8H++fygTiPg0qmBAtWfSHV
pfTywgmWkIW9EAusD/71nD9IhEd/bPitu5ngVexasS2KB1bJ+scm1TIhxLyj
7N9rAlz427HjKc4ExaFwlRnFZXzy/TovdiITzsfVEYfPLuK36y1SvEKYwPDp
/d5WPY//dW42O+/ChP8GOL5zXjO42i/Bj0/XMoHs1ZlvUDKFX4xSLsmmMqH9
/JxmrcAkfks3KvvQOAP4V3Y6rroxiofk95UezGXA4Zgakl7GEH6Ptscv5RoX
bxqFB6v7cWJx08EjbgygqGq4NUr+w19lh1htl2VAq+aYvM7hD7jk2+Nj+8/Q
YefejakkYhpeY3657yJGB5P8Kr9tb/OwDWaa1DExOjTwGqoPitVianyGmtuf
0sD96ZegEt1GrPin1IigJw00ru/d+ji3DXuRaRXcuokG1+87XbSo7sFMZIIz
Lr+jwpWhbamY1QBmme3/1jCUCqqnpbdP/xrGHM5G3OvaRoX1V3zeBTaNY/FC
vGdNj1GguKA4TzF2EpPDBcRO/yKDReAxdbRpGtsvEy/Iv4MMf+92dl84OYdd
Th019RcRA704Fa/ksXls6VGQ5+aTovB6zcXWZfdFzPXa906jMhKsPfnNu/j3
EqYYFjL8jEWCb4VHYpI2rmCbHpwi2x8TgbMpG3zo2wlouXuDtEeOMFSpajy3
ryUg8ZIar8FpIaCM+Px85cCDSp9uMZzUFoJ3ZsOR4X94UE2DFvu/AEEYahvu
onB1+UDWI51tOQKwtvEMK/YBEfn2l1v1dvFD3e6L8SKdRFRp83t+UYIfJqn5
KtcYvEjDUq/jlxEf5KXNT9LUeZHiStd8mw8v1NISM5NUedEH6ztt9+8RYafq
thNaIrwoIe/xg/vlPND9/k3+mu9ElPMtICx8gABDfiOdH04R0Zn04Kml5RX8
8Om7UsatPOhodUJV7eplXOAIj/q/tTxo2emHi7vFIq6zIzLyrCUBaVOO/30e
OY8/2n3L+VzWMiYaMPbXpngW37Y3f9bi+CK2Q3hXDG1uGhcNHZ1d/MOdA7Y4
6K3bMYWvep6WakCewd7dPUAouDmB2+6LPTYvPIkZPRCLthkbw+fMtt5PqxvF
AoRcVJwOj+LNfsHtjYP/MB96Xr74vX58RjPL39r/Dyaju7dkXXYPvu5Jq7fa
zY/Y/uUxWk9dJ+6sJlP+ZOInnv1zrZHBgxY8Ss29tqK3DYd/Z/+a6/3BVdtJ
cxLGvbifsXmnznAtfi7umf86mwncKydOg7f7PX5W+8pj97ppXC6q+W/IQg7u
Fzyoflp7Hke4dZbTiWuY0TmtxEPWBMia2f9N5fUnLPY7Wkds5QH2Thvr2IQa
7NxRnel71ryg+riiMPHbLyxX45tfrLQAMD0s5O+otGHRS/Mje08Igs88e8vk
lw5MzZ64mJ8mBORHnt9M3buwN3EaPJemRSD5qV7Sxtf9WGrxmWu8otx5MOj0
1QrrISxG1Pi6GUsMoppV5S7Mj2B1K22Td/n//78hgnrJfe58FDzX/GaIAkU1
awZ9BiewjWmHs/uOUeHGlWum7TpT2Naxj2d5t9CAes7ebHvNDIZ3C1CjkmlA
K262aWbPYRfudIeMTNLgz8XssIdH5rFN+3vtTdLocO5W/yd2zyJmk3NGsvkP
AwK1iXfeDxGQm9ZsRYw8E7qW3qk5XOFBFK2u6yecmbAx5FZeiRIRLe0Q75Bq
Y8Kn/e9C8UO8yKTqzHpV7jypGhw6ZjvAi24KCDp8t2BB0LBsUuYFPrRGN6oJ
K2XBv3OlJN9n/ChC11Jp8ygL1gk9M+zUFkBW5rzHJDjceTPs8kmhCgEUeGhZ
uz9YHKz/6xQ/2SWIJuvOmFyWkIAEPR7+q2QRdMW6vfqItgQcFZ6KTo4VQd9z
okZrrCWAVDCdflGYhHg1PhPTb0hA1IGeE4IEUbR91XKr9EsJ0OApE74fLIqO
zE/pm32RgOy1kUYS46LIJtZQkzwnAY/7zdaUtooh3b0tHzIobFhdL7Vp6BAZ
aZ4/2SWnzIZMovIj/goyyrizfLXQhA3Inpw3k0VBeOP+D72ObBDaEDB9ikJF
J7VHp8W82FASrmJrtpuKKlVmxffHs0HvnmpCRD4VfYxUbvG9z4ax8rnCHwNU
pMgXYJf2nA0vs4MrUxRoSARMLnS+YcObqzs9W6xoiPhpjKLzng2Ptr0wuR9D
Q5ZJ71PTv7Hhywaa2G+chvpdUzI21LNhqT/UMn6ChoDw36mWFjb0lPF+/aBC
R5z5BaHcbm68qfq0AFs6qiMlRGcNcf1/WKlIj6GjMFkONEywoUrw2S2rEjoK
/SnuqzXHBsFDn+nRw3R0RMVDv3yJDROMpubN8gykeszwSRyPJBzakphw3IyB
9pKuCNzkk4Sl20mf2OcZKLo9Iq9BQBKKqzGG6UsGSkA7GhyFJGHRZYrE18zF
X1/GqAtzcSDTQJ/ERI/KrWoQFzOK1YwXtZkI83ePf8y1lyLZZOgfZyJTfta9
A4KScBWbGua/yUSUAtHXB/gl4QfZ6Kk5zkSRGCkijSgJnt05B5UHmGhcsfn+
/hU22DwTCwoTZ6GaxAOxBxfYsPmzdIrjDhbqWN2KZ0+zwcspZuun0ywExIiU
02NscEwxrcq/xUK3cpQ9Lw2wofZ6zq+1OAtRz90L4e9iw+2Er1/W9bLQ8Wt9
Mz3NbAg781ymiCqODDcD7//rbxMOu6q0xdHxb2slVsrZMLnt+c/ES+JI8M1d
hctv2fA5IJyx56U4mhIM+nA+lw3TdwNbLteJoyG/s3vf32WDXLH7y0x5CZR4
MruGep0NxKrccwm7JNAR3a0bfkWyYTzuuQvvKQlkJHPA5NMpNpg7/5qPz5FA
L3Z3mU/bseHdGTGnF7US6LG7xbdUUzZUhquYWE5LIPf7XrsD17Ohui9S1EqX
ja5ee783VZ5bD2/2xSw7NuqlOpWbcftdTcW9KjGEjU6ckXy/dUgCVJ/sXGaU
sJFm6hE3+z8SELH3+OzBNjZ6F3Ile6BcArRkxR/w80oiRZl4/YMpEpBiWO9S
bSSJAjPv8atHScCGPNet3SckUeci2TXAQwL0+lpl/S5LoqgbUz4n9SXgSkzj
yenPkqhp4xtzuooE2K8eODHQLYkIhwpVN4lJAHvCONuGXwr97DiY3/VHHN5R
tdTvIynk/SbukqqHOBy/GPG2LkcKrWTIxBQfEIc/GRtmbnyVQjPxlkXVWly9
H8Jv9bVLCjEu6Px3eZYFd4e3ar1gS6OIhJed6xpZ0NNznd9igzRSv0TEHN6y
YDm1J9V/jzS6eiyRaM3Vxd2Jmz+rB0mjfWkf3qyyZ8F4aXIMfk0ayczv4Zzf
xgIsIufW9zRpFNZ54UzLLBNaSggNjtXS6M159TOunkz4knZ1do+cDNq3L+tY
/l4mVLq86CnSlEF3jpXtv6vChNDQr7FPd8qgve92lq9pZsAmx/HFEVcZJGRo
q1FXwADe8xEf9vvLIJOFTn2JGwwIMMK3rLkog5BY7oSbIQPiNmLzB57IIJ5O
tmWoHAMKYs6uf5ArgyrP6beqz9BBA0/6exyXQe1qxp+dntHBxa17l9sfGbQs
slDZG0aH9OILNWldMsjpWcxOqhUddBwSvA6PyaALLqcLEC93TpRx9NwiKItE
v+gY7PtDg4O3BqPsabLor4qJ0+xLGggNKissScmiO1a51cZRNHj8e1aCvUoW
QUyvmZ4tDVgPfm7L0pBFQ7zi9+vX0iDHy9r+3SZZVHlnszeLSIPnjhJGhttl
0WWDHVHzv6hg8M7i/W4DWdQly4iN/o8KZ5Wtkz/skUWunme3F4dQYfhp0eVC
M1m086/97iQzKmiWalirWMoiVYcKe2lFKuSK7QLRw7LIQ59uldhLgUqtnWGn
HWWR7MYjJUaxFCDqGhjvdJZFs0QPQ7P1FFhcTvx5/ZgsCmvi7Mj+QYbM6PDv
Vidl0eFrnoSTvmQ4F0nsv+kmi/4HuIDZkQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$4602#1"]& ]}, {{{}, {}}, {}, {{}, {}, 
     TagBox[
      {Hue[0, 1, 1], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
OhOxOuTJNGryPaAr/xtFVy9vfl7JaVz7YY9i5f0x3DAewXWe9ANG8gxNXYqC
nxxDVZt9aGizk5d18iwF61NeG2u505BXo9DKWpGCdb91dl5/TEOX9uCbzvco
uG/FTdoqZRp2CVSP6AVR8LGNXNNFFhoueG48cv43BdN/Grmf16WiYqvULu3C
cdyiuF5Q6joVW9uk5TRrxzFxTqxIWIGKr9TjHRQ6x1E1S/h2nzQVz6gfltxO
jKPd5bHTKzmouFnonIj7jglk3IXb61Om0IhDdZ3U6wl085stl5ydRFvLtm0z
ypN45MJ1hysTk3h6O4vZ9tuT2OEUmHu7dxIpX2XvqT2YxEWb4/lmZZOoFnPs
eKTTJH5mk1e97DuJm87qbp1Jm8TbXcFfqw5OYlKc+LAy3xQGaX4y4DeawKBj
K76I1U1hvdHU3+PaEyhe0exV1z6FSjlX1LRVJ9ApxNbp/tAURjiLi/sfn0Cp
VmrSux9TKCXWQSvjnMD7F9e0Bm8lPW7PZgOxhHH0yZzd4GlBRa7pur2iFAru
ZAtPoaylYeVeG8tPXRQMrbOdrBSmodJcTMvuegrK5/BPR+2mYXcrZVQog4Jy
6UlysidoGDfbGVfmSMFvaknsoEvDnbX2TyQ3UdBnqPodZyoNeVS9T7kqjCH1
1PKt9vPTeH6TzNOsM2M4kVdlVagwjWclQrWHD5H+biunEKE+je3uTYf2CY2h
b9WPg8qG02iV7a3hRRlFv5HrYfdeT+NzAY6Tbs9H0ZZvTlT/6zSaa7Yc1UkY
wbd6Yqm+12bwzAvHT1xhI9gso12WemsGW8Ue78h8O4LCf6I0KvRn0Gk1VXXe
agQ7Qz9+67OaQRb7lb1KZ0ZwHnbVFfrNYIuyVcWrj8O4NSDr+oXWGUxX2V9R
Rx/EuHH+pevyZB8PdNV3NQ2iYEBD2mk1Or4/fdmuP30QTXaL2AjfpOO8M/f3
hseDeJ+j4nCZER35FXMPKSwNoBVnr3iqOx1V9GqUK1YPYL+vscTKSjpeaLoQ
S9nWh46nrVfGyzBwxbiBwM9/vegy0vfd8wyDnPPSp1hHe9GSkZVuJMfA00+9
ulljetFbhydo9TXyOutlmVSxXqxh29VGNWVg5pv3+7MP9GD2kehHwuTcov4t
ulEq3YUXdI3fy7Ez0TvHtlVYsAuV+tv6CzmZGFulQrVc6EQixLFxPy8TJwql
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
/g9FomeM
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$4554#1"]& ]}, {}, {{{}, {}, {}, {}}, {}}}},
  Axes->{True, True},
  AxesLabel->{
    FormBox["y", TraditionalForm], 
    FormBox["z", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-9.683969565819817, 9.528526216788494}, {-5.710590040475468, 
   7.354079872516077}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7538160105204754`*^9, 3.7538160683752213`*^9}, {
   3.753816159328975*^9, 3.7538162110885353`*^9}, {3.7538162611866317`*^9, 
   3.7538163270357313`*^9}, 3.7538185585140133`*^9, {3.7538202049828*^9, 
   3.7538202579253335`*^9}, 
   3.753820336579974*^9},ExpressionUUID->"a97e8124-cd3c-4380-b8f0-\
d0310479f932"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"\<\"Final Coordinates:\"\>"},
     {"\<\"t = 1033.62\"\>"},
     {"\<\"r = 9.97908\"\>"},
     {"\<\"\[Theta] = 0.74225\"\>"},
     {"\<\"\[Phi] = 74.7986\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7538160105204754`*^9, 3.7538160683752213`*^9}, {
   3.753816159328975*^9, 3.7538162110885353`*^9}, {3.7538162611866317`*^9, 
   3.7538163270357313`*^9}, 3.7538185585140133`*^9, {3.7538202049828*^9, 
   3.7538202579253335`*^9}, 
   3.753820336708235*^9},ExpressionUUID->"c90f8377-1d23-4ce3-9c8a-\
eb799c68099a"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"u\[CenterDot]u values\"\>"},
    {"\<\"\[Tau]=\"\>", "\<\"0\"\>", "\<\"\[Rule]\"\>", 
     RowBox[{"-", "1.`"}]},
    {"\<\"\[Tau]=\"\>", "\<\"160\"\>", "\<\"\[Rule]\"\>", 
     RowBox[{"-", "1.0000004579140311`"}]},
    {"\<\"\[Tau]=\"\>", "\<\"320\"\>", "\<\"\[Rule]\"\>", 
     RowBox[{"-", "1.000000035897243`"}]},
    {"\<\"\[Tau]=\"\>", "\<\"480\"\>", "\<\"\[Rule]\"\>", 
     RowBox[{"-", "0.9999999035121285`"}]},
    {"\<\"\[Tau]=\"\>", "\<\"640\"\>", "\<\"\[Rule]\"\>", 
     RowBox[{"-", "1.0000007741029158`"}]},
    {"\<\"\[Tau]=\"\>", "\<\"800\"\>", "\<\"\[Rule]\"\>", 
     RowBox[{"-", "1.0000011739359043`"}]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7538160105204754`*^9, 3.7538160683752213`*^9}, {
   3.753816159328975*^9, 3.7538162110885353`*^9}, {3.7538162611866317`*^9, 
   3.7538163270357313`*^9}, 3.7538185585140133`*^9, {3.7538202049828*^9, 
   3.7538202579253335`*^9}, 
   3.753820336712726*^9},ExpressionUUID->"4dbcf85f-d18f-4505-ada8-\
feee6b1ca862"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{759, 677},
WindowMargins->{{189, Automatic}, {Automatic, 27}},
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (April 18, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 183, 3, 101, "Title", "ExpressionUUID" -> \
"9dfd0bdc-7ed8-45ca-bd9b-7e8ecb217741"],
Cell[CellGroupData[{
Cell[788, 29, 160, 3, 49, "Subsection", "ExpressionUUID" -> \
"6b6d3bb5-1642-4d92-9c3f-292fd1c0ebcd"],
Cell[951, 34, 602, 12, 125, "Text", "ExpressionUUID" -> \
"3ed31abf-5847-4982-b7f2-022e7e536156"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1590, 51, 185, 3, 49, "Subsection", "ExpressionUUID" -> \
"b6bdaded-54cd-4a40-b515-39729b9b6c31"],
Cell[1778, 56, 317, 7, 49, "Text", "ExpressionUUID" -> \
"8b95f269-5f32-4f6f-8328-1d17a4c34748"],
Cell[CellGroupData[{
Cell[2120, 67, 2253, 66, 221, "Input", "ExpressionUUID" -> \
"75ce8816-2956-4084-8e1b-bd54cc949cef"],
Cell[4376, 135, 233, 5, 30, "Output", "ExpressionUUID" -> \
"727082d5-8c71-428b-b5bb-6d6f1f275452"],
Cell[4612, 142, 1726, 49, 146, "Output", "ExpressionUUID" -> \
"da47dc9c-b3b5-4282-bf8e-cc9030a585a8"],
Cell[6341, 193, 4987, 135, 167, "Output", "ExpressionUUID" -> \
"b12d9235-0960-489e-91fb-824178ccc21d"]
}, Open  ]],
Cell[11343, 331, 305, 6, 49, "Text", "ExpressionUUID" -> \
"07413a54-78db-4b31-9008-e5330a93dd19"],
Cell[CellGroupData[{
Cell[11673, 341, 650, 19, 88, "Input", "ExpressionUUID" -> \
"d1818b57-87cc-4aa5-b7ef-a3751e7fb0af"],
Cell[12326, 362, 1220, 37, 127, "Output", "ExpressionUUID" -> \
"a4ee0c0d-23a1-49b9-9179-3f2f621fa495"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[13595, 405, 256, 5, 49, "Subsection", "ExpressionUUID" -> \
"395b0287-e799-48a1-a9d3-5ab7bf78cbda"],
Cell[13854, 412, 570, 10, 68, "Text", "ExpressionUUID" -> \
"f710b2e7-aceb-49ab-941d-ca521c8bdc2a"],
Cell[CellGroupData[{
Cell[14449, 426, 3351, 94, 202, "Input", "ExpressionUUID" -> \
"c0d37d05-a2a4-4cd6-9695-2b440d56441c"],
Cell[17803, 522, 1964, 57, 283, "Output", "ExpressionUUID" -> \
"2bd916ec-6de1-43fc-95f1-43c013e86a49"]
}, Open  ]],
Cell[19782, 582, 551, 10, 49, "Text", "ExpressionUUID" -> \
"8195d6cf-fbc3-4d5c-ac2f-acc19b511966"],
Cell[CellGroupData[{
Cell[20358, 596, 1756, 51, 126, "Input", "ExpressionUUID" -> \
"1b449e24-70fa-4108-9e34-2bd00e903a93"],
Cell[22117, 649, 3692, 105, 176, "Output", "ExpressionUUID" -> \
"59ad0fc5-3c8a-47b2-ac23-25f5022e5e62"]
}, Open  ]],
Cell[25824, 757, 465, 9, 68, "Text", "ExpressionUUID" -> \
"7826e5a9-a8aa-4c92-a7ed-8502f55a81e8"],
Cell[26292, 768, 7776, 220, 563, "Input", "ExpressionUUID" -> \
"aa1408d3-2415-40a9-9b73-cf35bc4a5d4a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34105, 993, 170, 3, 49, "Subsection", "ExpressionUUID" -> \
"418fcaa5-d155-48fa-a5a9-e64fae071a0f"],
Cell[34278, 998, 334, 7, 49, "Text", "ExpressionUUID" -> \
"99321619-53c7-4b5c-b926-583e03285bca"],
Cell[CellGroupData[{
Cell[34637, 1009, 2966, 88, 259, "Input", "ExpressionUUID" -> \
"551d55b8-dec4-43e3-b740-ab85f107007a"],
Cell[37606, 1099, 51122, 853, 375, "Output", "ExpressionUUID" -> \
"4a8234cd-25a1-4fce-bd78-5cbfe08b70ec"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[88777, 1958, 209, 4, 49, "Subsection", "ExpressionUUID" -> \
"6c117247-3936-44b6-a891-45899b345af0"],
Cell[88989, 1964, 397, 8, 49, "Text", "ExpressionUUID" -> \
"58e1d90a-a190-47d2-b8a1-51978d0b417c"],
Cell[CellGroupData[{
Cell[89411, 1976, 4027, 118, 240, "Input", "ExpressionUUID" -> \
"a53f9687-b495-4c3e-a51f-775582a5c464"],
Cell[93441, 2096, 35894, 1035, 960, "Output", "ExpressionUUID" -> \
"9156d426-d7f4-494d-9b70-271e18458878"],
Cell[129338, 3133, 30655, 807, 295, "Output", "ExpressionUUID" -> \
"fc5ac082-1890-4787-95e7-7e1ac037601c"]
}, Open  ]],
Cell[160008, 3943, 457, 7, 50, "Input", "ExpressionUUID" -> \
"8584a317-cd79-4bc6-9d57-eef1a1e94d84"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160502, 3955, 189, 3, 49, "Subsection", "ExpressionUUID" -> \
"d4fc8c9f-8047-48e1-aacd-250d48eb26ce"],
Cell[160694, 3960, 415, 8, 49, "Text", "ExpressionUUID" -> \
"d7f6dec1-16be-465f-b835-89c1e97fe542"],
Cell[CellGroupData[{
Cell[161134, 3972, 7559, 203, 506, "Input", "ExpressionUUID" -> \
"26dc7d66-9fd7-449b-9644-6dd77f7496fd"],
Cell[168696, 4177, 123308, 2031, 347, "Output", "ExpressionUUID" -> \
"91de3826-e60e-4c52-b395-19471e7cef86"],
Cell[292007, 6210, 68869, 1144, 372, "Output", "ExpressionUUID" -> \
"a91e96f0-f5ff-46fb-a963-679fbac8288f"],
Cell[360879, 7356, 62985, 1047, 270, "Output", "ExpressionUUID" -> \
"a97e8124-cd3c-4380-b8f0-d0310479f932"],
Cell[423867, 8405, 1036, 27, 111, "Output", "ExpressionUUID" -> \
"c90f8377-1d23-4ce3-9c8a-eb799c68099a"],
Cell[424906, 8434, 1509, 33, 145, "Output", "ExpressionUUID" -> \
"4dbcf85f-d18f-4505-ada8-feee6b1ca862"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

